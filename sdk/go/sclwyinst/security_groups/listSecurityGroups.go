// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package security_groups

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-scaleway-instances/sdk/go/sclwyinst/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func ListSecurityGroups(ctx *pulumi.Context, args *ListSecurityGroupsArgs, opts ...pulumi.InvokeOption) (*ListSecurityGroupsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv ListSecurityGroupsResult
	err := ctx.Invoke("scaleway-instances:security_groups:listSecurityGroups", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListSecurityGroupsArgs struct {
	// The zone you want to target
	Zone string `pulumi:"zone"`
}

type ListSecurityGroupsResult struct {
	SecurityGroups []ScalewayInstanceV1SecurityGroup `pulumi:"securityGroups"`
	TotalCount     *float64                          `pulumi:"totalCount"`
}

func ListSecurityGroupsOutput(ctx *pulumi.Context, args ListSecurityGroupsOutputArgs, opts ...pulumi.InvokeOption) ListSecurityGroupsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ListSecurityGroupsResultOutput, error) {
			args := v.(ListSecurityGroupsArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv ListSecurityGroupsResult
			secret, err := ctx.InvokePackageRaw("scaleway-instances:security_groups:listSecurityGroups", args, &rv, "", opts...)
			if err != nil {
				return ListSecurityGroupsResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(ListSecurityGroupsResultOutput)
			if secret {
				return pulumi.ToSecret(output).(ListSecurityGroupsResultOutput), nil
			}
			return output, nil
		}).(ListSecurityGroupsResultOutput)
}

type ListSecurityGroupsOutputArgs struct {
	// The zone you want to target
	Zone pulumi.StringInput `pulumi:"zone"`
}

func (ListSecurityGroupsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListSecurityGroupsArgs)(nil)).Elem()
}

type ListSecurityGroupsResultOutput struct{ *pulumi.OutputState }

func (ListSecurityGroupsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListSecurityGroupsResult)(nil)).Elem()
}

func (o ListSecurityGroupsResultOutput) ToListSecurityGroupsResultOutput() ListSecurityGroupsResultOutput {
	return o
}

func (o ListSecurityGroupsResultOutput) ToListSecurityGroupsResultOutputWithContext(ctx context.Context) ListSecurityGroupsResultOutput {
	return o
}

func (o ListSecurityGroupsResultOutput) SecurityGroups() ScalewayInstanceV1SecurityGroupArrayOutput {
	return o.ApplyT(func(v ListSecurityGroupsResult) []ScalewayInstanceV1SecurityGroup { return v.SecurityGroups }).(ScalewayInstanceV1SecurityGroupArrayOutput)
}

func (o ListSecurityGroupsResultOutput) TotalCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ListSecurityGroupsResult) *float64 { return v.TotalCount }).(pulumi.Float64PtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ListSecurityGroupsResultOutput{})
}
