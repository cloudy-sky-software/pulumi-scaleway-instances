// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package servers

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-scaleway-instances/sdk/go/sclwyinst/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type PlacementGroupServers struct {
	pulumi.CustomResourceState

	Servers ScalewayInstanceV1PlacementGroupServerArrayOutput `pulumi:"servers"`
}

// NewPlacementGroupServers registers a new resource with the given unique name, arguments, and options.
func NewPlacementGroupServers(ctx *pulumi.Context,
	name string, args *PlacementGroupServersArgs, opts ...pulumi.ResourceOption) (*PlacementGroupServers, error) {
	if args == nil {
		args = &PlacementGroupServersArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PlacementGroupServers
	err := ctx.RegisterResource("scaleway-instances:servers:PlacementGroupServers", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPlacementGroupServers gets an existing PlacementGroupServers resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPlacementGroupServers(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PlacementGroupServersState, opts ...pulumi.ResourceOption) (*PlacementGroupServers, error) {
	var resource PlacementGroupServers
	err := ctx.ReadResource("scaleway-instances:servers:PlacementGroupServers", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PlacementGroupServers resources.
type placementGroupServersState struct {
}

type PlacementGroupServersState struct {
}

func (PlacementGroupServersState) ElementType() reflect.Type {
	return reflect.TypeOf((*placementGroupServersState)(nil)).Elem()
}

type placementGroupServersArgs struct {
	// UUID of the placement group
	PlacementGroupId *string  `pulumi:"placementGroupId"`
	Servers          []string `pulumi:"servers"`
	// The zone you want to target
	Zone *string `pulumi:"zone"`
}

// The set of arguments for constructing a PlacementGroupServers resource.
type PlacementGroupServersArgs struct {
	// UUID of the placement group
	PlacementGroupId pulumi.StringPtrInput
	Servers          pulumi.StringArrayInput
	// The zone you want to target
	Zone pulumi.StringPtrInput
}

func (PlacementGroupServersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*placementGroupServersArgs)(nil)).Elem()
}

type PlacementGroupServersInput interface {
	pulumi.Input

	ToPlacementGroupServersOutput() PlacementGroupServersOutput
	ToPlacementGroupServersOutputWithContext(ctx context.Context) PlacementGroupServersOutput
}

func (*PlacementGroupServers) ElementType() reflect.Type {
	return reflect.TypeOf((**PlacementGroupServers)(nil)).Elem()
}

func (i *PlacementGroupServers) ToPlacementGroupServersOutput() PlacementGroupServersOutput {
	return i.ToPlacementGroupServersOutputWithContext(context.Background())
}

func (i *PlacementGroupServers) ToPlacementGroupServersOutputWithContext(ctx context.Context) PlacementGroupServersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlacementGroupServersOutput)
}

type PlacementGroupServersOutput struct{ *pulumi.OutputState }

func (PlacementGroupServersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PlacementGroupServers)(nil)).Elem()
}

func (o PlacementGroupServersOutput) ToPlacementGroupServersOutput() PlacementGroupServersOutput {
	return o
}

func (o PlacementGroupServersOutput) ToPlacementGroupServersOutputWithContext(ctx context.Context) PlacementGroupServersOutput {
	return o
}

func (o PlacementGroupServersOutput) Servers() ScalewayInstanceV1PlacementGroupServerArrayOutput {
	return o.ApplyT(func(v *PlacementGroupServers) ScalewayInstanceV1PlacementGroupServerArrayOutput { return v.Servers }).(ScalewayInstanceV1PlacementGroupServerArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PlacementGroupServersInput)(nil)).Elem(), &PlacementGroupServers{})
	pulumi.RegisterOutputType(PlacementGroupServersOutput{})
}
