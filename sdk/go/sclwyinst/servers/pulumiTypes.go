// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package servers

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-scaleway-instances/sdk/go/sclwyinst/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ScalewayInstanceV1Bootscript struct {
	// The bootscript arch
	Arch *ScalewayInstanceV1BootscriptArch `pulumi:"arch"`
	// The bootscript arguments
	Bootcmdargs *string `pulumi:"bootcmdargs"`
	// Dispmay if the bootscript is the default bootscript if no other boot option is configured
	Default *bool `pulumi:"default"`
	// Provide information regarding a Device Tree Binary (dtb) for use with C1 servers
	Dtb *string `pulumi:"dtb"`
	// The bootscript ID
	Id *string `pulumi:"id"`
	// The initrd (initial ramdisk) configuration
	Initrd *string `pulumi:"initrd"`
	// The server kernel version
	Kernel *string `pulumi:"kernel"`
	// The bootscript organization ID
	Organization *string `pulumi:"organization"`
	// The bootscript project ID
	Project *string `pulumi:"project"`
	// Provide information if the bootscript is public
	Public *bool `pulumi:"public"`
	// The bootscript title
	Title *string `pulumi:"title"`
	// The zone in which is the bootscript
	Zone *string `pulumi:"zone"`
}

// Defaults sets the appropriate defaults for ScalewayInstanceV1Bootscript
func (val *ScalewayInstanceV1Bootscript) Defaults() *ScalewayInstanceV1Bootscript {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Arch == nil {
		arch_ := ScalewayInstanceV1BootscriptArch("x86_64")
		tmp.Arch = &arch_
	}
	return &tmp
}

type ScalewayInstanceV1BootscriptOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1BootscriptOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalewayInstanceV1Bootscript)(nil)).Elem()
}

func (o ScalewayInstanceV1BootscriptOutput) ToScalewayInstanceV1BootscriptOutput() ScalewayInstanceV1BootscriptOutput {
	return o
}

func (o ScalewayInstanceV1BootscriptOutput) ToScalewayInstanceV1BootscriptOutputWithContext(ctx context.Context) ScalewayInstanceV1BootscriptOutput {
	return o
}

// The bootscript arch
func (o ScalewayInstanceV1BootscriptOutput) Arch() ScalewayInstanceV1BootscriptArchPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Bootscript) *ScalewayInstanceV1BootscriptArch { return v.Arch }).(ScalewayInstanceV1BootscriptArchPtrOutput)
}

// The bootscript arguments
func (o ScalewayInstanceV1BootscriptOutput) Bootcmdargs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Bootscript) *string { return v.Bootcmdargs }).(pulumi.StringPtrOutput)
}

// Dispmay if the bootscript is the default bootscript if no other boot option is configured
func (o ScalewayInstanceV1BootscriptOutput) Default() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Bootscript) *bool { return v.Default }).(pulumi.BoolPtrOutput)
}

// Provide information regarding a Device Tree Binary (dtb) for use with C1 servers
func (o ScalewayInstanceV1BootscriptOutput) Dtb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Bootscript) *string { return v.Dtb }).(pulumi.StringPtrOutput)
}

// The bootscript ID
func (o ScalewayInstanceV1BootscriptOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Bootscript) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The initrd (initial ramdisk) configuration
func (o ScalewayInstanceV1BootscriptOutput) Initrd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Bootscript) *string { return v.Initrd }).(pulumi.StringPtrOutput)
}

// The server kernel version
func (o ScalewayInstanceV1BootscriptOutput) Kernel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Bootscript) *string { return v.Kernel }).(pulumi.StringPtrOutput)
}

// The bootscript organization ID
func (o ScalewayInstanceV1BootscriptOutput) Organization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Bootscript) *string { return v.Organization }).(pulumi.StringPtrOutput)
}

// The bootscript project ID
func (o ScalewayInstanceV1BootscriptOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Bootscript) *string { return v.Project }).(pulumi.StringPtrOutput)
}

// Provide information if the bootscript is public
func (o ScalewayInstanceV1BootscriptOutput) Public() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Bootscript) *bool { return v.Public }).(pulumi.BoolPtrOutput)
}

// The bootscript title
func (o ScalewayInstanceV1BootscriptOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Bootscript) *string { return v.Title }).(pulumi.StringPtrOutput)
}

// The zone in which is the bootscript
func (o ScalewayInstanceV1BootscriptOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Bootscript) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

type ScalewayInstanceV1BootscriptPtrOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1BootscriptPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalewayInstanceV1Bootscript)(nil)).Elem()
}

func (o ScalewayInstanceV1BootscriptPtrOutput) ToScalewayInstanceV1BootscriptPtrOutput() ScalewayInstanceV1BootscriptPtrOutput {
	return o
}

func (o ScalewayInstanceV1BootscriptPtrOutput) ToScalewayInstanceV1BootscriptPtrOutputWithContext(ctx context.Context) ScalewayInstanceV1BootscriptPtrOutput {
	return o
}

func (o ScalewayInstanceV1BootscriptPtrOutput) Elem() ScalewayInstanceV1BootscriptOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Bootscript) ScalewayInstanceV1Bootscript {
		if v != nil {
			return *v
		}
		var ret ScalewayInstanceV1Bootscript
		return ret
	}).(ScalewayInstanceV1BootscriptOutput)
}

// The bootscript arch
func (o ScalewayInstanceV1BootscriptPtrOutput) Arch() ScalewayInstanceV1BootscriptArchPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Bootscript) *ScalewayInstanceV1BootscriptArch {
		if v == nil {
			return nil
		}
		return v.Arch
	}).(ScalewayInstanceV1BootscriptArchPtrOutput)
}

// The bootscript arguments
func (o ScalewayInstanceV1BootscriptPtrOutput) Bootcmdargs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Bootscript) *string {
		if v == nil {
			return nil
		}
		return v.Bootcmdargs
	}).(pulumi.StringPtrOutput)
}

// Dispmay if the bootscript is the default bootscript if no other boot option is configured
func (o ScalewayInstanceV1BootscriptPtrOutput) Default() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Bootscript) *bool {
		if v == nil {
			return nil
		}
		return v.Default
	}).(pulumi.BoolPtrOutput)
}

// Provide information regarding a Device Tree Binary (dtb) for use with C1 servers
func (o ScalewayInstanceV1BootscriptPtrOutput) Dtb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Bootscript) *string {
		if v == nil {
			return nil
		}
		return v.Dtb
	}).(pulumi.StringPtrOutput)
}

// The bootscript ID
func (o ScalewayInstanceV1BootscriptPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Bootscript) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The initrd (initial ramdisk) configuration
func (o ScalewayInstanceV1BootscriptPtrOutput) Initrd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Bootscript) *string {
		if v == nil {
			return nil
		}
		return v.Initrd
	}).(pulumi.StringPtrOutput)
}

// The server kernel version
func (o ScalewayInstanceV1BootscriptPtrOutput) Kernel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Bootscript) *string {
		if v == nil {
			return nil
		}
		return v.Kernel
	}).(pulumi.StringPtrOutput)
}

// The bootscript organization ID
func (o ScalewayInstanceV1BootscriptPtrOutput) Organization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Bootscript) *string {
		if v == nil {
			return nil
		}
		return v.Organization
	}).(pulumi.StringPtrOutput)
}

// The bootscript project ID
func (o ScalewayInstanceV1BootscriptPtrOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Bootscript) *string {
		if v == nil {
			return nil
		}
		return v.Project
	}).(pulumi.StringPtrOutput)
}

// Provide information if the bootscript is public
func (o ScalewayInstanceV1BootscriptPtrOutput) Public() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Bootscript) *bool {
		if v == nil {
			return nil
		}
		return v.Public
	}).(pulumi.BoolPtrOutput)
}

// The bootscript title
func (o ScalewayInstanceV1BootscriptPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Bootscript) *string {
		if v == nil {
			return nil
		}
		return v.Title
	}).(pulumi.StringPtrOutput)
}

// The zone in which is the bootscript
func (o ScalewayInstanceV1BootscriptPtrOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Bootscript) *string {
		if v == nil {
			return nil
		}
		return v.Zone
	}).(pulumi.StringPtrOutput)
}

type ScalewayInstanceV1GetPlacementGroupServersResponse struct {
	Servers []ScalewayInstanceV1PlacementGroupServer `pulumi:"servers"`
}

type ScalewayInstanceV1GetPlacementGroupServersResponseOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1GetPlacementGroupServersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalewayInstanceV1GetPlacementGroupServersResponse)(nil)).Elem()
}

func (o ScalewayInstanceV1GetPlacementGroupServersResponseOutput) ToScalewayInstanceV1GetPlacementGroupServersResponseOutput() ScalewayInstanceV1GetPlacementGroupServersResponseOutput {
	return o
}

func (o ScalewayInstanceV1GetPlacementGroupServersResponseOutput) ToScalewayInstanceV1GetPlacementGroupServersResponseOutputWithContext(ctx context.Context) ScalewayInstanceV1GetPlacementGroupServersResponseOutput {
	return o
}

func (o ScalewayInstanceV1GetPlacementGroupServersResponseOutput) Servers() ScalewayInstanceV1PlacementGroupServerArrayOutput {
	return o.ApplyT(func(v ScalewayInstanceV1GetPlacementGroupServersResponse) []ScalewayInstanceV1PlacementGroupServer {
		return v.Servers
	}).(ScalewayInstanceV1PlacementGroupServerArrayOutput)
}

type ScalewayInstanceV1GetServerResponse struct {
	Server *ScalewayInstanceV1Server `pulumi:"server"`
}

// Defaults sets the appropriate defaults for ScalewayInstanceV1GetServerResponse
func (val *ScalewayInstanceV1GetServerResponse) Defaults() *ScalewayInstanceV1GetServerResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Server = tmp.Server.Defaults()

	return &tmp
}

type ScalewayInstanceV1GetServerResponseOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1GetServerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalewayInstanceV1GetServerResponse)(nil)).Elem()
}

func (o ScalewayInstanceV1GetServerResponseOutput) ToScalewayInstanceV1GetServerResponseOutput() ScalewayInstanceV1GetServerResponseOutput {
	return o
}

func (o ScalewayInstanceV1GetServerResponseOutput) ToScalewayInstanceV1GetServerResponseOutputWithContext(ctx context.Context) ScalewayInstanceV1GetServerResponseOutput {
	return o
}

func (o ScalewayInstanceV1GetServerResponseOutput) Server() ScalewayInstanceV1ServerPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1GetServerResponse) *ScalewayInstanceV1Server { return v.Server }).(ScalewayInstanceV1ServerPtrOutput)
}

type ScalewayInstanceV1Image struct {
	Arch *ScalewayInstanceV1ImageArch `pulumi:"arch"`
	// (RFC 3339 format)
	Creation_date      *string                             `pulumi:"creation_date"`
	Default_bootscript *ScalewayInstanceV1Bootscript       `pulumi:"default_bootscript"`
	Extra_volumes      map[string]ScalewayInstanceV1Volume `pulumi:"extra_volumes"`
	From_server        *string                             `pulumi:"from_server"`
	Id                 *string                             `pulumi:"id"`
	// (RFC 3339 format)
	Modification_date *string                         `pulumi:"modification_date"`
	Name              string                          `pulumi:"name"`
	Organization      *string                         `pulumi:"organization"`
	Project           string                          `pulumi:"project"`
	Public            *bool                           `pulumi:"public"`
	Root_volume       ScalewayInstanceV1VolumeSummary `pulumi:"root_volume"`
	State             *ScalewayInstanceV1ImageState   `pulumi:"state"`
	Tags              []string                        `pulumi:"tags"`
	Zone              *string                         `pulumi:"zone"`
}

// Defaults sets the appropriate defaults for ScalewayInstanceV1Image
func (val *ScalewayInstanceV1Image) Defaults() *ScalewayInstanceV1Image {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Arch == nil {
		arch_ := ScalewayInstanceV1ImageArch("x86_64")
		tmp.Arch = &arch_
	}
	tmp.Default_bootscript = tmp.Default_bootscript.Defaults()

	tmp.Root_volume = *tmp.Root_volume.Defaults()

	if tmp.State == nil {
		state_ := ScalewayInstanceV1ImageState("available")
		tmp.State = &state_
	}
	return &tmp
}

type ScalewayInstanceV1ImageOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1ImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalewayInstanceV1Image)(nil)).Elem()
}

func (o ScalewayInstanceV1ImageOutput) ToScalewayInstanceV1ImageOutput() ScalewayInstanceV1ImageOutput {
	return o
}

func (o ScalewayInstanceV1ImageOutput) ToScalewayInstanceV1ImageOutputWithContext(ctx context.Context) ScalewayInstanceV1ImageOutput {
	return o
}

func (o ScalewayInstanceV1ImageOutput) Arch() ScalewayInstanceV1ImageArchPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Image) *ScalewayInstanceV1ImageArch { return v.Arch }).(ScalewayInstanceV1ImageArchPtrOutput)
}

// (RFC 3339 format)
func (o ScalewayInstanceV1ImageOutput) Creation_date() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Image) *string { return v.Creation_date }).(pulumi.StringPtrOutput)
}

func (o ScalewayInstanceV1ImageOutput) Default_bootscript() ScalewayInstanceV1BootscriptPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Image) *ScalewayInstanceV1Bootscript { return v.Default_bootscript }).(ScalewayInstanceV1BootscriptPtrOutput)
}

func (o ScalewayInstanceV1ImageOutput) Extra_volumes() ScalewayInstanceV1VolumeMapOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Image) map[string]ScalewayInstanceV1Volume { return v.Extra_volumes }).(ScalewayInstanceV1VolumeMapOutput)
}

func (o ScalewayInstanceV1ImageOutput) From_server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Image) *string { return v.From_server }).(pulumi.StringPtrOutput)
}

func (o ScalewayInstanceV1ImageOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Image) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// (RFC 3339 format)
func (o ScalewayInstanceV1ImageOutput) Modification_date() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Image) *string { return v.Modification_date }).(pulumi.StringPtrOutput)
}

func (o ScalewayInstanceV1ImageOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Image) string { return v.Name }).(pulumi.StringOutput)
}

func (o ScalewayInstanceV1ImageOutput) Organization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Image) *string { return v.Organization }).(pulumi.StringPtrOutput)
}

func (o ScalewayInstanceV1ImageOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Image) string { return v.Project }).(pulumi.StringOutput)
}

func (o ScalewayInstanceV1ImageOutput) Public() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Image) *bool { return v.Public }).(pulumi.BoolPtrOutput)
}

func (o ScalewayInstanceV1ImageOutput) Root_volume() ScalewayInstanceV1VolumeSummaryOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Image) ScalewayInstanceV1VolumeSummary { return v.Root_volume }).(ScalewayInstanceV1VolumeSummaryOutput)
}

func (o ScalewayInstanceV1ImageOutput) State() ScalewayInstanceV1ImageStatePtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Image) *ScalewayInstanceV1ImageState { return v.State }).(ScalewayInstanceV1ImageStatePtrOutput)
}

func (o ScalewayInstanceV1ImageOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Image) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o ScalewayInstanceV1ImageOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Image) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

type ScalewayInstanceV1ImagePtrOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1ImagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalewayInstanceV1Image)(nil)).Elem()
}

func (o ScalewayInstanceV1ImagePtrOutput) ToScalewayInstanceV1ImagePtrOutput() ScalewayInstanceV1ImagePtrOutput {
	return o
}

func (o ScalewayInstanceV1ImagePtrOutput) ToScalewayInstanceV1ImagePtrOutputWithContext(ctx context.Context) ScalewayInstanceV1ImagePtrOutput {
	return o
}

func (o ScalewayInstanceV1ImagePtrOutput) Elem() ScalewayInstanceV1ImageOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Image) ScalewayInstanceV1Image {
		if v != nil {
			return *v
		}
		var ret ScalewayInstanceV1Image
		return ret
	}).(ScalewayInstanceV1ImageOutput)
}

func (o ScalewayInstanceV1ImagePtrOutput) Arch() ScalewayInstanceV1ImageArchPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Image) *ScalewayInstanceV1ImageArch {
		if v == nil {
			return nil
		}
		return v.Arch
	}).(ScalewayInstanceV1ImageArchPtrOutput)
}

// (RFC 3339 format)
func (o ScalewayInstanceV1ImagePtrOutput) Creation_date() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Image) *string {
		if v == nil {
			return nil
		}
		return v.Creation_date
	}).(pulumi.StringPtrOutput)
}

func (o ScalewayInstanceV1ImagePtrOutput) Default_bootscript() ScalewayInstanceV1BootscriptPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Image) *ScalewayInstanceV1Bootscript {
		if v == nil {
			return nil
		}
		return v.Default_bootscript
	}).(ScalewayInstanceV1BootscriptPtrOutput)
}

func (o ScalewayInstanceV1ImagePtrOutput) Extra_volumes() ScalewayInstanceV1VolumeMapOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Image) map[string]ScalewayInstanceV1Volume {
		if v == nil {
			return nil
		}
		return v.Extra_volumes
	}).(ScalewayInstanceV1VolumeMapOutput)
}

func (o ScalewayInstanceV1ImagePtrOutput) From_server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Image) *string {
		if v == nil {
			return nil
		}
		return v.From_server
	}).(pulumi.StringPtrOutput)
}

func (o ScalewayInstanceV1ImagePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Image) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// (RFC 3339 format)
func (o ScalewayInstanceV1ImagePtrOutput) Modification_date() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Image) *string {
		if v == nil {
			return nil
		}
		return v.Modification_date
	}).(pulumi.StringPtrOutput)
}

func (o ScalewayInstanceV1ImagePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Image) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

func (o ScalewayInstanceV1ImagePtrOutput) Organization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Image) *string {
		if v == nil {
			return nil
		}
		return v.Organization
	}).(pulumi.StringPtrOutput)
}

func (o ScalewayInstanceV1ImagePtrOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Image) *string {
		if v == nil {
			return nil
		}
		return &v.Project
	}).(pulumi.StringPtrOutput)
}

func (o ScalewayInstanceV1ImagePtrOutput) Public() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Image) *bool {
		if v == nil {
			return nil
		}
		return v.Public
	}).(pulumi.BoolPtrOutput)
}

func (o ScalewayInstanceV1ImagePtrOutput) Root_volume() ScalewayInstanceV1VolumeSummaryPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Image) *ScalewayInstanceV1VolumeSummary {
		if v == nil {
			return nil
		}
		return &v.Root_volume
	}).(ScalewayInstanceV1VolumeSummaryPtrOutput)
}

func (o ScalewayInstanceV1ImagePtrOutput) State() ScalewayInstanceV1ImageStatePtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Image) *ScalewayInstanceV1ImageState {
		if v == nil {
			return nil
		}
		return v.State
	}).(ScalewayInstanceV1ImageStatePtrOutput)
}

func (o ScalewayInstanceV1ImagePtrOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Image) []string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringArrayOutput)
}

func (o ScalewayInstanceV1ImagePtrOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Image) *string {
		if v == nil {
			return nil
		}
		return v.Zone
	}).(pulumi.StringPtrOutput)
}

type ScalewayInstanceV1ListServersResponse struct {
	// List of servers
	Servers []ScalewayInstanceV1Server `pulumi:"servers"`
}

type ScalewayInstanceV1ListServersResponseOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1ListServersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalewayInstanceV1ListServersResponse)(nil)).Elem()
}

func (o ScalewayInstanceV1ListServersResponseOutput) ToScalewayInstanceV1ListServersResponseOutput() ScalewayInstanceV1ListServersResponseOutput {
	return o
}

func (o ScalewayInstanceV1ListServersResponseOutput) ToScalewayInstanceV1ListServersResponseOutputWithContext(ctx context.Context) ScalewayInstanceV1ListServersResponseOutput {
	return o
}

// List of servers
func (o ScalewayInstanceV1ListServersResponseOutput) Servers() ScalewayInstanceV1ServerArrayOutput {
	return o.ApplyT(func(v ScalewayInstanceV1ListServersResponse) []ScalewayInstanceV1Server { return v.Servers }).(ScalewayInstanceV1ServerArrayOutput)
}

type ScalewayInstanceV1ListServersTypesResponse struct {
	// List of server types
	Servers map[string]ScalewayInstanceV1ServerType `pulumi:"servers"`
}

type ScalewayInstanceV1ListServersTypesResponseOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1ListServersTypesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalewayInstanceV1ListServersTypesResponse)(nil)).Elem()
}

func (o ScalewayInstanceV1ListServersTypesResponseOutput) ToScalewayInstanceV1ListServersTypesResponseOutput() ScalewayInstanceV1ListServersTypesResponseOutput {
	return o
}

func (o ScalewayInstanceV1ListServersTypesResponseOutput) ToScalewayInstanceV1ListServersTypesResponseOutputWithContext(ctx context.Context) ScalewayInstanceV1ListServersTypesResponseOutput {
	return o
}

// List of server types
func (o ScalewayInstanceV1ListServersTypesResponseOutput) Servers() ScalewayInstanceV1ServerTypeMapOutput {
	return o.ApplyT(func(v ScalewayInstanceV1ListServersTypesResponse) map[string]ScalewayInstanceV1ServerType {
		return v.Servers
	}).(ScalewayInstanceV1ServerTypeMapOutput)
}

type ScalewayInstanceV1PlacementGroup struct {
	Id *string `pulumi:"id"`
	// The placement group name
	Name string `pulumi:"name"`
	// The placement group organization ID
	Organization *string                                     `pulumi:"organization"`
	Policy_mode  *ScalewayInstanceV1PlacementGroupPolicyMode `pulumi:"policy_mode"`
	// Returns true if the policy is respected, false otherwise
	Policy_respected *bool                                       `pulumi:"policy_respected"`
	Policy_type      *ScalewayInstanceV1PlacementGroupPolicyType `pulumi:"policy_type"`
	// The placement group project ID
	Project string `pulumi:"project"`
	// The placement group tags
	Tags []string `pulumi:"tags"`
	// The zone in which is the placement group
	Zone *string `pulumi:"zone"`
}

// Defaults sets the appropriate defaults for ScalewayInstanceV1PlacementGroup
func (val *ScalewayInstanceV1PlacementGroup) Defaults() *ScalewayInstanceV1PlacementGroup {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Policy_mode == nil {
		policy_mode_ := ScalewayInstanceV1PlacementGroupPolicyMode("optional")
		tmp.Policy_mode = &policy_mode_
	}
	if tmp.Policy_type == nil {
		policy_type_ := ScalewayInstanceV1PlacementGroupPolicyType("max_availability")
		tmp.Policy_type = &policy_type_
	}
	return &tmp
}

type ScalewayInstanceV1PlacementGroupOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1PlacementGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalewayInstanceV1PlacementGroup)(nil)).Elem()
}

func (o ScalewayInstanceV1PlacementGroupOutput) ToScalewayInstanceV1PlacementGroupOutput() ScalewayInstanceV1PlacementGroupOutput {
	return o
}

func (o ScalewayInstanceV1PlacementGroupOutput) ToScalewayInstanceV1PlacementGroupOutputWithContext(ctx context.Context) ScalewayInstanceV1PlacementGroupOutput {
	return o
}

func (o ScalewayInstanceV1PlacementGroupOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1PlacementGroup) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The placement group name
func (o ScalewayInstanceV1PlacementGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ScalewayInstanceV1PlacementGroup) string { return v.Name }).(pulumi.StringOutput)
}

// The placement group organization ID
func (o ScalewayInstanceV1PlacementGroupOutput) Organization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1PlacementGroup) *string { return v.Organization }).(pulumi.StringPtrOutput)
}

func (o ScalewayInstanceV1PlacementGroupOutput) Policy_mode() ScalewayInstanceV1PlacementGroupPolicyModePtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1PlacementGroup) *ScalewayInstanceV1PlacementGroupPolicyMode {
		return v.Policy_mode
	}).(ScalewayInstanceV1PlacementGroupPolicyModePtrOutput)
}

// Returns true if the policy is respected, false otherwise
func (o ScalewayInstanceV1PlacementGroupOutput) Policy_respected() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1PlacementGroup) *bool { return v.Policy_respected }).(pulumi.BoolPtrOutput)
}

func (o ScalewayInstanceV1PlacementGroupOutput) Policy_type() ScalewayInstanceV1PlacementGroupPolicyTypePtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1PlacementGroup) *ScalewayInstanceV1PlacementGroupPolicyType {
		return v.Policy_type
	}).(ScalewayInstanceV1PlacementGroupPolicyTypePtrOutput)
}

// The placement group project ID
func (o ScalewayInstanceV1PlacementGroupOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v ScalewayInstanceV1PlacementGroup) string { return v.Project }).(pulumi.StringOutput)
}

// The placement group tags
func (o ScalewayInstanceV1PlacementGroupOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ScalewayInstanceV1PlacementGroup) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// The zone in which is the placement group
func (o ScalewayInstanceV1PlacementGroupOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1PlacementGroup) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

type ScalewayInstanceV1PlacementGroupPtrOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1PlacementGroupPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalewayInstanceV1PlacementGroup)(nil)).Elem()
}

func (o ScalewayInstanceV1PlacementGroupPtrOutput) ToScalewayInstanceV1PlacementGroupPtrOutput() ScalewayInstanceV1PlacementGroupPtrOutput {
	return o
}

func (o ScalewayInstanceV1PlacementGroupPtrOutput) ToScalewayInstanceV1PlacementGroupPtrOutputWithContext(ctx context.Context) ScalewayInstanceV1PlacementGroupPtrOutput {
	return o
}

func (o ScalewayInstanceV1PlacementGroupPtrOutput) Elem() ScalewayInstanceV1PlacementGroupOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1PlacementGroup) ScalewayInstanceV1PlacementGroup {
		if v != nil {
			return *v
		}
		var ret ScalewayInstanceV1PlacementGroup
		return ret
	}).(ScalewayInstanceV1PlacementGroupOutput)
}

func (o ScalewayInstanceV1PlacementGroupPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1PlacementGroup) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The placement group name
func (o ScalewayInstanceV1PlacementGroupPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1PlacementGroup) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The placement group organization ID
func (o ScalewayInstanceV1PlacementGroupPtrOutput) Organization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1PlacementGroup) *string {
		if v == nil {
			return nil
		}
		return v.Organization
	}).(pulumi.StringPtrOutput)
}

func (o ScalewayInstanceV1PlacementGroupPtrOutput) Policy_mode() ScalewayInstanceV1PlacementGroupPolicyModePtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1PlacementGroup) *ScalewayInstanceV1PlacementGroupPolicyMode {
		if v == nil {
			return nil
		}
		return v.Policy_mode
	}).(ScalewayInstanceV1PlacementGroupPolicyModePtrOutput)
}

// Returns true if the policy is respected, false otherwise
func (o ScalewayInstanceV1PlacementGroupPtrOutput) Policy_respected() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1PlacementGroup) *bool {
		if v == nil {
			return nil
		}
		return v.Policy_respected
	}).(pulumi.BoolPtrOutput)
}

func (o ScalewayInstanceV1PlacementGroupPtrOutput) Policy_type() ScalewayInstanceV1PlacementGroupPolicyTypePtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1PlacementGroup) *ScalewayInstanceV1PlacementGroupPolicyType {
		if v == nil {
			return nil
		}
		return v.Policy_type
	}).(ScalewayInstanceV1PlacementGroupPolicyTypePtrOutput)
}

// The placement group project ID
func (o ScalewayInstanceV1PlacementGroupPtrOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1PlacementGroup) *string {
		if v == nil {
			return nil
		}
		return &v.Project
	}).(pulumi.StringPtrOutput)
}

// The placement group tags
func (o ScalewayInstanceV1PlacementGroupPtrOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1PlacementGroup) []string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringArrayOutput)
}

// The zone in which is the placement group
func (o ScalewayInstanceV1PlacementGroupPtrOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1PlacementGroup) *string {
		if v == nil {
			return nil
		}
		return v.Zone
	}).(pulumi.StringPtrOutput)
}

type ScalewayInstanceV1PlacementGroupServer struct {
	Id               *string `pulumi:"id"`
	Name             *string `pulumi:"name"`
	Policy_respected *bool   `pulumi:"policy_respected"`
}

type ScalewayInstanceV1PlacementGroupServerOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1PlacementGroupServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalewayInstanceV1PlacementGroupServer)(nil)).Elem()
}

func (o ScalewayInstanceV1PlacementGroupServerOutput) ToScalewayInstanceV1PlacementGroupServerOutput() ScalewayInstanceV1PlacementGroupServerOutput {
	return o
}

func (o ScalewayInstanceV1PlacementGroupServerOutput) ToScalewayInstanceV1PlacementGroupServerOutputWithContext(ctx context.Context) ScalewayInstanceV1PlacementGroupServerOutput {
	return o
}

func (o ScalewayInstanceV1PlacementGroupServerOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1PlacementGroupServer) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o ScalewayInstanceV1PlacementGroupServerOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1PlacementGroupServer) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o ScalewayInstanceV1PlacementGroupServerOutput) Policy_respected() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1PlacementGroupServer) *bool { return v.Policy_respected }).(pulumi.BoolPtrOutput)
}

type ScalewayInstanceV1PlacementGroupServerArrayOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1PlacementGroupServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScalewayInstanceV1PlacementGroupServer)(nil)).Elem()
}

func (o ScalewayInstanceV1PlacementGroupServerArrayOutput) ToScalewayInstanceV1PlacementGroupServerArrayOutput() ScalewayInstanceV1PlacementGroupServerArrayOutput {
	return o
}

func (o ScalewayInstanceV1PlacementGroupServerArrayOutput) ToScalewayInstanceV1PlacementGroupServerArrayOutputWithContext(ctx context.Context) ScalewayInstanceV1PlacementGroupServerArrayOutput {
	return o
}

func (o ScalewayInstanceV1PlacementGroupServerArrayOutput) Index(i pulumi.IntInput) ScalewayInstanceV1PlacementGroupServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScalewayInstanceV1PlacementGroupServer {
		return vs[0].([]ScalewayInstanceV1PlacementGroupServer)[vs[1].(int)]
	}).(ScalewayInstanceV1PlacementGroupServerOutput)
}

type ScalewayInstanceV1PrivateNIC struct {
	// The private NIC unique ID
	Id *string `pulumi:"id"`
	// The private NIC MAC address
	Mac_address *string `pulumi:"mac_address"`
	// The private network where the private NIC is attached
	Private_network_id *string `pulumi:"private_network_id"`
	// The server the private NIC is attached to
	Server_id *string `pulumi:"server_id"`
	// The private NIC state
	State *ScalewayInstanceV1PrivateNICState `pulumi:"state"`
}

// Defaults sets the appropriate defaults for ScalewayInstanceV1PrivateNIC
func (val *ScalewayInstanceV1PrivateNIC) Defaults() *ScalewayInstanceV1PrivateNIC {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.State == nil {
		state_ := ScalewayInstanceV1PrivateNICState("available")
		tmp.State = &state_
	}
	return &tmp
}

type ScalewayInstanceV1PrivateNICOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1PrivateNICOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalewayInstanceV1PrivateNIC)(nil)).Elem()
}

func (o ScalewayInstanceV1PrivateNICOutput) ToScalewayInstanceV1PrivateNICOutput() ScalewayInstanceV1PrivateNICOutput {
	return o
}

func (o ScalewayInstanceV1PrivateNICOutput) ToScalewayInstanceV1PrivateNICOutputWithContext(ctx context.Context) ScalewayInstanceV1PrivateNICOutput {
	return o
}

// The private NIC unique ID
func (o ScalewayInstanceV1PrivateNICOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1PrivateNIC) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The private NIC MAC address
func (o ScalewayInstanceV1PrivateNICOutput) Mac_address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1PrivateNIC) *string { return v.Mac_address }).(pulumi.StringPtrOutput)
}

// The private network where the private NIC is attached
func (o ScalewayInstanceV1PrivateNICOutput) Private_network_id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1PrivateNIC) *string { return v.Private_network_id }).(pulumi.StringPtrOutput)
}

// The server the private NIC is attached to
func (o ScalewayInstanceV1PrivateNICOutput) Server_id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1PrivateNIC) *string { return v.Server_id }).(pulumi.StringPtrOutput)
}

// The private NIC state
func (o ScalewayInstanceV1PrivateNICOutput) State() ScalewayInstanceV1PrivateNICStatePtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1PrivateNIC) *ScalewayInstanceV1PrivateNICState { return v.State }).(ScalewayInstanceV1PrivateNICStatePtrOutput)
}

type ScalewayInstanceV1PrivateNICArrayOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1PrivateNICArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScalewayInstanceV1PrivateNIC)(nil)).Elem()
}

func (o ScalewayInstanceV1PrivateNICArrayOutput) ToScalewayInstanceV1PrivateNICArrayOutput() ScalewayInstanceV1PrivateNICArrayOutput {
	return o
}

func (o ScalewayInstanceV1PrivateNICArrayOutput) ToScalewayInstanceV1PrivateNICArrayOutputWithContext(ctx context.Context) ScalewayInstanceV1PrivateNICArrayOutput {
	return o
}

func (o ScalewayInstanceV1PrivateNICArrayOutput) Index(i pulumi.IntInput) ScalewayInstanceV1PrivateNICOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScalewayInstanceV1PrivateNIC {
		return vs[0].([]ScalewayInstanceV1PrivateNIC)[vs[1].(int)]
	}).(ScalewayInstanceV1PrivateNICOutput)
}

type ScalewayInstanceV1Server struct {
	// Provide as list of allowed actions on the server
	Allowed_actions []ScalewayInstanceV1ServerAllowedActionsItem `pulumi:"allowed_actions"`
	// The server arch
	Arch       *ScalewayInstanceV1ServerArch     `pulumi:"arch"`
	Boot_type  *ScalewayInstanceV1ServerBootType `pulumi:"boot_type"`
	Bootscript *ScalewayInstanceV1Bootscript     `pulumi:"bootscript"`
	// The server commercial type (eg. GP1-M)
	Commercial_type *string `pulumi:"commercial_type"`
	// The server creation date (RFC 3339 format)
	Creation_date *string `pulumi:"creation_date"`
	// True if a dynamic IP is required
	Dynamic_ip_required *bool `pulumi:"dynamic_ip_required"`
	// True if IPv6 is enabled
	Enable_ipv6 *bool `pulumi:"enable_ipv6"`
	// The server host name
	Hostname *string `pulumi:"hostname"`
	// The server unique ID
	Id    *string                  `pulumi:"id"`
	Image *ScalewayInstanceV1Image `pulumi:"image"`
	// The server IPv6 address
	Ipv6 *ScalewayInstanceV1ServerIpv6Properties `pulumi:"ipv6"`
	// The server location
	Location *ScalewayInstanceV1ServerLocationProperties `pulumi:"location"`
	// The server planned maintenances
	Maintenances []ScalewayInstanceV1ServerMaintenance `pulumi:"maintenances"`
	// The server modification date (RFC 3339 format)
	Modification_date *string `pulumi:"modification_date"`
	// The server name
	Name *string `pulumi:"name"`
	// The server organization ID
	Organization    *string                           `pulumi:"organization"`
	Placement_group *ScalewayInstanceV1PlacementGroup `pulumi:"placement_group"`
	// The server private IP address
	Private_ip *string `pulumi:"private_ip"`
	// The server private NICs
	Private_nics []ScalewayInstanceV1PrivateNIC `pulumi:"private_nics"`
	// The server project ID
	Project *string `pulumi:"project"`
	// The server protection option is activated
	Protected *bool `pulumi:"protected"`
	// Information about the public IP
	Public_ip *ScalewayInstanceV1ServerPublicIpProperties `pulumi:"public_ip"`
	// The server security group
	Security_group *ScalewayInstanceV1ServerSecurityGroupProperties `pulumi:"security_group"`
	// The server state
	State *ScalewayInstanceV1ServerState `pulumi:"state"`
	// The server state_detail
	State_detail *string `pulumi:"state_detail"`
	// The server associated tags
	Tags []string `pulumi:"tags"`
	// The server volumes
	Volumes map[string]ScalewayInstanceV1VolumeServer `pulumi:"volumes"`
	// The zone in which is the server
	Zone *string `pulumi:"zone"`
}

// Defaults sets the appropriate defaults for ScalewayInstanceV1Server
func (val *ScalewayInstanceV1Server) Defaults() *ScalewayInstanceV1Server {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Arch == nil {
		arch_ := ScalewayInstanceV1ServerArch("x86_64")
		tmp.Arch = &arch_
	}
	if tmp.Boot_type == nil {
		boot_type_ := ScalewayInstanceV1ServerBootType("local")
		tmp.Boot_type = &boot_type_
	}
	tmp.Bootscript = tmp.Bootscript.Defaults()

	tmp.Image = tmp.Image.Defaults()

	tmp.Placement_group = tmp.Placement_group.Defaults()

	if tmp.State == nil {
		state_ := ScalewayInstanceV1ServerState("running")
		tmp.State = &state_
	}
	return &tmp
}

type ScalewayInstanceV1ServerOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1ServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalewayInstanceV1Server)(nil)).Elem()
}

func (o ScalewayInstanceV1ServerOutput) ToScalewayInstanceV1ServerOutput() ScalewayInstanceV1ServerOutput {
	return o
}

func (o ScalewayInstanceV1ServerOutput) ToScalewayInstanceV1ServerOutputWithContext(ctx context.Context) ScalewayInstanceV1ServerOutput {
	return o
}

// Provide as list of allowed actions on the server
func (o ScalewayInstanceV1ServerOutput) Allowed_actions() ScalewayInstanceV1ServerAllowedActionsItemArrayOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Server) []ScalewayInstanceV1ServerAllowedActionsItem {
		return v.Allowed_actions
	}).(ScalewayInstanceV1ServerAllowedActionsItemArrayOutput)
}

// The server arch
func (o ScalewayInstanceV1ServerOutput) Arch() ScalewayInstanceV1ServerArchPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Server) *ScalewayInstanceV1ServerArch { return v.Arch }).(ScalewayInstanceV1ServerArchPtrOutput)
}

func (o ScalewayInstanceV1ServerOutput) Boot_type() ScalewayInstanceV1ServerBootTypePtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Server) *ScalewayInstanceV1ServerBootType { return v.Boot_type }).(ScalewayInstanceV1ServerBootTypePtrOutput)
}

func (o ScalewayInstanceV1ServerOutput) Bootscript() ScalewayInstanceV1BootscriptPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Server) *ScalewayInstanceV1Bootscript { return v.Bootscript }).(ScalewayInstanceV1BootscriptPtrOutput)
}

// The server commercial type (eg. GP1-M)
func (o ScalewayInstanceV1ServerOutput) Commercial_type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Server) *string { return v.Commercial_type }).(pulumi.StringPtrOutput)
}

// The server creation date (RFC 3339 format)
func (o ScalewayInstanceV1ServerOutput) Creation_date() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Server) *string { return v.Creation_date }).(pulumi.StringPtrOutput)
}

// True if a dynamic IP is required
func (o ScalewayInstanceV1ServerOutput) Dynamic_ip_required() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Server) *bool { return v.Dynamic_ip_required }).(pulumi.BoolPtrOutput)
}

// True if IPv6 is enabled
func (o ScalewayInstanceV1ServerOutput) Enable_ipv6() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Server) *bool { return v.Enable_ipv6 }).(pulumi.BoolPtrOutput)
}

// The server host name
func (o ScalewayInstanceV1ServerOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Server) *string { return v.Hostname }).(pulumi.StringPtrOutput)
}

// The server unique ID
func (o ScalewayInstanceV1ServerOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Server) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o ScalewayInstanceV1ServerOutput) Image() ScalewayInstanceV1ImagePtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Server) *ScalewayInstanceV1Image { return v.Image }).(ScalewayInstanceV1ImagePtrOutput)
}

// The server IPv6 address
func (o ScalewayInstanceV1ServerOutput) Ipv6() ScalewayInstanceV1ServerIpv6PropertiesPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Server) *ScalewayInstanceV1ServerIpv6Properties { return v.Ipv6 }).(ScalewayInstanceV1ServerIpv6PropertiesPtrOutput)
}

// The server location
func (o ScalewayInstanceV1ServerOutput) Location() ScalewayInstanceV1ServerLocationPropertiesPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Server) *ScalewayInstanceV1ServerLocationProperties { return v.Location }).(ScalewayInstanceV1ServerLocationPropertiesPtrOutput)
}

// The server planned maintenances
func (o ScalewayInstanceV1ServerOutput) Maintenances() ScalewayInstanceV1ServerMaintenanceArrayOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Server) []ScalewayInstanceV1ServerMaintenance { return v.Maintenances }).(ScalewayInstanceV1ServerMaintenanceArrayOutput)
}

// The server modification date (RFC 3339 format)
func (o ScalewayInstanceV1ServerOutput) Modification_date() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Server) *string { return v.Modification_date }).(pulumi.StringPtrOutput)
}

// The server name
func (o ScalewayInstanceV1ServerOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Server) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The server organization ID
func (o ScalewayInstanceV1ServerOutput) Organization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Server) *string { return v.Organization }).(pulumi.StringPtrOutput)
}

func (o ScalewayInstanceV1ServerOutput) Placement_group() ScalewayInstanceV1PlacementGroupPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Server) *ScalewayInstanceV1PlacementGroup { return v.Placement_group }).(ScalewayInstanceV1PlacementGroupPtrOutput)
}

// The server private IP address
func (o ScalewayInstanceV1ServerOutput) Private_ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Server) *string { return v.Private_ip }).(pulumi.StringPtrOutput)
}

// The server private NICs
func (o ScalewayInstanceV1ServerOutput) Private_nics() ScalewayInstanceV1PrivateNICArrayOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Server) []ScalewayInstanceV1PrivateNIC { return v.Private_nics }).(ScalewayInstanceV1PrivateNICArrayOutput)
}

// The server project ID
func (o ScalewayInstanceV1ServerOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Server) *string { return v.Project }).(pulumi.StringPtrOutput)
}

// The server protection option is activated
func (o ScalewayInstanceV1ServerOutput) Protected() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Server) *bool { return v.Protected }).(pulumi.BoolPtrOutput)
}

// Information about the public IP
func (o ScalewayInstanceV1ServerOutput) Public_ip() ScalewayInstanceV1ServerPublicIpPropertiesPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Server) *ScalewayInstanceV1ServerPublicIpProperties { return v.Public_ip }).(ScalewayInstanceV1ServerPublicIpPropertiesPtrOutput)
}

// The server security group
func (o ScalewayInstanceV1ServerOutput) Security_group() ScalewayInstanceV1ServerSecurityGroupPropertiesPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Server) *ScalewayInstanceV1ServerSecurityGroupProperties {
		return v.Security_group
	}).(ScalewayInstanceV1ServerSecurityGroupPropertiesPtrOutput)
}

// The server state
func (o ScalewayInstanceV1ServerOutput) State() ScalewayInstanceV1ServerStatePtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Server) *ScalewayInstanceV1ServerState { return v.State }).(ScalewayInstanceV1ServerStatePtrOutput)
}

// The server state_detail
func (o ScalewayInstanceV1ServerOutput) State_detail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Server) *string { return v.State_detail }).(pulumi.StringPtrOutput)
}

// The server associated tags
func (o ScalewayInstanceV1ServerOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Server) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// The server volumes
func (o ScalewayInstanceV1ServerOutput) Volumes() ScalewayInstanceV1VolumeServerMapOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Server) map[string]ScalewayInstanceV1VolumeServer { return v.Volumes }).(ScalewayInstanceV1VolumeServerMapOutput)
}

// The zone in which is the server
func (o ScalewayInstanceV1ServerOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Server) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

type ScalewayInstanceV1ServerPtrOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1ServerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalewayInstanceV1Server)(nil)).Elem()
}

func (o ScalewayInstanceV1ServerPtrOutput) ToScalewayInstanceV1ServerPtrOutput() ScalewayInstanceV1ServerPtrOutput {
	return o
}

func (o ScalewayInstanceV1ServerPtrOutput) ToScalewayInstanceV1ServerPtrOutputWithContext(ctx context.Context) ScalewayInstanceV1ServerPtrOutput {
	return o
}

func (o ScalewayInstanceV1ServerPtrOutput) Elem() ScalewayInstanceV1ServerOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Server) ScalewayInstanceV1Server {
		if v != nil {
			return *v
		}
		var ret ScalewayInstanceV1Server
		return ret
	}).(ScalewayInstanceV1ServerOutput)
}

// Provide as list of allowed actions on the server
func (o ScalewayInstanceV1ServerPtrOutput) Allowed_actions() ScalewayInstanceV1ServerAllowedActionsItemArrayOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Server) []ScalewayInstanceV1ServerAllowedActionsItem {
		if v == nil {
			return nil
		}
		return v.Allowed_actions
	}).(ScalewayInstanceV1ServerAllowedActionsItemArrayOutput)
}

// The server arch
func (o ScalewayInstanceV1ServerPtrOutput) Arch() ScalewayInstanceV1ServerArchPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Server) *ScalewayInstanceV1ServerArch {
		if v == nil {
			return nil
		}
		return v.Arch
	}).(ScalewayInstanceV1ServerArchPtrOutput)
}

func (o ScalewayInstanceV1ServerPtrOutput) Boot_type() ScalewayInstanceV1ServerBootTypePtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Server) *ScalewayInstanceV1ServerBootType {
		if v == nil {
			return nil
		}
		return v.Boot_type
	}).(ScalewayInstanceV1ServerBootTypePtrOutput)
}

func (o ScalewayInstanceV1ServerPtrOutput) Bootscript() ScalewayInstanceV1BootscriptPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Server) *ScalewayInstanceV1Bootscript {
		if v == nil {
			return nil
		}
		return v.Bootscript
	}).(ScalewayInstanceV1BootscriptPtrOutput)
}

// The server commercial type (eg. GP1-M)
func (o ScalewayInstanceV1ServerPtrOutput) Commercial_type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Server) *string {
		if v == nil {
			return nil
		}
		return v.Commercial_type
	}).(pulumi.StringPtrOutput)
}

// The server creation date (RFC 3339 format)
func (o ScalewayInstanceV1ServerPtrOutput) Creation_date() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Server) *string {
		if v == nil {
			return nil
		}
		return v.Creation_date
	}).(pulumi.StringPtrOutput)
}

// True if a dynamic IP is required
func (o ScalewayInstanceV1ServerPtrOutput) Dynamic_ip_required() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Server) *bool {
		if v == nil {
			return nil
		}
		return v.Dynamic_ip_required
	}).(pulumi.BoolPtrOutput)
}

// True if IPv6 is enabled
func (o ScalewayInstanceV1ServerPtrOutput) Enable_ipv6() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Server) *bool {
		if v == nil {
			return nil
		}
		return v.Enable_ipv6
	}).(pulumi.BoolPtrOutput)
}

// The server host name
func (o ScalewayInstanceV1ServerPtrOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Server) *string {
		if v == nil {
			return nil
		}
		return v.Hostname
	}).(pulumi.StringPtrOutput)
}

// The server unique ID
func (o ScalewayInstanceV1ServerPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Server) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

func (o ScalewayInstanceV1ServerPtrOutput) Image() ScalewayInstanceV1ImagePtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Server) *ScalewayInstanceV1Image {
		if v == nil {
			return nil
		}
		return v.Image
	}).(ScalewayInstanceV1ImagePtrOutput)
}

// The server IPv6 address
func (o ScalewayInstanceV1ServerPtrOutput) Ipv6() ScalewayInstanceV1ServerIpv6PropertiesPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Server) *ScalewayInstanceV1ServerIpv6Properties {
		if v == nil {
			return nil
		}
		return v.Ipv6
	}).(ScalewayInstanceV1ServerIpv6PropertiesPtrOutput)
}

// The server location
func (o ScalewayInstanceV1ServerPtrOutput) Location() ScalewayInstanceV1ServerLocationPropertiesPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Server) *ScalewayInstanceV1ServerLocationProperties {
		if v == nil {
			return nil
		}
		return v.Location
	}).(ScalewayInstanceV1ServerLocationPropertiesPtrOutput)
}

// The server planned maintenances
func (o ScalewayInstanceV1ServerPtrOutput) Maintenances() ScalewayInstanceV1ServerMaintenanceArrayOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Server) []ScalewayInstanceV1ServerMaintenance {
		if v == nil {
			return nil
		}
		return v.Maintenances
	}).(ScalewayInstanceV1ServerMaintenanceArrayOutput)
}

// The server modification date (RFC 3339 format)
func (o ScalewayInstanceV1ServerPtrOutput) Modification_date() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Server) *string {
		if v == nil {
			return nil
		}
		return v.Modification_date
	}).(pulumi.StringPtrOutput)
}

// The server name
func (o ScalewayInstanceV1ServerPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Server) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The server organization ID
func (o ScalewayInstanceV1ServerPtrOutput) Organization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Server) *string {
		if v == nil {
			return nil
		}
		return v.Organization
	}).(pulumi.StringPtrOutput)
}

func (o ScalewayInstanceV1ServerPtrOutput) Placement_group() ScalewayInstanceV1PlacementGroupPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Server) *ScalewayInstanceV1PlacementGroup {
		if v == nil {
			return nil
		}
		return v.Placement_group
	}).(ScalewayInstanceV1PlacementGroupPtrOutput)
}

// The server private IP address
func (o ScalewayInstanceV1ServerPtrOutput) Private_ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Server) *string {
		if v == nil {
			return nil
		}
		return v.Private_ip
	}).(pulumi.StringPtrOutput)
}

// The server private NICs
func (o ScalewayInstanceV1ServerPtrOutput) Private_nics() ScalewayInstanceV1PrivateNICArrayOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Server) []ScalewayInstanceV1PrivateNIC {
		if v == nil {
			return nil
		}
		return v.Private_nics
	}).(ScalewayInstanceV1PrivateNICArrayOutput)
}

// The server project ID
func (o ScalewayInstanceV1ServerPtrOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Server) *string {
		if v == nil {
			return nil
		}
		return v.Project
	}).(pulumi.StringPtrOutput)
}

// The server protection option is activated
func (o ScalewayInstanceV1ServerPtrOutput) Protected() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Server) *bool {
		if v == nil {
			return nil
		}
		return v.Protected
	}).(pulumi.BoolPtrOutput)
}

// Information about the public IP
func (o ScalewayInstanceV1ServerPtrOutput) Public_ip() ScalewayInstanceV1ServerPublicIpPropertiesPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Server) *ScalewayInstanceV1ServerPublicIpProperties {
		if v == nil {
			return nil
		}
		return v.Public_ip
	}).(ScalewayInstanceV1ServerPublicIpPropertiesPtrOutput)
}

// The server security group
func (o ScalewayInstanceV1ServerPtrOutput) Security_group() ScalewayInstanceV1ServerSecurityGroupPropertiesPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Server) *ScalewayInstanceV1ServerSecurityGroupProperties {
		if v == nil {
			return nil
		}
		return v.Security_group
	}).(ScalewayInstanceV1ServerSecurityGroupPropertiesPtrOutput)
}

// The server state
func (o ScalewayInstanceV1ServerPtrOutput) State() ScalewayInstanceV1ServerStatePtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Server) *ScalewayInstanceV1ServerState {
		if v == nil {
			return nil
		}
		return v.State
	}).(ScalewayInstanceV1ServerStatePtrOutput)
}

// The server state_detail
func (o ScalewayInstanceV1ServerPtrOutput) State_detail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Server) *string {
		if v == nil {
			return nil
		}
		return v.State_detail
	}).(pulumi.StringPtrOutput)
}

// The server associated tags
func (o ScalewayInstanceV1ServerPtrOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Server) []string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringArrayOutput)
}

// The server volumes
func (o ScalewayInstanceV1ServerPtrOutput) Volumes() ScalewayInstanceV1VolumeServerMapOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Server) map[string]ScalewayInstanceV1VolumeServer {
		if v == nil {
			return nil
		}
		return v.Volumes
	}).(ScalewayInstanceV1VolumeServerMapOutput)
}

// The zone in which is the server
func (o ScalewayInstanceV1ServerPtrOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Server) *string {
		if v == nil {
			return nil
		}
		return v.Zone
	}).(pulumi.StringPtrOutput)
}

type ScalewayInstanceV1ServerArrayOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1ServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScalewayInstanceV1Server)(nil)).Elem()
}

func (o ScalewayInstanceV1ServerArrayOutput) ToScalewayInstanceV1ServerArrayOutput() ScalewayInstanceV1ServerArrayOutput {
	return o
}

func (o ScalewayInstanceV1ServerArrayOutput) ToScalewayInstanceV1ServerArrayOutputWithContext(ctx context.Context) ScalewayInstanceV1ServerArrayOutput {
	return o
}

func (o ScalewayInstanceV1ServerArrayOutput) Index(i pulumi.IntInput) ScalewayInstanceV1ServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScalewayInstanceV1Server {
		return vs[0].([]ScalewayInstanceV1Server)[vs[1].(int)]
	}).(ScalewayInstanceV1ServerOutput)
}

// The server IPv6 address
type ScalewayInstanceV1ServerIpv6Properties struct {
	// The server IPv6 IP-Address (IPv6 address)
	Address *string `pulumi:"address"`
	// The IPv6 IP-addresses gateway (IPv6 address)
	Gateway *string `pulumi:"gateway"`
	// The IPv6 IP-addresses CIDR netmask
	Netmask *string `pulumi:"netmask"`
}

// The server IPv6 address
type ScalewayInstanceV1ServerIpv6PropertiesOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1ServerIpv6PropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalewayInstanceV1ServerIpv6Properties)(nil)).Elem()
}

func (o ScalewayInstanceV1ServerIpv6PropertiesOutput) ToScalewayInstanceV1ServerIpv6PropertiesOutput() ScalewayInstanceV1ServerIpv6PropertiesOutput {
	return o
}

func (o ScalewayInstanceV1ServerIpv6PropertiesOutput) ToScalewayInstanceV1ServerIpv6PropertiesOutputWithContext(ctx context.Context) ScalewayInstanceV1ServerIpv6PropertiesOutput {
	return o
}

// The server IPv6 IP-Address (IPv6 address)
func (o ScalewayInstanceV1ServerIpv6PropertiesOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1ServerIpv6Properties) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// The IPv6 IP-addresses gateway (IPv6 address)
func (o ScalewayInstanceV1ServerIpv6PropertiesOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1ServerIpv6Properties) *string { return v.Gateway }).(pulumi.StringPtrOutput)
}

// The IPv6 IP-addresses CIDR netmask
func (o ScalewayInstanceV1ServerIpv6PropertiesOutput) Netmask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1ServerIpv6Properties) *string { return v.Netmask }).(pulumi.StringPtrOutput)
}

type ScalewayInstanceV1ServerIpv6PropertiesPtrOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1ServerIpv6PropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalewayInstanceV1ServerIpv6Properties)(nil)).Elem()
}

func (o ScalewayInstanceV1ServerIpv6PropertiesPtrOutput) ToScalewayInstanceV1ServerIpv6PropertiesPtrOutput() ScalewayInstanceV1ServerIpv6PropertiesPtrOutput {
	return o
}

func (o ScalewayInstanceV1ServerIpv6PropertiesPtrOutput) ToScalewayInstanceV1ServerIpv6PropertiesPtrOutputWithContext(ctx context.Context) ScalewayInstanceV1ServerIpv6PropertiesPtrOutput {
	return o
}

func (o ScalewayInstanceV1ServerIpv6PropertiesPtrOutput) Elem() ScalewayInstanceV1ServerIpv6PropertiesOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1ServerIpv6Properties) ScalewayInstanceV1ServerIpv6Properties {
		if v != nil {
			return *v
		}
		var ret ScalewayInstanceV1ServerIpv6Properties
		return ret
	}).(ScalewayInstanceV1ServerIpv6PropertiesOutput)
}

// The server IPv6 IP-Address (IPv6 address)
func (o ScalewayInstanceV1ServerIpv6PropertiesPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1ServerIpv6Properties) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

// The IPv6 IP-addresses gateway (IPv6 address)
func (o ScalewayInstanceV1ServerIpv6PropertiesPtrOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1ServerIpv6Properties) *string {
		if v == nil {
			return nil
		}
		return v.Gateway
	}).(pulumi.StringPtrOutput)
}

// The IPv6 IP-addresses CIDR netmask
func (o ScalewayInstanceV1ServerIpv6PropertiesPtrOutput) Netmask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1ServerIpv6Properties) *string {
		if v == nil {
			return nil
		}
		return v.Netmask
	}).(pulumi.StringPtrOutput)
}

// The server location
type ScalewayInstanceV1ServerLocationProperties struct {
	Cluster_id    *string `pulumi:"cluster_id"`
	Hypervisor_id *string `pulumi:"hypervisor_id"`
	Node_id       *string `pulumi:"node_id"`
	Platform_id   *string `pulumi:"platform_id"`
	Zone_id       *string `pulumi:"zone_id"`
}

// The server location
type ScalewayInstanceV1ServerLocationPropertiesOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1ServerLocationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalewayInstanceV1ServerLocationProperties)(nil)).Elem()
}

func (o ScalewayInstanceV1ServerLocationPropertiesOutput) ToScalewayInstanceV1ServerLocationPropertiesOutput() ScalewayInstanceV1ServerLocationPropertiesOutput {
	return o
}

func (o ScalewayInstanceV1ServerLocationPropertiesOutput) ToScalewayInstanceV1ServerLocationPropertiesOutputWithContext(ctx context.Context) ScalewayInstanceV1ServerLocationPropertiesOutput {
	return o
}

func (o ScalewayInstanceV1ServerLocationPropertiesOutput) Cluster_id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1ServerLocationProperties) *string { return v.Cluster_id }).(pulumi.StringPtrOutput)
}

func (o ScalewayInstanceV1ServerLocationPropertiesOutput) Hypervisor_id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1ServerLocationProperties) *string { return v.Hypervisor_id }).(pulumi.StringPtrOutput)
}

func (o ScalewayInstanceV1ServerLocationPropertiesOutput) Node_id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1ServerLocationProperties) *string { return v.Node_id }).(pulumi.StringPtrOutput)
}

func (o ScalewayInstanceV1ServerLocationPropertiesOutput) Platform_id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1ServerLocationProperties) *string { return v.Platform_id }).(pulumi.StringPtrOutput)
}

func (o ScalewayInstanceV1ServerLocationPropertiesOutput) Zone_id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1ServerLocationProperties) *string { return v.Zone_id }).(pulumi.StringPtrOutput)
}

type ScalewayInstanceV1ServerLocationPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1ServerLocationPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalewayInstanceV1ServerLocationProperties)(nil)).Elem()
}

func (o ScalewayInstanceV1ServerLocationPropertiesPtrOutput) ToScalewayInstanceV1ServerLocationPropertiesPtrOutput() ScalewayInstanceV1ServerLocationPropertiesPtrOutput {
	return o
}

func (o ScalewayInstanceV1ServerLocationPropertiesPtrOutput) ToScalewayInstanceV1ServerLocationPropertiesPtrOutputWithContext(ctx context.Context) ScalewayInstanceV1ServerLocationPropertiesPtrOutput {
	return o
}

func (o ScalewayInstanceV1ServerLocationPropertiesPtrOutput) Elem() ScalewayInstanceV1ServerLocationPropertiesOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1ServerLocationProperties) ScalewayInstanceV1ServerLocationProperties {
		if v != nil {
			return *v
		}
		var ret ScalewayInstanceV1ServerLocationProperties
		return ret
	}).(ScalewayInstanceV1ServerLocationPropertiesOutput)
}

func (o ScalewayInstanceV1ServerLocationPropertiesPtrOutput) Cluster_id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1ServerLocationProperties) *string {
		if v == nil {
			return nil
		}
		return v.Cluster_id
	}).(pulumi.StringPtrOutput)
}

func (o ScalewayInstanceV1ServerLocationPropertiesPtrOutput) Hypervisor_id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1ServerLocationProperties) *string {
		if v == nil {
			return nil
		}
		return v.Hypervisor_id
	}).(pulumi.StringPtrOutput)
}

func (o ScalewayInstanceV1ServerLocationPropertiesPtrOutput) Node_id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1ServerLocationProperties) *string {
		if v == nil {
			return nil
		}
		return v.Node_id
	}).(pulumi.StringPtrOutput)
}

func (o ScalewayInstanceV1ServerLocationPropertiesPtrOutput) Platform_id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1ServerLocationProperties) *string {
		if v == nil {
			return nil
		}
		return v.Platform_id
	}).(pulumi.StringPtrOutput)
}

func (o ScalewayInstanceV1ServerLocationPropertiesPtrOutput) Zone_id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1ServerLocationProperties) *string {
		if v == nil {
			return nil
		}
		return v.Zone_id
	}).(pulumi.StringPtrOutput)
}

type ScalewayInstanceV1ServerMaintenance struct {
}

type ScalewayInstanceV1ServerMaintenanceOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1ServerMaintenanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalewayInstanceV1ServerMaintenance)(nil)).Elem()
}

func (o ScalewayInstanceV1ServerMaintenanceOutput) ToScalewayInstanceV1ServerMaintenanceOutput() ScalewayInstanceV1ServerMaintenanceOutput {
	return o
}

func (o ScalewayInstanceV1ServerMaintenanceOutput) ToScalewayInstanceV1ServerMaintenanceOutputWithContext(ctx context.Context) ScalewayInstanceV1ServerMaintenanceOutput {
	return o
}

type ScalewayInstanceV1ServerMaintenanceArrayOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1ServerMaintenanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScalewayInstanceV1ServerMaintenance)(nil)).Elem()
}

func (o ScalewayInstanceV1ServerMaintenanceArrayOutput) ToScalewayInstanceV1ServerMaintenanceArrayOutput() ScalewayInstanceV1ServerMaintenanceArrayOutput {
	return o
}

func (o ScalewayInstanceV1ServerMaintenanceArrayOutput) ToScalewayInstanceV1ServerMaintenanceArrayOutputWithContext(ctx context.Context) ScalewayInstanceV1ServerMaintenanceArrayOutput {
	return o
}

func (o ScalewayInstanceV1ServerMaintenanceArrayOutput) Index(i pulumi.IntInput) ScalewayInstanceV1ServerMaintenanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScalewayInstanceV1ServerMaintenance {
		return vs[0].([]ScalewayInstanceV1ServerMaintenance)[vs[1].(int)]
	}).(ScalewayInstanceV1ServerMaintenanceOutput)
}

// Information about the public IP
type ScalewayInstanceV1ServerPublicIpProperties struct {
	// The server public IPv4 IP-Address (IPv4 address)
	Address *string `pulumi:"address"`
	// True if the IP address is dynamic
	Dynamic *bool `pulumi:"dynamic"`
	// The unique ID of the IP address
	Id *string `pulumi:"id"`
}

// Information about the public IP
type ScalewayInstanceV1ServerPublicIpPropertiesOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1ServerPublicIpPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalewayInstanceV1ServerPublicIpProperties)(nil)).Elem()
}

func (o ScalewayInstanceV1ServerPublicIpPropertiesOutput) ToScalewayInstanceV1ServerPublicIpPropertiesOutput() ScalewayInstanceV1ServerPublicIpPropertiesOutput {
	return o
}

func (o ScalewayInstanceV1ServerPublicIpPropertiesOutput) ToScalewayInstanceV1ServerPublicIpPropertiesOutputWithContext(ctx context.Context) ScalewayInstanceV1ServerPublicIpPropertiesOutput {
	return o
}

// The server public IPv4 IP-Address (IPv4 address)
func (o ScalewayInstanceV1ServerPublicIpPropertiesOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1ServerPublicIpProperties) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// True if the IP address is dynamic
func (o ScalewayInstanceV1ServerPublicIpPropertiesOutput) Dynamic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1ServerPublicIpProperties) *bool { return v.Dynamic }).(pulumi.BoolPtrOutput)
}

// The unique ID of the IP address
func (o ScalewayInstanceV1ServerPublicIpPropertiesOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1ServerPublicIpProperties) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type ScalewayInstanceV1ServerPublicIpPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1ServerPublicIpPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalewayInstanceV1ServerPublicIpProperties)(nil)).Elem()
}

func (o ScalewayInstanceV1ServerPublicIpPropertiesPtrOutput) ToScalewayInstanceV1ServerPublicIpPropertiesPtrOutput() ScalewayInstanceV1ServerPublicIpPropertiesPtrOutput {
	return o
}

func (o ScalewayInstanceV1ServerPublicIpPropertiesPtrOutput) ToScalewayInstanceV1ServerPublicIpPropertiesPtrOutputWithContext(ctx context.Context) ScalewayInstanceV1ServerPublicIpPropertiesPtrOutput {
	return o
}

func (o ScalewayInstanceV1ServerPublicIpPropertiesPtrOutput) Elem() ScalewayInstanceV1ServerPublicIpPropertiesOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1ServerPublicIpProperties) ScalewayInstanceV1ServerPublicIpProperties {
		if v != nil {
			return *v
		}
		var ret ScalewayInstanceV1ServerPublicIpProperties
		return ret
	}).(ScalewayInstanceV1ServerPublicIpPropertiesOutput)
}

// The server public IPv4 IP-Address (IPv4 address)
func (o ScalewayInstanceV1ServerPublicIpPropertiesPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1ServerPublicIpProperties) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

// True if the IP address is dynamic
func (o ScalewayInstanceV1ServerPublicIpPropertiesPtrOutput) Dynamic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1ServerPublicIpProperties) *bool {
		if v == nil {
			return nil
		}
		return v.Dynamic
	}).(pulumi.BoolPtrOutput)
}

// The unique ID of the IP address
func (o ScalewayInstanceV1ServerPublicIpPropertiesPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1ServerPublicIpProperties) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The server security group
type ScalewayInstanceV1ServerSecurityGroupProperties struct {
	Id   *string `pulumi:"id"`
	Name *string `pulumi:"name"`
}

// The server security group
type ScalewayInstanceV1ServerSecurityGroupPropertiesOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1ServerSecurityGroupPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalewayInstanceV1ServerSecurityGroupProperties)(nil)).Elem()
}

func (o ScalewayInstanceV1ServerSecurityGroupPropertiesOutput) ToScalewayInstanceV1ServerSecurityGroupPropertiesOutput() ScalewayInstanceV1ServerSecurityGroupPropertiesOutput {
	return o
}

func (o ScalewayInstanceV1ServerSecurityGroupPropertiesOutput) ToScalewayInstanceV1ServerSecurityGroupPropertiesOutputWithContext(ctx context.Context) ScalewayInstanceV1ServerSecurityGroupPropertiesOutput {
	return o
}

func (o ScalewayInstanceV1ServerSecurityGroupPropertiesOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1ServerSecurityGroupProperties) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o ScalewayInstanceV1ServerSecurityGroupPropertiesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1ServerSecurityGroupProperties) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ScalewayInstanceV1ServerSecurityGroupPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1ServerSecurityGroupPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalewayInstanceV1ServerSecurityGroupProperties)(nil)).Elem()
}

func (o ScalewayInstanceV1ServerSecurityGroupPropertiesPtrOutput) ToScalewayInstanceV1ServerSecurityGroupPropertiesPtrOutput() ScalewayInstanceV1ServerSecurityGroupPropertiesPtrOutput {
	return o
}

func (o ScalewayInstanceV1ServerSecurityGroupPropertiesPtrOutput) ToScalewayInstanceV1ServerSecurityGroupPropertiesPtrOutputWithContext(ctx context.Context) ScalewayInstanceV1ServerSecurityGroupPropertiesPtrOutput {
	return o
}

func (o ScalewayInstanceV1ServerSecurityGroupPropertiesPtrOutput) Elem() ScalewayInstanceV1ServerSecurityGroupPropertiesOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1ServerSecurityGroupProperties) ScalewayInstanceV1ServerSecurityGroupProperties {
		if v != nil {
			return *v
		}
		var ret ScalewayInstanceV1ServerSecurityGroupProperties
		return ret
	}).(ScalewayInstanceV1ServerSecurityGroupPropertiesOutput)
}

func (o ScalewayInstanceV1ServerSecurityGroupPropertiesPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1ServerSecurityGroupProperties) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

func (o ScalewayInstanceV1ServerSecurityGroupPropertiesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1ServerSecurityGroupProperties) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

type ScalewayInstanceV1ServerSummary struct {
	Id   *string `pulumi:"id"`
	Name *string `pulumi:"name"`
}

type ScalewayInstanceV1ServerSummaryOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1ServerSummaryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalewayInstanceV1ServerSummary)(nil)).Elem()
}

func (o ScalewayInstanceV1ServerSummaryOutput) ToScalewayInstanceV1ServerSummaryOutput() ScalewayInstanceV1ServerSummaryOutput {
	return o
}

func (o ScalewayInstanceV1ServerSummaryOutput) ToScalewayInstanceV1ServerSummaryOutputWithContext(ctx context.Context) ScalewayInstanceV1ServerSummaryOutput {
	return o
}

func (o ScalewayInstanceV1ServerSummaryOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1ServerSummary) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o ScalewayInstanceV1ServerSummaryOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1ServerSummary) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ScalewayInstanceV1ServerSummaryPtrOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1ServerSummaryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalewayInstanceV1ServerSummary)(nil)).Elem()
}

func (o ScalewayInstanceV1ServerSummaryPtrOutput) ToScalewayInstanceV1ServerSummaryPtrOutput() ScalewayInstanceV1ServerSummaryPtrOutput {
	return o
}

func (o ScalewayInstanceV1ServerSummaryPtrOutput) ToScalewayInstanceV1ServerSummaryPtrOutputWithContext(ctx context.Context) ScalewayInstanceV1ServerSummaryPtrOutput {
	return o
}

func (o ScalewayInstanceV1ServerSummaryPtrOutput) Elem() ScalewayInstanceV1ServerSummaryOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1ServerSummary) ScalewayInstanceV1ServerSummary {
		if v != nil {
			return *v
		}
		var ret ScalewayInstanceV1ServerSummary
		return ret
	}).(ScalewayInstanceV1ServerSummaryOutput)
}

func (o ScalewayInstanceV1ServerSummaryPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1ServerSummary) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

func (o ScalewayInstanceV1ServerSummaryPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1ServerSummary) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

type ScalewayInstanceV1ServerType struct {
	// Alternative instance name if any
	Alt_names []string `pulumi:"alt_names"`
	// CPU architecture
	Arch *ScalewayInstanceV1ServerTypeArch `pulumi:"arch"`
	// True if it is a baremetal instance
	Baremetal *bool `pulumi:"baremetal"`
	// Capabilities
	Capabilities *ScalewayInstanceV1ServerTypeCapabilitiesProperties `pulumi:"capabilities"`
	// Number of GPU
	Gpu *float64 `pulumi:"gpu"`
	// Hourly price in Euro
	Hourly_price *float64 `pulumi:"hourly_price"`
	// Estimated monthly price, for a 30 days month, in Euro
	Monthly_price *float64 `pulumi:"monthly_price"`
	// Number of CPU
	Ncpus *float64 `pulumi:"ncpus"`
	// Network available for the instance
	Network *ScalewayInstanceV1ServerTypeNetworkProperties `pulumi:"network"`
	// Additional volume constraints
	Per_volume_constraint *ScalewayInstanceV1ServerTypePerVolumeConstraintProperties `pulumi:"per_volume_constraint"`
	// Available RAM in bytes
	Ram *float64 `pulumi:"ram"`
	// Initial volume constraints
	Volumes_constraint *ScalewayInstanceV1ServerTypeVolumesConstraintProperties `pulumi:"volumes_constraint"`
}

// Defaults sets the appropriate defaults for ScalewayInstanceV1ServerType
func (val *ScalewayInstanceV1ServerType) Defaults() *ScalewayInstanceV1ServerType {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Arch == nil {
		arch_ := ScalewayInstanceV1ServerTypeArch("x86_64")
		tmp.Arch = &arch_
	}
	return &tmp
}

type ScalewayInstanceV1ServerTypeOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1ServerTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalewayInstanceV1ServerType)(nil)).Elem()
}

func (o ScalewayInstanceV1ServerTypeOutput) ToScalewayInstanceV1ServerTypeOutput() ScalewayInstanceV1ServerTypeOutput {
	return o
}

func (o ScalewayInstanceV1ServerTypeOutput) ToScalewayInstanceV1ServerTypeOutputWithContext(ctx context.Context) ScalewayInstanceV1ServerTypeOutput {
	return o
}

// Alternative instance name if any
func (o ScalewayInstanceV1ServerTypeOutput) Alt_names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ScalewayInstanceV1ServerType) []string { return v.Alt_names }).(pulumi.StringArrayOutput)
}

// CPU architecture
func (o ScalewayInstanceV1ServerTypeOutput) Arch() ScalewayInstanceV1ServerTypeArchPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1ServerType) *ScalewayInstanceV1ServerTypeArch { return v.Arch }).(ScalewayInstanceV1ServerTypeArchPtrOutput)
}

// True if it is a baremetal instance
func (o ScalewayInstanceV1ServerTypeOutput) Baremetal() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1ServerType) *bool { return v.Baremetal }).(pulumi.BoolPtrOutput)
}

// Capabilities
func (o ScalewayInstanceV1ServerTypeOutput) Capabilities() ScalewayInstanceV1ServerTypeCapabilitiesPropertiesPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1ServerType) *ScalewayInstanceV1ServerTypeCapabilitiesProperties {
		return v.Capabilities
	}).(ScalewayInstanceV1ServerTypeCapabilitiesPropertiesPtrOutput)
}

// Number of GPU
func (o ScalewayInstanceV1ServerTypeOutput) Gpu() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1ServerType) *float64 { return v.Gpu }).(pulumi.Float64PtrOutput)
}

// Hourly price in Euro
func (o ScalewayInstanceV1ServerTypeOutput) Hourly_price() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1ServerType) *float64 { return v.Hourly_price }).(pulumi.Float64PtrOutput)
}

// Estimated monthly price, for a 30 days month, in Euro
func (o ScalewayInstanceV1ServerTypeOutput) Monthly_price() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1ServerType) *float64 { return v.Monthly_price }).(pulumi.Float64PtrOutput)
}

// Number of CPU
func (o ScalewayInstanceV1ServerTypeOutput) Ncpus() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1ServerType) *float64 { return v.Ncpus }).(pulumi.Float64PtrOutput)
}

// Network available for the instance
func (o ScalewayInstanceV1ServerTypeOutput) Network() ScalewayInstanceV1ServerTypeNetworkPropertiesPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1ServerType) *ScalewayInstanceV1ServerTypeNetworkProperties { return v.Network }).(ScalewayInstanceV1ServerTypeNetworkPropertiesPtrOutput)
}

// Additional volume constraints
func (o ScalewayInstanceV1ServerTypeOutput) Per_volume_constraint() ScalewayInstanceV1ServerTypePerVolumeConstraintPropertiesPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1ServerType) *ScalewayInstanceV1ServerTypePerVolumeConstraintProperties {
		return v.Per_volume_constraint
	}).(ScalewayInstanceV1ServerTypePerVolumeConstraintPropertiesPtrOutput)
}

// Available RAM in bytes
func (o ScalewayInstanceV1ServerTypeOutput) Ram() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1ServerType) *float64 { return v.Ram }).(pulumi.Float64PtrOutput)
}

// Initial volume constraints
func (o ScalewayInstanceV1ServerTypeOutput) Volumes_constraint() ScalewayInstanceV1ServerTypeVolumesConstraintPropertiesPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1ServerType) *ScalewayInstanceV1ServerTypeVolumesConstraintProperties {
		return v.Volumes_constraint
	}).(ScalewayInstanceV1ServerTypeVolumesConstraintPropertiesPtrOutput)
}

type ScalewayInstanceV1ServerTypeMapOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1ServerTypeMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ScalewayInstanceV1ServerType)(nil)).Elem()
}

func (o ScalewayInstanceV1ServerTypeMapOutput) ToScalewayInstanceV1ServerTypeMapOutput() ScalewayInstanceV1ServerTypeMapOutput {
	return o
}

func (o ScalewayInstanceV1ServerTypeMapOutput) ToScalewayInstanceV1ServerTypeMapOutputWithContext(ctx context.Context) ScalewayInstanceV1ServerTypeMapOutput {
	return o
}

func (o ScalewayInstanceV1ServerTypeMapOutput) MapIndex(k pulumi.StringInput) ScalewayInstanceV1ServerTypeOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ScalewayInstanceV1ServerType {
		return vs[0].(map[string]ScalewayInstanceV1ServerType)[vs[1].(string)]
	}).(ScalewayInstanceV1ServerTypeOutput)
}

// Capabilities
type ScalewayInstanceV1ServerTypeCapabilitiesProperties struct {
	// True if server supports block storage
	Block_storage *bool `pulumi:"block_storage"`
	// List of supported boot types
	Boot_types []ScalewayInstanceV1ServerTypeCapabilitiesPropertiesBootTypesItem `pulumi:"boot_types"`
}

// Capabilities
type ScalewayInstanceV1ServerTypeCapabilitiesPropertiesOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1ServerTypeCapabilitiesPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalewayInstanceV1ServerTypeCapabilitiesProperties)(nil)).Elem()
}

func (o ScalewayInstanceV1ServerTypeCapabilitiesPropertiesOutput) ToScalewayInstanceV1ServerTypeCapabilitiesPropertiesOutput() ScalewayInstanceV1ServerTypeCapabilitiesPropertiesOutput {
	return o
}

func (o ScalewayInstanceV1ServerTypeCapabilitiesPropertiesOutput) ToScalewayInstanceV1ServerTypeCapabilitiesPropertiesOutputWithContext(ctx context.Context) ScalewayInstanceV1ServerTypeCapabilitiesPropertiesOutput {
	return o
}

// True if server supports block storage
func (o ScalewayInstanceV1ServerTypeCapabilitiesPropertiesOutput) Block_storage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1ServerTypeCapabilitiesProperties) *bool { return v.Block_storage }).(pulumi.BoolPtrOutput)
}

// List of supported boot types
func (o ScalewayInstanceV1ServerTypeCapabilitiesPropertiesOutput) Boot_types() ScalewayInstanceV1ServerTypeCapabilitiesPropertiesBootTypesItemArrayOutput {
	return o.ApplyT(func(v ScalewayInstanceV1ServerTypeCapabilitiesProperties) []ScalewayInstanceV1ServerTypeCapabilitiesPropertiesBootTypesItem {
		return v.Boot_types
	}).(ScalewayInstanceV1ServerTypeCapabilitiesPropertiesBootTypesItemArrayOutput)
}

type ScalewayInstanceV1ServerTypeCapabilitiesPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1ServerTypeCapabilitiesPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalewayInstanceV1ServerTypeCapabilitiesProperties)(nil)).Elem()
}

func (o ScalewayInstanceV1ServerTypeCapabilitiesPropertiesPtrOutput) ToScalewayInstanceV1ServerTypeCapabilitiesPropertiesPtrOutput() ScalewayInstanceV1ServerTypeCapabilitiesPropertiesPtrOutput {
	return o
}

func (o ScalewayInstanceV1ServerTypeCapabilitiesPropertiesPtrOutput) ToScalewayInstanceV1ServerTypeCapabilitiesPropertiesPtrOutputWithContext(ctx context.Context) ScalewayInstanceV1ServerTypeCapabilitiesPropertiesPtrOutput {
	return o
}

func (o ScalewayInstanceV1ServerTypeCapabilitiesPropertiesPtrOutput) Elem() ScalewayInstanceV1ServerTypeCapabilitiesPropertiesOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1ServerTypeCapabilitiesProperties) ScalewayInstanceV1ServerTypeCapabilitiesProperties {
		if v != nil {
			return *v
		}
		var ret ScalewayInstanceV1ServerTypeCapabilitiesProperties
		return ret
	}).(ScalewayInstanceV1ServerTypeCapabilitiesPropertiesOutput)
}

// True if server supports block storage
func (o ScalewayInstanceV1ServerTypeCapabilitiesPropertiesPtrOutput) Block_storage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1ServerTypeCapabilitiesProperties) *bool {
		if v == nil {
			return nil
		}
		return v.Block_storage
	}).(pulumi.BoolPtrOutput)
}

// List of supported boot types
func (o ScalewayInstanceV1ServerTypeCapabilitiesPropertiesPtrOutput) Boot_types() ScalewayInstanceV1ServerTypeCapabilitiesPropertiesBootTypesItemArrayOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1ServerTypeCapabilitiesProperties) []ScalewayInstanceV1ServerTypeCapabilitiesPropertiesBootTypesItem {
		if v == nil {
			return nil
		}
		return v.Boot_types
	}).(ScalewayInstanceV1ServerTypeCapabilitiesPropertiesBootTypesItemArrayOutput)
}

type ScalewayInstanceV1ServerTypeNetworkInterface struct {
	// Maximum internal bandwidth in bits per seconds
	Internal_bandwidth *float64 `pulumi:"internal_bandwidth"`
	// Maximum internet bandwidth in bits per seconds
	Internet_bandwidth *float64 `pulumi:"internet_bandwidth"`
}

type ScalewayInstanceV1ServerTypeNetworkInterfaceOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1ServerTypeNetworkInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalewayInstanceV1ServerTypeNetworkInterface)(nil)).Elem()
}

func (o ScalewayInstanceV1ServerTypeNetworkInterfaceOutput) ToScalewayInstanceV1ServerTypeNetworkInterfaceOutput() ScalewayInstanceV1ServerTypeNetworkInterfaceOutput {
	return o
}

func (o ScalewayInstanceV1ServerTypeNetworkInterfaceOutput) ToScalewayInstanceV1ServerTypeNetworkInterfaceOutputWithContext(ctx context.Context) ScalewayInstanceV1ServerTypeNetworkInterfaceOutput {
	return o
}

// Maximum internal bandwidth in bits per seconds
func (o ScalewayInstanceV1ServerTypeNetworkInterfaceOutput) Internal_bandwidth() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1ServerTypeNetworkInterface) *float64 { return v.Internal_bandwidth }).(pulumi.Float64PtrOutput)
}

// Maximum internet bandwidth in bits per seconds
func (o ScalewayInstanceV1ServerTypeNetworkInterfaceOutput) Internet_bandwidth() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1ServerTypeNetworkInterface) *float64 { return v.Internet_bandwidth }).(pulumi.Float64PtrOutput)
}

type ScalewayInstanceV1ServerTypeNetworkInterfaceArrayOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1ServerTypeNetworkInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScalewayInstanceV1ServerTypeNetworkInterface)(nil)).Elem()
}

func (o ScalewayInstanceV1ServerTypeNetworkInterfaceArrayOutput) ToScalewayInstanceV1ServerTypeNetworkInterfaceArrayOutput() ScalewayInstanceV1ServerTypeNetworkInterfaceArrayOutput {
	return o
}

func (o ScalewayInstanceV1ServerTypeNetworkInterfaceArrayOutput) ToScalewayInstanceV1ServerTypeNetworkInterfaceArrayOutputWithContext(ctx context.Context) ScalewayInstanceV1ServerTypeNetworkInterfaceArrayOutput {
	return o
}

func (o ScalewayInstanceV1ServerTypeNetworkInterfaceArrayOutput) Index(i pulumi.IntInput) ScalewayInstanceV1ServerTypeNetworkInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScalewayInstanceV1ServerTypeNetworkInterface {
		return vs[0].([]ScalewayInstanceV1ServerTypeNetworkInterface)[vs[1].(int)]
	}).(ScalewayInstanceV1ServerTypeNetworkInterfaceOutput)
}

// Network available for the instance
type ScalewayInstanceV1ServerTypeNetworkProperties struct {
	// List of available network interfaces
	Interfaces []ScalewayInstanceV1ServerTypeNetworkInterface `pulumi:"interfaces"`
	// True if IPv6 is enabled
	Ipv6_support *bool `pulumi:"ipv6_support"`
	// Total maximum internal bandwidth in bits per seconds
	Sum_internal_bandwidth *float64 `pulumi:"sum_internal_bandwidth"`
	// Total maximum internet bandwidth in bits per seconds
	Sum_internet_bandwidth *float64 `pulumi:"sum_internet_bandwidth"`
}

// Network available for the instance
type ScalewayInstanceV1ServerTypeNetworkPropertiesOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1ServerTypeNetworkPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalewayInstanceV1ServerTypeNetworkProperties)(nil)).Elem()
}

func (o ScalewayInstanceV1ServerTypeNetworkPropertiesOutput) ToScalewayInstanceV1ServerTypeNetworkPropertiesOutput() ScalewayInstanceV1ServerTypeNetworkPropertiesOutput {
	return o
}

func (o ScalewayInstanceV1ServerTypeNetworkPropertiesOutput) ToScalewayInstanceV1ServerTypeNetworkPropertiesOutputWithContext(ctx context.Context) ScalewayInstanceV1ServerTypeNetworkPropertiesOutput {
	return o
}

// List of available network interfaces
func (o ScalewayInstanceV1ServerTypeNetworkPropertiesOutput) Interfaces() ScalewayInstanceV1ServerTypeNetworkInterfaceArrayOutput {
	return o.ApplyT(func(v ScalewayInstanceV1ServerTypeNetworkProperties) []ScalewayInstanceV1ServerTypeNetworkInterface {
		return v.Interfaces
	}).(ScalewayInstanceV1ServerTypeNetworkInterfaceArrayOutput)
}

// True if IPv6 is enabled
func (o ScalewayInstanceV1ServerTypeNetworkPropertiesOutput) Ipv6_support() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1ServerTypeNetworkProperties) *bool { return v.Ipv6_support }).(pulumi.BoolPtrOutput)
}

// Total maximum internal bandwidth in bits per seconds
func (o ScalewayInstanceV1ServerTypeNetworkPropertiesOutput) Sum_internal_bandwidth() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1ServerTypeNetworkProperties) *float64 { return v.Sum_internal_bandwidth }).(pulumi.Float64PtrOutput)
}

// Total maximum internet bandwidth in bits per seconds
func (o ScalewayInstanceV1ServerTypeNetworkPropertiesOutput) Sum_internet_bandwidth() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1ServerTypeNetworkProperties) *float64 { return v.Sum_internet_bandwidth }).(pulumi.Float64PtrOutput)
}

type ScalewayInstanceV1ServerTypeNetworkPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1ServerTypeNetworkPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalewayInstanceV1ServerTypeNetworkProperties)(nil)).Elem()
}

func (o ScalewayInstanceV1ServerTypeNetworkPropertiesPtrOutput) ToScalewayInstanceV1ServerTypeNetworkPropertiesPtrOutput() ScalewayInstanceV1ServerTypeNetworkPropertiesPtrOutput {
	return o
}

func (o ScalewayInstanceV1ServerTypeNetworkPropertiesPtrOutput) ToScalewayInstanceV1ServerTypeNetworkPropertiesPtrOutputWithContext(ctx context.Context) ScalewayInstanceV1ServerTypeNetworkPropertiesPtrOutput {
	return o
}

func (o ScalewayInstanceV1ServerTypeNetworkPropertiesPtrOutput) Elem() ScalewayInstanceV1ServerTypeNetworkPropertiesOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1ServerTypeNetworkProperties) ScalewayInstanceV1ServerTypeNetworkProperties {
		if v != nil {
			return *v
		}
		var ret ScalewayInstanceV1ServerTypeNetworkProperties
		return ret
	}).(ScalewayInstanceV1ServerTypeNetworkPropertiesOutput)
}

// List of available network interfaces
func (o ScalewayInstanceV1ServerTypeNetworkPropertiesPtrOutput) Interfaces() ScalewayInstanceV1ServerTypeNetworkInterfaceArrayOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1ServerTypeNetworkProperties) []ScalewayInstanceV1ServerTypeNetworkInterface {
		if v == nil {
			return nil
		}
		return v.Interfaces
	}).(ScalewayInstanceV1ServerTypeNetworkInterfaceArrayOutput)
}

// True if IPv6 is enabled
func (o ScalewayInstanceV1ServerTypeNetworkPropertiesPtrOutput) Ipv6_support() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1ServerTypeNetworkProperties) *bool {
		if v == nil {
			return nil
		}
		return v.Ipv6_support
	}).(pulumi.BoolPtrOutput)
}

// Total maximum internal bandwidth in bits per seconds
func (o ScalewayInstanceV1ServerTypeNetworkPropertiesPtrOutput) Sum_internal_bandwidth() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1ServerTypeNetworkProperties) *float64 {
		if v == nil {
			return nil
		}
		return v.Sum_internal_bandwidth
	}).(pulumi.Float64PtrOutput)
}

// Total maximum internet bandwidth in bits per seconds
func (o ScalewayInstanceV1ServerTypeNetworkPropertiesPtrOutput) Sum_internet_bandwidth() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1ServerTypeNetworkProperties) *float64 {
		if v == nil {
			return nil
		}
		return v.Sum_internet_bandwidth
	}).(pulumi.Float64PtrOutput)
}

// Additional volume constraints
type ScalewayInstanceV1ServerTypePerVolumeConstraintProperties struct {
	// Local SSD volumes
	L_ssd *ScalewayInstanceV1ServerTypePerVolumeConstraintPropertiesLSsdProperties `pulumi:"l_ssd"`
}

// Additional volume constraints
type ScalewayInstanceV1ServerTypePerVolumeConstraintPropertiesOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1ServerTypePerVolumeConstraintPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalewayInstanceV1ServerTypePerVolumeConstraintProperties)(nil)).Elem()
}

func (o ScalewayInstanceV1ServerTypePerVolumeConstraintPropertiesOutput) ToScalewayInstanceV1ServerTypePerVolumeConstraintPropertiesOutput() ScalewayInstanceV1ServerTypePerVolumeConstraintPropertiesOutput {
	return o
}

func (o ScalewayInstanceV1ServerTypePerVolumeConstraintPropertiesOutput) ToScalewayInstanceV1ServerTypePerVolumeConstraintPropertiesOutputWithContext(ctx context.Context) ScalewayInstanceV1ServerTypePerVolumeConstraintPropertiesOutput {
	return o
}

// Local SSD volumes
func (o ScalewayInstanceV1ServerTypePerVolumeConstraintPropertiesOutput) L_ssd() ScalewayInstanceV1ServerTypePerVolumeConstraintPropertiesLSsdPropertiesPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1ServerTypePerVolumeConstraintProperties) *ScalewayInstanceV1ServerTypePerVolumeConstraintPropertiesLSsdProperties {
		return v.L_ssd
	}).(ScalewayInstanceV1ServerTypePerVolumeConstraintPropertiesLSsdPropertiesPtrOutput)
}

type ScalewayInstanceV1ServerTypePerVolumeConstraintPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1ServerTypePerVolumeConstraintPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalewayInstanceV1ServerTypePerVolumeConstraintProperties)(nil)).Elem()
}

func (o ScalewayInstanceV1ServerTypePerVolumeConstraintPropertiesPtrOutput) ToScalewayInstanceV1ServerTypePerVolumeConstraintPropertiesPtrOutput() ScalewayInstanceV1ServerTypePerVolumeConstraintPropertiesPtrOutput {
	return o
}

func (o ScalewayInstanceV1ServerTypePerVolumeConstraintPropertiesPtrOutput) ToScalewayInstanceV1ServerTypePerVolumeConstraintPropertiesPtrOutputWithContext(ctx context.Context) ScalewayInstanceV1ServerTypePerVolumeConstraintPropertiesPtrOutput {
	return o
}

func (o ScalewayInstanceV1ServerTypePerVolumeConstraintPropertiesPtrOutput) Elem() ScalewayInstanceV1ServerTypePerVolumeConstraintPropertiesOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1ServerTypePerVolumeConstraintProperties) ScalewayInstanceV1ServerTypePerVolumeConstraintProperties {
		if v != nil {
			return *v
		}
		var ret ScalewayInstanceV1ServerTypePerVolumeConstraintProperties
		return ret
	}).(ScalewayInstanceV1ServerTypePerVolumeConstraintPropertiesOutput)
}

// Local SSD volumes
func (o ScalewayInstanceV1ServerTypePerVolumeConstraintPropertiesPtrOutput) L_ssd() ScalewayInstanceV1ServerTypePerVolumeConstraintPropertiesLSsdPropertiesPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1ServerTypePerVolumeConstraintProperties) *ScalewayInstanceV1ServerTypePerVolumeConstraintPropertiesLSsdProperties {
		if v == nil {
			return nil
		}
		return v.L_ssd
	}).(ScalewayInstanceV1ServerTypePerVolumeConstraintPropertiesLSsdPropertiesPtrOutput)
}

// Local SSD volumes
type ScalewayInstanceV1ServerTypePerVolumeConstraintPropertiesLSsdProperties struct {
	// Maximum volume size in bytes (in bytes)
	Max_size *float64 `pulumi:"max_size"`
	// Minimum volume size in bytes (in bytes)
	Min_size *float64 `pulumi:"min_size"`
}

// Local SSD volumes
type ScalewayInstanceV1ServerTypePerVolumeConstraintPropertiesLSsdPropertiesOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1ServerTypePerVolumeConstraintPropertiesLSsdPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalewayInstanceV1ServerTypePerVolumeConstraintPropertiesLSsdProperties)(nil)).Elem()
}

func (o ScalewayInstanceV1ServerTypePerVolumeConstraintPropertiesLSsdPropertiesOutput) ToScalewayInstanceV1ServerTypePerVolumeConstraintPropertiesLSsdPropertiesOutput() ScalewayInstanceV1ServerTypePerVolumeConstraintPropertiesLSsdPropertiesOutput {
	return o
}

func (o ScalewayInstanceV1ServerTypePerVolumeConstraintPropertiesLSsdPropertiesOutput) ToScalewayInstanceV1ServerTypePerVolumeConstraintPropertiesLSsdPropertiesOutputWithContext(ctx context.Context) ScalewayInstanceV1ServerTypePerVolumeConstraintPropertiesLSsdPropertiesOutput {
	return o
}

// Maximum volume size in bytes (in bytes)
func (o ScalewayInstanceV1ServerTypePerVolumeConstraintPropertiesLSsdPropertiesOutput) Max_size() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1ServerTypePerVolumeConstraintPropertiesLSsdProperties) *float64 {
		return v.Max_size
	}).(pulumi.Float64PtrOutput)
}

// Minimum volume size in bytes (in bytes)
func (o ScalewayInstanceV1ServerTypePerVolumeConstraintPropertiesLSsdPropertiesOutput) Min_size() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1ServerTypePerVolumeConstraintPropertiesLSsdProperties) *float64 {
		return v.Min_size
	}).(pulumi.Float64PtrOutput)
}

type ScalewayInstanceV1ServerTypePerVolumeConstraintPropertiesLSsdPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1ServerTypePerVolumeConstraintPropertiesLSsdPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalewayInstanceV1ServerTypePerVolumeConstraintPropertiesLSsdProperties)(nil)).Elem()
}

func (o ScalewayInstanceV1ServerTypePerVolumeConstraintPropertiesLSsdPropertiesPtrOutput) ToScalewayInstanceV1ServerTypePerVolumeConstraintPropertiesLSsdPropertiesPtrOutput() ScalewayInstanceV1ServerTypePerVolumeConstraintPropertiesLSsdPropertiesPtrOutput {
	return o
}

func (o ScalewayInstanceV1ServerTypePerVolumeConstraintPropertiesLSsdPropertiesPtrOutput) ToScalewayInstanceV1ServerTypePerVolumeConstraintPropertiesLSsdPropertiesPtrOutputWithContext(ctx context.Context) ScalewayInstanceV1ServerTypePerVolumeConstraintPropertiesLSsdPropertiesPtrOutput {
	return o
}

func (o ScalewayInstanceV1ServerTypePerVolumeConstraintPropertiesLSsdPropertiesPtrOutput) Elem() ScalewayInstanceV1ServerTypePerVolumeConstraintPropertiesLSsdPropertiesOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1ServerTypePerVolumeConstraintPropertiesLSsdProperties) ScalewayInstanceV1ServerTypePerVolumeConstraintPropertiesLSsdProperties {
		if v != nil {
			return *v
		}
		var ret ScalewayInstanceV1ServerTypePerVolumeConstraintPropertiesLSsdProperties
		return ret
	}).(ScalewayInstanceV1ServerTypePerVolumeConstraintPropertiesLSsdPropertiesOutput)
}

// Maximum volume size in bytes (in bytes)
func (o ScalewayInstanceV1ServerTypePerVolumeConstraintPropertiesLSsdPropertiesPtrOutput) Max_size() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1ServerTypePerVolumeConstraintPropertiesLSsdProperties) *float64 {
		if v == nil {
			return nil
		}
		return v.Max_size
	}).(pulumi.Float64PtrOutput)
}

// Minimum volume size in bytes (in bytes)
func (o ScalewayInstanceV1ServerTypePerVolumeConstraintPropertiesLSsdPropertiesPtrOutput) Min_size() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1ServerTypePerVolumeConstraintPropertiesLSsdProperties) *float64 {
		if v == nil {
			return nil
		}
		return v.Min_size
	}).(pulumi.Float64PtrOutput)
}

// Initial volume constraints
type ScalewayInstanceV1ServerTypeVolumesConstraintProperties struct {
	// Maximum volume size in bytes (in bytes)
	Max_size *float64 `pulumi:"max_size"`
	// Minimum volume size in bytes (in bytes)
	Min_size *float64 `pulumi:"min_size"`
}

// Initial volume constraints
type ScalewayInstanceV1ServerTypeVolumesConstraintPropertiesOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1ServerTypeVolumesConstraintPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalewayInstanceV1ServerTypeVolumesConstraintProperties)(nil)).Elem()
}

func (o ScalewayInstanceV1ServerTypeVolumesConstraintPropertiesOutput) ToScalewayInstanceV1ServerTypeVolumesConstraintPropertiesOutput() ScalewayInstanceV1ServerTypeVolumesConstraintPropertiesOutput {
	return o
}

func (o ScalewayInstanceV1ServerTypeVolumesConstraintPropertiesOutput) ToScalewayInstanceV1ServerTypeVolumesConstraintPropertiesOutputWithContext(ctx context.Context) ScalewayInstanceV1ServerTypeVolumesConstraintPropertiesOutput {
	return o
}

// Maximum volume size in bytes (in bytes)
func (o ScalewayInstanceV1ServerTypeVolumesConstraintPropertiesOutput) Max_size() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1ServerTypeVolumesConstraintProperties) *float64 { return v.Max_size }).(pulumi.Float64PtrOutput)
}

// Minimum volume size in bytes (in bytes)
func (o ScalewayInstanceV1ServerTypeVolumesConstraintPropertiesOutput) Min_size() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1ServerTypeVolumesConstraintProperties) *float64 { return v.Min_size }).(pulumi.Float64PtrOutput)
}

type ScalewayInstanceV1ServerTypeVolumesConstraintPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1ServerTypeVolumesConstraintPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalewayInstanceV1ServerTypeVolumesConstraintProperties)(nil)).Elem()
}

func (o ScalewayInstanceV1ServerTypeVolumesConstraintPropertiesPtrOutput) ToScalewayInstanceV1ServerTypeVolumesConstraintPropertiesPtrOutput() ScalewayInstanceV1ServerTypeVolumesConstraintPropertiesPtrOutput {
	return o
}

func (o ScalewayInstanceV1ServerTypeVolumesConstraintPropertiesPtrOutput) ToScalewayInstanceV1ServerTypeVolumesConstraintPropertiesPtrOutputWithContext(ctx context.Context) ScalewayInstanceV1ServerTypeVolumesConstraintPropertiesPtrOutput {
	return o
}

func (o ScalewayInstanceV1ServerTypeVolumesConstraintPropertiesPtrOutput) Elem() ScalewayInstanceV1ServerTypeVolumesConstraintPropertiesOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1ServerTypeVolumesConstraintProperties) ScalewayInstanceV1ServerTypeVolumesConstraintProperties {
		if v != nil {
			return *v
		}
		var ret ScalewayInstanceV1ServerTypeVolumesConstraintProperties
		return ret
	}).(ScalewayInstanceV1ServerTypeVolumesConstraintPropertiesOutput)
}

// Maximum volume size in bytes (in bytes)
func (o ScalewayInstanceV1ServerTypeVolumesConstraintPropertiesPtrOutput) Max_size() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1ServerTypeVolumesConstraintProperties) *float64 {
		if v == nil {
			return nil
		}
		return v.Max_size
	}).(pulumi.Float64PtrOutput)
}

// Minimum volume size in bytes (in bytes)
func (o ScalewayInstanceV1ServerTypeVolumesConstraintPropertiesPtrOutput) Min_size() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1ServerTypeVolumesConstraintProperties) *float64 {
		if v == nil {
			return nil
		}
		return v.Min_size
	}).(pulumi.Float64PtrOutput)
}

type ScalewayInstanceV1Volume struct {
	// The volume creation date (RFC 3339 format)
	Creation_date *string `pulumi:"creation_date"`
	// Show the volume NBD export URI
	Export_uri *string `pulumi:"export_uri"`
	Id         *string `pulumi:"id"`
	// The volume modification date (RFC 3339 format)
	Modification_date *string `pulumi:"modification_date"`
	// The volume name
	Name string `pulumi:"name"`
	// The volume organization ID
	Organization *string `pulumi:"organization"`
	// The volume project ID
	Project string `pulumi:"project"`
	// The server attached to the volume
	Server *ScalewayInstanceV1VolumeServerProperties `pulumi:"server"`
	// The volume disk size (in bytes)
	Size  *float64                       `pulumi:"size"`
	State *ScalewayInstanceV1VolumeState `pulumi:"state"`
	// The volume tags
	Tags        []string                            `pulumi:"tags"`
	Volume_type *ScalewayInstanceV1VolumeVolumeType `pulumi:"volume_type"`
	// The zone in which is the volume
	Zone *string `pulumi:"zone"`
}

// Defaults sets the appropriate defaults for ScalewayInstanceV1Volume
func (val *ScalewayInstanceV1Volume) Defaults() *ScalewayInstanceV1Volume {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.State == nil {
		state_ := ScalewayInstanceV1VolumeState("available")
		tmp.State = &state_
	}
	if tmp.Volume_type == nil {
		volume_type_ := ScalewayInstanceV1VolumeVolumeType("l_ssd")
		tmp.Volume_type = &volume_type_
	}
	return &tmp
}

type ScalewayInstanceV1VolumeOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1VolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalewayInstanceV1Volume)(nil)).Elem()
}

func (o ScalewayInstanceV1VolumeOutput) ToScalewayInstanceV1VolumeOutput() ScalewayInstanceV1VolumeOutput {
	return o
}

func (o ScalewayInstanceV1VolumeOutput) ToScalewayInstanceV1VolumeOutputWithContext(ctx context.Context) ScalewayInstanceV1VolumeOutput {
	return o
}

// The volume creation date (RFC 3339 format)
func (o ScalewayInstanceV1VolumeOutput) Creation_date() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Volume) *string { return v.Creation_date }).(pulumi.StringPtrOutput)
}

// Show the volume NBD export URI
func (o ScalewayInstanceV1VolumeOutput) Export_uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Volume) *string { return v.Export_uri }).(pulumi.StringPtrOutput)
}

func (o ScalewayInstanceV1VolumeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Volume) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The volume modification date (RFC 3339 format)
func (o ScalewayInstanceV1VolumeOutput) Modification_date() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Volume) *string { return v.Modification_date }).(pulumi.StringPtrOutput)
}

// The volume name
func (o ScalewayInstanceV1VolumeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Volume) string { return v.Name }).(pulumi.StringOutput)
}

// The volume organization ID
func (o ScalewayInstanceV1VolumeOutput) Organization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Volume) *string { return v.Organization }).(pulumi.StringPtrOutput)
}

// The volume project ID
func (o ScalewayInstanceV1VolumeOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Volume) string { return v.Project }).(pulumi.StringOutput)
}

// The server attached to the volume
func (o ScalewayInstanceV1VolumeOutput) Server() ScalewayInstanceV1VolumeServerPropertiesPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Volume) *ScalewayInstanceV1VolumeServerProperties { return v.Server }).(ScalewayInstanceV1VolumeServerPropertiesPtrOutput)
}

// The volume disk size (in bytes)
func (o ScalewayInstanceV1VolumeOutput) Size() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Volume) *float64 { return v.Size }).(pulumi.Float64PtrOutput)
}

func (o ScalewayInstanceV1VolumeOutput) State() ScalewayInstanceV1VolumeStatePtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Volume) *ScalewayInstanceV1VolumeState { return v.State }).(ScalewayInstanceV1VolumeStatePtrOutput)
}

// The volume tags
func (o ScalewayInstanceV1VolumeOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Volume) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o ScalewayInstanceV1VolumeOutput) Volume_type() ScalewayInstanceV1VolumeVolumeTypePtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Volume) *ScalewayInstanceV1VolumeVolumeType { return v.Volume_type }).(ScalewayInstanceV1VolumeVolumeTypePtrOutput)
}

// The zone in which is the volume
func (o ScalewayInstanceV1VolumeOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Volume) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

type ScalewayInstanceV1VolumeMapOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1VolumeMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ScalewayInstanceV1Volume)(nil)).Elem()
}

func (o ScalewayInstanceV1VolumeMapOutput) ToScalewayInstanceV1VolumeMapOutput() ScalewayInstanceV1VolumeMapOutput {
	return o
}

func (o ScalewayInstanceV1VolumeMapOutput) ToScalewayInstanceV1VolumeMapOutputWithContext(ctx context.Context) ScalewayInstanceV1VolumeMapOutput {
	return o
}

func (o ScalewayInstanceV1VolumeMapOutput) MapIndex(k pulumi.StringInput) ScalewayInstanceV1VolumeOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ScalewayInstanceV1Volume {
		return vs[0].(map[string]ScalewayInstanceV1Volume)[vs[1].(string)]
	}).(ScalewayInstanceV1VolumeOutput)
}

type ScalewayInstanceV1VolumeServer struct {
	Boot *bool `pulumi:"boot"`
	// (RFC 3339 format)
	Creation_date *string `pulumi:"creation_date"`
	Export_uri    *string `pulumi:"export_uri"`
	Id            *string `pulumi:"id"`
	// (RFC 3339 format)
	Modification_date *string                          `pulumi:"modification_date"`
	Name              *string                          `pulumi:"name"`
	Organization      *string                          `pulumi:"organization"`
	Project           *string                          `pulumi:"project"`
	Server            *ScalewayInstanceV1ServerSummary `pulumi:"server"`
	// (in bytes)
	Size        *float64                                  `pulumi:"size"`
	State       *ScalewayInstanceV1VolumeServerState      `pulumi:"state"`
	Volume_type *ScalewayInstanceV1VolumeServerVolumeType `pulumi:"volume_type"`
	Zone        *string                                   `pulumi:"zone"`
}

// Defaults sets the appropriate defaults for ScalewayInstanceV1VolumeServer
func (val *ScalewayInstanceV1VolumeServer) Defaults() *ScalewayInstanceV1VolumeServer {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.State == nil {
		state_ := ScalewayInstanceV1VolumeServerState("available")
		tmp.State = &state_
	}
	if tmp.Volume_type == nil {
		volume_type_ := ScalewayInstanceV1VolumeServerVolumeType("l_ssd")
		tmp.Volume_type = &volume_type_
	}
	return &tmp
}

type ScalewayInstanceV1VolumeServerOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1VolumeServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalewayInstanceV1VolumeServer)(nil)).Elem()
}

func (o ScalewayInstanceV1VolumeServerOutput) ToScalewayInstanceV1VolumeServerOutput() ScalewayInstanceV1VolumeServerOutput {
	return o
}

func (o ScalewayInstanceV1VolumeServerOutput) ToScalewayInstanceV1VolumeServerOutputWithContext(ctx context.Context) ScalewayInstanceV1VolumeServerOutput {
	return o
}

func (o ScalewayInstanceV1VolumeServerOutput) Boot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1VolumeServer) *bool { return v.Boot }).(pulumi.BoolPtrOutput)
}

// (RFC 3339 format)
func (o ScalewayInstanceV1VolumeServerOutput) Creation_date() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1VolumeServer) *string { return v.Creation_date }).(pulumi.StringPtrOutput)
}

func (o ScalewayInstanceV1VolumeServerOutput) Export_uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1VolumeServer) *string { return v.Export_uri }).(pulumi.StringPtrOutput)
}

func (o ScalewayInstanceV1VolumeServerOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1VolumeServer) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// (RFC 3339 format)
func (o ScalewayInstanceV1VolumeServerOutput) Modification_date() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1VolumeServer) *string { return v.Modification_date }).(pulumi.StringPtrOutput)
}

func (o ScalewayInstanceV1VolumeServerOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1VolumeServer) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o ScalewayInstanceV1VolumeServerOutput) Organization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1VolumeServer) *string { return v.Organization }).(pulumi.StringPtrOutput)
}

func (o ScalewayInstanceV1VolumeServerOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1VolumeServer) *string { return v.Project }).(pulumi.StringPtrOutput)
}

func (o ScalewayInstanceV1VolumeServerOutput) Server() ScalewayInstanceV1ServerSummaryPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1VolumeServer) *ScalewayInstanceV1ServerSummary { return v.Server }).(ScalewayInstanceV1ServerSummaryPtrOutput)
}

// (in bytes)
func (o ScalewayInstanceV1VolumeServerOutput) Size() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1VolumeServer) *float64 { return v.Size }).(pulumi.Float64PtrOutput)
}

func (o ScalewayInstanceV1VolumeServerOutput) State() ScalewayInstanceV1VolumeServerStatePtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1VolumeServer) *ScalewayInstanceV1VolumeServerState { return v.State }).(ScalewayInstanceV1VolumeServerStatePtrOutput)
}

func (o ScalewayInstanceV1VolumeServerOutput) Volume_type() ScalewayInstanceV1VolumeServerVolumeTypePtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1VolumeServer) *ScalewayInstanceV1VolumeServerVolumeType { return v.Volume_type }).(ScalewayInstanceV1VolumeServerVolumeTypePtrOutput)
}

func (o ScalewayInstanceV1VolumeServerOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1VolumeServer) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

type ScalewayInstanceV1VolumeServerMapOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1VolumeServerMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ScalewayInstanceV1VolumeServer)(nil)).Elem()
}

func (o ScalewayInstanceV1VolumeServerMapOutput) ToScalewayInstanceV1VolumeServerMapOutput() ScalewayInstanceV1VolumeServerMapOutput {
	return o
}

func (o ScalewayInstanceV1VolumeServerMapOutput) ToScalewayInstanceV1VolumeServerMapOutputWithContext(ctx context.Context) ScalewayInstanceV1VolumeServerMapOutput {
	return o
}

func (o ScalewayInstanceV1VolumeServerMapOutput) MapIndex(k pulumi.StringInput) ScalewayInstanceV1VolumeServerOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ScalewayInstanceV1VolumeServer {
		return vs[0].(map[string]ScalewayInstanceV1VolumeServer)[vs[1].(string)]
	}).(ScalewayInstanceV1VolumeServerOutput)
}

// The server attached to the volume
type ScalewayInstanceV1VolumeServerProperties struct {
	Id   *string `pulumi:"id"`
	Name *string `pulumi:"name"`
}

// The server attached to the volume
type ScalewayInstanceV1VolumeServerPropertiesOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1VolumeServerPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalewayInstanceV1VolumeServerProperties)(nil)).Elem()
}

func (o ScalewayInstanceV1VolumeServerPropertiesOutput) ToScalewayInstanceV1VolumeServerPropertiesOutput() ScalewayInstanceV1VolumeServerPropertiesOutput {
	return o
}

func (o ScalewayInstanceV1VolumeServerPropertiesOutput) ToScalewayInstanceV1VolumeServerPropertiesOutputWithContext(ctx context.Context) ScalewayInstanceV1VolumeServerPropertiesOutput {
	return o
}

func (o ScalewayInstanceV1VolumeServerPropertiesOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1VolumeServerProperties) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o ScalewayInstanceV1VolumeServerPropertiesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1VolumeServerProperties) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ScalewayInstanceV1VolumeServerPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1VolumeServerPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalewayInstanceV1VolumeServerProperties)(nil)).Elem()
}

func (o ScalewayInstanceV1VolumeServerPropertiesPtrOutput) ToScalewayInstanceV1VolumeServerPropertiesPtrOutput() ScalewayInstanceV1VolumeServerPropertiesPtrOutput {
	return o
}

func (o ScalewayInstanceV1VolumeServerPropertiesPtrOutput) ToScalewayInstanceV1VolumeServerPropertiesPtrOutputWithContext(ctx context.Context) ScalewayInstanceV1VolumeServerPropertiesPtrOutput {
	return o
}

func (o ScalewayInstanceV1VolumeServerPropertiesPtrOutput) Elem() ScalewayInstanceV1VolumeServerPropertiesOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1VolumeServerProperties) ScalewayInstanceV1VolumeServerProperties {
		if v != nil {
			return *v
		}
		var ret ScalewayInstanceV1VolumeServerProperties
		return ret
	}).(ScalewayInstanceV1VolumeServerPropertiesOutput)
}

func (o ScalewayInstanceV1VolumeServerPropertiesPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1VolumeServerProperties) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

func (o ScalewayInstanceV1VolumeServerPropertiesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1VolumeServerProperties) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

type ScalewayInstanceV1VolumeServerTemplate struct {
	// The ID of the snapshot on which this volume will be based
	Base_snapshot *string `pulumi:"base_snapshot"`
	// Force the server to boot on this volume
	Boot *bool `pulumi:"boot"`
	// UUID of the volume
	Id *string `pulumi:"id"`
	// Name of the volume
	Name *string `pulumi:"name"`
	// Organization ID of the volume
	Organization *string `pulumi:"organization"`
	// Project ID of the volume
	Project *string `pulumi:"project"`
	// Disk size of the volume, must be a multiple of 512 (in bytes)
	Size        *float64                                          `pulumi:"size"`
	Volume_type *ScalewayInstanceV1VolumeServerTemplateVolumeType `pulumi:"volume_type"`
}

// Defaults sets the appropriate defaults for ScalewayInstanceV1VolumeServerTemplate
func (val *ScalewayInstanceV1VolumeServerTemplate) Defaults() *ScalewayInstanceV1VolumeServerTemplate {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Boot == nil {
		boot_ := false
		tmp.Boot = &boot_
	}
	if tmp.Volume_type == nil {
		volume_type_ := ScalewayInstanceV1VolumeServerTemplateVolumeType("l_ssd")
		tmp.Volume_type = &volume_type_
	}
	return &tmp
}

// ScalewayInstanceV1VolumeServerTemplateInput is an input type that accepts ScalewayInstanceV1VolumeServerTemplateArgs and ScalewayInstanceV1VolumeServerTemplateOutput values.
// You can construct a concrete instance of `ScalewayInstanceV1VolumeServerTemplateInput` via:
//
//	ScalewayInstanceV1VolumeServerTemplateArgs{...}
type ScalewayInstanceV1VolumeServerTemplateInput interface {
	pulumi.Input

	ToScalewayInstanceV1VolumeServerTemplateOutput() ScalewayInstanceV1VolumeServerTemplateOutput
	ToScalewayInstanceV1VolumeServerTemplateOutputWithContext(context.Context) ScalewayInstanceV1VolumeServerTemplateOutput
}

type ScalewayInstanceV1VolumeServerTemplateArgs struct {
	// The ID of the snapshot on which this volume will be based
	Base_snapshot pulumi.StringPtrInput `pulumi:"base_snapshot"`
	// Force the server to boot on this volume
	Boot pulumi.BoolPtrInput `pulumi:"boot"`
	// UUID of the volume
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the volume
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Organization ID of the volume
	Organization pulumi.StringPtrInput `pulumi:"organization"`
	// Project ID of the volume
	Project pulumi.StringPtrInput `pulumi:"project"`
	// Disk size of the volume, must be a multiple of 512 (in bytes)
	Size        pulumi.Float64PtrInput                                   `pulumi:"size"`
	Volume_type ScalewayInstanceV1VolumeServerTemplateVolumeTypePtrInput `pulumi:"volume_type"`
}

// Defaults sets the appropriate defaults for ScalewayInstanceV1VolumeServerTemplateArgs
func (val *ScalewayInstanceV1VolumeServerTemplateArgs) Defaults() *ScalewayInstanceV1VolumeServerTemplateArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Boot == nil {
		tmp.Boot = pulumi.BoolPtr(false)
	}
	if tmp.Volume_type == nil {
		tmp.Volume_type = ScalewayInstanceV1VolumeServerTemplateVolumeType("l_ssd")
	}
	return &tmp
}
func (ScalewayInstanceV1VolumeServerTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalewayInstanceV1VolumeServerTemplate)(nil)).Elem()
}

func (i ScalewayInstanceV1VolumeServerTemplateArgs) ToScalewayInstanceV1VolumeServerTemplateOutput() ScalewayInstanceV1VolumeServerTemplateOutput {
	return i.ToScalewayInstanceV1VolumeServerTemplateOutputWithContext(context.Background())
}

func (i ScalewayInstanceV1VolumeServerTemplateArgs) ToScalewayInstanceV1VolumeServerTemplateOutputWithContext(ctx context.Context) ScalewayInstanceV1VolumeServerTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalewayInstanceV1VolumeServerTemplateOutput)
}

// ScalewayInstanceV1VolumeServerTemplateMapInput is an input type that accepts ScalewayInstanceV1VolumeServerTemplateMap and ScalewayInstanceV1VolumeServerTemplateMapOutput values.
// You can construct a concrete instance of `ScalewayInstanceV1VolumeServerTemplateMapInput` via:
//
//	ScalewayInstanceV1VolumeServerTemplateMap{ "key": ScalewayInstanceV1VolumeServerTemplateArgs{...} }
type ScalewayInstanceV1VolumeServerTemplateMapInput interface {
	pulumi.Input

	ToScalewayInstanceV1VolumeServerTemplateMapOutput() ScalewayInstanceV1VolumeServerTemplateMapOutput
	ToScalewayInstanceV1VolumeServerTemplateMapOutputWithContext(context.Context) ScalewayInstanceV1VolumeServerTemplateMapOutput
}

type ScalewayInstanceV1VolumeServerTemplateMap map[string]ScalewayInstanceV1VolumeServerTemplateInput

func (ScalewayInstanceV1VolumeServerTemplateMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ScalewayInstanceV1VolumeServerTemplate)(nil)).Elem()
}

func (i ScalewayInstanceV1VolumeServerTemplateMap) ToScalewayInstanceV1VolumeServerTemplateMapOutput() ScalewayInstanceV1VolumeServerTemplateMapOutput {
	return i.ToScalewayInstanceV1VolumeServerTemplateMapOutputWithContext(context.Background())
}

func (i ScalewayInstanceV1VolumeServerTemplateMap) ToScalewayInstanceV1VolumeServerTemplateMapOutputWithContext(ctx context.Context) ScalewayInstanceV1VolumeServerTemplateMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalewayInstanceV1VolumeServerTemplateMapOutput)
}

type ScalewayInstanceV1VolumeServerTemplateOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1VolumeServerTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalewayInstanceV1VolumeServerTemplate)(nil)).Elem()
}

func (o ScalewayInstanceV1VolumeServerTemplateOutput) ToScalewayInstanceV1VolumeServerTemplateOutput() ScalewayInstanceV1VolumeServerTemplateOutput {
	return o
}

func (o ScalewayInstanceV1VolumeServerTemplateOutput) ToScalewayInstanceV1VolumeServerTemplateOutputWithContext(ctx context.Context) ScalewayInstanceV1VolumeServerTemplateOutput {
	return o
}

// The ID of the snapshot on which this volume will be based
func (o ScalewayInstanceV1VolumeServerTemplateOutput) Base_snapshot() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1VolumeServerTemplate) *string { return v.Base_snapshot }).(pulumi.StringPtrOutput)
}

// Force the server to boot on this volume
func (o ScalewayInstanceV1VolumeServerTemplateOutput) Boot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1VolumeServerTemplate) *bool { return v.Boot }).(pulumi.BoolPtrOutput)
}

// UUID of the volume
func (o ScalewayInstanceV1VolumeServerTemplateOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1VolumeServerTemplate) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the volume
func (o ScalewayInstanceV1VolumeServerTemplateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1VolumeServerTemplate) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Organization ID of the volume
func (o ScalewayInstanceV1VolumeServerTemplateOutput) Organization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1VolumeServerTemplate) *string { return v.Organization }).(pulumi.StringPtrOutput)
}

// Project ID of the volume
func (o ScalewayInstanceV1VolumeServerTemplateOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1VolumeServerTemplate) *string { return v.Project }).(pulumi.StringPtrOutput)
}

// Disk size of the volume, must be a multiple of 512 (in bytes)
func (o ScalewayInstanceV1VolumeServerTemplateOutput) Size() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1VolumeServerTemplate) *float64 { return v.Size }).(pulumi.Float64PtrOutput)
}

func (o ScalewayInstanceV1VolumeServerTemplateOutput) Volume_type() ScalewayInstanceV1VolumeServerTemplateVolumeTypePtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1VolumeServerTemplate) *ScalewayInstanceV1VolumeServerTemplateVolumeType {
		return v.Volume_type
	}).(ScalewayInstanceV1VolumeServerTemplateVolumeTypePtrOutput)
}

type ScalewayInstanceV1VolumeServerTemplateMapOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1VolumeServerTemplateMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ScalewayInstanceV1VolumeServerTemplate)(nil)).Elem()
}

func (o ScalewayInstanceV1VolumeServerTemplateMapOutput) ToScalewayInstanceV1VolumeServerTemplateMapOutput() ScalewayInstanceV1VolumeServerTemplateMapOutput {
	return o
}

func (o ScalewayInstanceV1VolumeServerTemplateMapOutput) ToScalewayInstanceV1VolumeServerTemplateMapOutputWithContext(ctx context.Context) ScalewayInstanceV1VolumeServerTemplateMapOutput {
	return o
}

func (o ScalewayInstanceV1VolumeServerTemplateMapOutput) MapIndex(k pulumi.StringInput) ScalewayInstanceV1VolumeServerTemplateOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ScalewayInstanceV1VolumeServerTemplate {
		return vs[0].(map[string]ScalewayInstanceV1VolumeServerTemplate)[vs[1].(string)]
	}).(ScalewayInstanceV1VolumeServerTemplateOutput)
}

type ScalewayInstanceV1VolumeSummary struct {
	Id   *string `pulumi:"id"`
	Name *string `pulumi:"name"`
	// (in bytes)
	Size        *float64                                   `pulumi:"size"`
	Volume_type *ScalewayInstanceV1VolumeSummaryVolumeType `pulumi:"volume_type"`
}

// Defaults sets the appropriate defaults for ScalewayInstanceV1VolumeSummary
func (val *ScalewayInstanceV1VolumeSummary) Defaults() *ScalewayInstanceV1VolumeSummary {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Volume_type == nil {
		volume_type_ := ScalewayInstanceV1VolumeSummaryVolumeType("l_ssd")
		tmp.Volume_type = &volume_type_
	}
	return &tmp
}

type ScalewayInstanceV1VolumeSummaryOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1VolumeSummaryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalewayInstanceV1VolumeSummary)(nil)).Elem()
}

func (o ScalewayInstanceV1VolumeSummaryOutput) ToScalewayInstanceV1VolumeSummaryOutput() ScalewayInstanceV1VolumeSummaryOutput {
	return o
}

func (o ScalewayInstanceV1VolumeSummaryOutput) ToScalewayInstanceV1VolumeSummaryOutputWithContext(ctx context.Context) ScalewayInstanceV1VolumeSummaryOutput {
	return o
}

func (o ScalewayInstanceV1VolumeSummaryOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1VolumeSummary) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o ScalewayInstanceV1VolumeSummaryOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1VolumeSummary) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// (in bytes)
func (o ScalewayInstanceV1VolumeSummaryOutput) Size() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1VolumeSummary) *float64 { return v.Size }).(pulumi.Float64PtrOutput)
}

func (o ScalewayInstanceV1VolumeSummaryOutput) Volume_type() ScalewayInstanceV1VolumeSummaryVolumeTypePtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1VolumeSummary) *ScalewayInstanceV1VolumeSummaryVolumeType {
		return v.Volume_type
	}).(ScalewayInstanceV1VolumeSummaryVolumeTypePtrOutput)
}

type ScalewayInstanceV1VolumeSummaryPtrOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1VolumeSummaryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalewayInstanceV1VolumeSummary)(nil)).Elem()
}

func (o ScalewayInstanceV1VolumeSummaryPtrOutput) ToScalewayInstanceV1VolumeSummaryPtrOutput() ScalewayInstanceV1VolumeSummaryPtrOutput {
	return o
}

func (o ScalewayInstanceV1VolumeSummaryPtrOutput) ToScalewayInstanceV1VolumeSummaryPtrOutputWithContext(ctx context.Context) ScalewayInstanceV1VolumeSummaryPtrOutput {
	return o
}

func (o ScalewayInstanceV1VolumeSummaryPtrOutput) Elem() ScalewayInstanceV1VolumeSummaryOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1VolumeSummary) ScalewayInstanceV1VolumeSummary {
		if v != nil {
			return *v
		}
		var ret ScalewayInstanceV1VolumeSummary
		return ret
	}).(ScalewayInstanceV1VolumeSummaryOutput)
}

func (o ScalewayInstanceV1VolumeSummaryPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1VolumeSummary) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

func (o ScalewayInstanceV1VolumeSummaryPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1VolumeSummary) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// (in bytes)
func (o ScalewayInstanceV1VolumeSummaryPtrOutput) Size() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1VolumeSummary) *float64 {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.Float64PtrOutput)
}

func (o ScalewayInstanceV1VolumeSummaryPtrOutput) Volume_type() ScalewayInstanceV1VolumeSummaryVolumeTypePtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1VolumeSummary) *ScalewayInstanceV1VolumeSummaryVolumeType {
		if v == nil {
			return nil
		}
		return v.Volume_type
	}).(ScalewayInstanceV1VolumeSummaryVolumeTypePtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ScalewayInstanceV1VolumeServerTemplateInput)(nil)).Elem(), ScalewayInstanceV1VolumeServerTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalewayInstanceV1VolumeServerTemplateMapInput)(nil)).Elem(), ScalewayInstanceV1VolumeServerTemplateMap{})
	pulumi.RegisterOutputType(ScalewayInstanceV1BootscriptOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1BootscriptPtrOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1GetPlacementGroupServersResponseOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1GetServerResponseOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1ImageOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1ImagePtrOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1ListServersResponseOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1ListServersTypesResponseOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1PlacementGroupOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1PlacementGroupPtrOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1PlacementGroupServerOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1PlacementGroupServerArrayOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1PrivateNICOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1PrivateNICArrayOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1ServerOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1ServerPtrOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1ServerArrayOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1ServerIpv6PropertiesOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1ServerIpv6PropertiesPtrOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1ServerLocationPropertiesOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1ServerLocationPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1ServerMaintenanceOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1ServerMaintenanceArrayOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1ServerPublicIpPropertiesOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1ServerPublicIpPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1ServerSecurityGroupPropertiesOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1ServerSecurityGroupPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1ServerSummaryOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1ServerSummaryPtrOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1ServerTypeOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1ServerTypeMapOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1ServerTypeCapabilitiesPropertiesOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1ServerTypeCapabilitiesPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1ServerTypeNetworkInterfaceOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1ServerTypeNetworkInterfaceArrayOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1ServerTypeNetworkPropertiesOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1ServerTypeNetworkPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1ServerTypePerVolumeConstraintPropertiesOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1ServerTypePerVolumeConstraintPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1ServerTypePerVolumeConstraintPropertiesLSsdPropertiesOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1ServerTypePerVolumeConstraintPropertiesLSsdPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1ServerTypeVolumesConstraintPropertiesOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1ServerTypeVolumesConstraintPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1VolumeOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1VolumeMapOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1VolumeServerOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1VolumeServerMapOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1VolumeServerPropertiesOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1VolumeServerPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1VolumeServerTemplateOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1VolumeServerTemplateMapOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1VolumeSummaryOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1VolumeSummaryPtrOutput{})
}
