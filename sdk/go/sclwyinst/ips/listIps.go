// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ips

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-scaleway-instances/sdk/go/sclwyinst/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func ListIps(ctx *pulumi.Context, args *ListIpsArgs, opts ...pulumi.InvokeOption) (*ListIpsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv ListIpsResult
	err := ctx.Invoke("scaleway-instances:ips:listIps", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListIpsArgs struct {
	// The zone you want to target
	Zone string `pulumi:"zone"`
}

type ListIpsResult struct {
	// List of ips
	Ips []ScalewayInstanceV1Ip `pulumi:"ips"`
}

func ListIpsOutput(ctx *pulumi.Context, args ListIpsOutputArgs, opts ...pulumi.InvokeOption) ListIpsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ListIpsResultOutput, error) {
			args := v.(ListIpsArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv ListIpsResult
			secret, err := ctx.InvokePackageRaw("scaleway-instances:ips:listIps", args, &rv, "", opts...)
			if err != nil {
				return ListIpsResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(ListIpsResultOutput)
			if secret {
				return pulumi.ToSecret(output).(ListIpsResultOutput), nil
			}
			return output, nil
		}).(ListIpsResultOutput)
}

type ListIpsOutputArgs struct {
	// The zone you want to target
	Zone pulumi.StringInput `pulumi:"zone"`
}

func (ListIpsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListIpsArgs)(nil)).Elem()
}

type ListIpsResultOutput struct{ *pulumi.OutputState }

func (ListIpsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListIpsResult)(nil)).Elem()
}

func (o ListIpsResultOutput) ToListIpsResultOutput() ListIpsResultOutput {
	return o
}

func (o ListIpsResultOutput) ToListIpsResultOutputWithContext(ctx context.Context) ListIpsResultOutput {
	return o
}

// List of ips
func (o ListIpsResultOutput) Ips() ScalewayInstanceV1IpArrayOutput {
	return o.ApplyT(func(v ListIpsResult) []ScalewayInstanceV1Ip { return v.Ips }).(ScalewayInstanceV1IpArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(ListIpsResultOutput{})
}
