// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package snapshots

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-scaleway-instances/sdk/go/sclwyinst/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func ListSnapshots(ctx *pulumi.Context, args *ListSnapshotsArgs, opts ...pulumi.InvokeOption) (*ListSnapshotsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv ListSnapshotsResult
	err := ctx.Invoke("scaleway-instances:snapshots:listSnapshots", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListSnapshotsArgs struct {
	// The zone you want to target
	Zone string `pulumi:"zone"`
}

type ListSnapshotsResult struct {
	// List of snapshots
	Snapshots []ScalewayInstanceV1Snapshot `pulumi:"snapshots"`
}

func ListSnapshotsOutput(ctx *pulumi.Context, args ListSnapshotsOutputArgs, opts ...pulumi.InvokeOption) ListSnapshotsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ListSnapshotsResultOutput, error) {
			args := v.(ListSnapshotsArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv ListSnapshotsResult
			secret, err := ctx.InvokePackageRaw("scaleway-instances:snapshots:listSnapshots", args, &rv, "", opts...)
			if err != nil {
				return ListSnapshotsResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(ListSnapshotsResultOutput)
			if secret {
				return pulumi.ToSecret(output).(ListSnapshotsResultOutput), nil
			}
			return output, nil
		}).(ListSnapshotsResultOutput)
}

type ListSnapshotsOutputArgs struct {
	// The zone you want to target
	Zone pulumi.StringInput `pulumi:"zone"`
}

func (ListSnapshotsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListSnapshotsArgs)(nil)).Elem()
}

type ListSnapshotsResultOutput struct{ *pulumi.OutputState }

func (ListSnapshotsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListSnapshotsResult)(nil)).Elem()
}

func (o ListSnapshotsResultOutput) ToListSnapshotsResultOutput() ListSnapshotsResultOutput {
	return o
}

func (o ListSnapshotsResultOutput) ToListSnapshotsResultOutputWithContext(ctx context.Context) ListSnapshotsResultOutput {
	return o
}

// List of snapshots
func (o ListSnapshotsResultOutput) Snapshots() ScalewayInstanceV1SnapshotArrayOutput {
	return o.ApplyT(func(v ListSnapshotsResult) []ScalewayInstanceV1Snapshot { return v.Snapshots }).(ScalewayInstanceV1SnapshotArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(ListSnapshotsResultOutput{})
}
