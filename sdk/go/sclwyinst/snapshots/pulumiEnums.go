// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package snapshots

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ScalewayInstanceV1SnapshotState string

const (
	ScalewayInstanceV1SnapshotStateAvailable    = ScalewayInstanceV1SnapshotState("available")
	ScalewayInstanceV1SnapshotStateSnapshotting = ScalewayInstanceV1SnapshotState("snapshotting")
	ScalewayInstanceV1SnapshotStateError        = ScalewayInstanceV1SnapshotState("error")
	ScalewayInstanceV1SnapshotStateInvalidData  = ScalewayInstanceV1SnapshotState("invalid_data")
	ScalewayInstanceV1SnapshotStateImporting    = ScalewayInstanceV1SnapshotState("importing")
	ScalewayInstanceV1SnapshotStateExporting    = ScalewayInstanceV1SnapshotState("exporting")
)

type ScalewayInstanceV1SnapshotStateOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1SnapshotStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalewayInstanceV1SnapshotState)(nil)).Elem()
}

func (o ScalewayInstanceV1SnapshotStateOutput) ToScalewayInstanceV1SnapshotStateOutput() ScalewayInstanceV1SnapshotStateOutput {
	return o
}

func (o ScalewayInstanceV1SnapshotStateOutput) ToScalewayInstanceV1SnapshotStateOutputWithContext(ctx context.Context) ScalewayInstanceV1SnapshotStateOutput {
	return o
}

func (o ScalewayInstanceV1SnapshotStateOutput) ToScalewayInstanceV1SnapshotStatePtrOutput() ScalewayInstanceV1SnapshotStatePtrOutput {
	return o.ToScalewayInstanceV1SnapshotStatePtrOutputWithContext(context.Background())
}

func (o ScalewayInstanceV1SnapshotStateOutput) ToScalewayInstanceV1SnapshotStatePtrOutputWithContext(ctx context.Context) ScalewayInstanceV1SnapshotStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScalewayInstanceV1SnapshotState) *ScalewayInstanceV1SnapshotState {
		return &v
	}).(ScalewayInstanceV1SnapshotStatePtrOutput)
}

func (o ScalewayInstanceV1SnapshotStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ScalewayInstanceV1SnapshotStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ScalewayInstanceV1SnapshotState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ScalewayInstanceV1SnapshotStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ScalewayInstanceV1SnapshotStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ScalewayInstanceV1SnapshotState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ScalewayInstanceV1SnapshotStatePtrOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1SnapshotStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalewayInstanceV1SnapshotState)(nil)).Elem()
}

func (o ScalewayInstanceV1SnapshotStatePtrOutput) ToScalewayInstanceV1SnapshotStatePtrOutput() ScalewayInstanceV1SnapshotStatePtrOutput {
	return o
}

func (o ScalewayInstanceV1SnapshotStatePtrOutput) ToScalewayInstanceV1SnapshotStatePtrOutputWithContext(ctx context.Context) ScalewayInstanceV1SnapshotStatePtrOutput {
	return o
}

func (o ScalewayInstanceV1SnapshotStatePtrOutput) Elem() ScalewayInstanceV1SnapshotStateOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1SnapshotState) ScalewayInstanceV1SnapshotState {
		if v != nil {
			return *v
		}
		var ret ScalewayInstanceV1SnapshotState
		return ret
	}).(ScalewayInstanceV1SnapshotStateOutput)
}

func (o ScalewayInstanceV1SnapshotStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ScalewayInstanceV1SnapshotStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ScalewayInstanceV1SnapshotState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ScalewayInstanceV1SnapshotVolumeType string

const (
	ScalewayInstanceV1SnapshotVolumeTypeLSsd    = ScalewayInstanceV1SnapshotVolumeType("l_ssd")
	ScalewayInstanceV1SnapshotVolumeTypeBSsd    = ScalewayInstanceV1SnapshotVolumeType("b_ssd")
	ScalewayInstanceV1SnapshotVolumeTypeUnified = ScalewayInstanceV1SnapshotVolumeType("unified")
)

type ScalewayInstanceV1SnapshotVolumeTypeOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1SnapshotVolumeTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalewayInstanceV1SnapshotVolumeType)(nil)).Elem()
}

func (o ScalewayInstanceV1SnapshotVolumeTypeOutput) ToScalewayInstanceV1SnapshotVolumeTypeOutput() ScalewayInstanceV1SnapshotVolumeTypeOutput {
	return o
}

func (o ScalewayInstanceV1SnapshotVolumeTypeOutput) ToScalewayInstanceV1SnapshotVolumeTypeOutputWithContext(ctx context.Context) ScalewayInstanceV1SnapshotVolumeTypeOutput {
	return o
}

func (o ScalewayInstanceV1SnapshotVolumeTypeOutput) ToScalewayInstanceV1SnapshotVolumeTypePtrOutput() ScalewayInstanceV1SnapshotVolumeTypePtrOutput {
	return o.ToScalewayInstanceV1SnapshotVolumeTypePtrOutputWithContext(context.Background())
}

func (o ScalewayInstanceV1SnapshotVolumeTypeOutput) ToScalewayInstanceV1SnapshotVolumeTypePtrOutputWithContext(ctx context.Context) ScalewayInstanceV1SnapshotVolumeTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScalewayInstanceV1SnapshotVolumeType) *ScalewayInstanceV1SnapshotVolumeType {
		return &v
	}).(ScalewayInstanceV1SnapshotVolumeTypePtrOutput)
}

func (o ScalewayInstanceV1SnapshotVolumeTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ScalewayInstanceV1SnapshotVolumeTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ScalewayInstanceV1SnapshotVolumeType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ScalewayInstanceV1SnapshotVolumeTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ScalewayInstanceV1SnapshotVolumeTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ScalewayInstanceV1SnapshotVolumeType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ScalewayInstanceV1SnapshotVolumeTypePtrOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1SnapshotVolumeTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalewayInstanceV1SnapshotVolumeType)(nil)).Elem()
}

func (o ScalewayInstanceV1SnapshotVolumeTypePtrOutput) ToScalewayInstanceV1SnapshotVolumeTypePtrOutput() ScalewayInstanceV1SnapshotVolumeTypePtrOutput {
	return o
}

func (o ScalewayInstanceV1SnapshotVolumeTypePtrOutput) ToScalewayInstanceV1SnapshotVolumeTypePtrOutputWithContext(ctx context.Context) ScalewayInstanceV1SnapshotVolumeTypePtrOutput {
	return o
}

func (o ScalewayInstanceV1SnapshotVolumeTypePtrOutput) Elem() ScalewayInstanceV1SnapshotVolumeTypeOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1SnapshotVolumeType) ScalewayInstanceV1SnapshotVolumeType {
		if v != nil {
			return *v
		}
		var ret ScalewayInstanceV1SnapshotVolumeType
		return ret
	}).(ScalewayInstanceV1SnapshotVolumeTypeOutput)
}

func (o ScalewayInstanceV1SnapshotVolumeTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ScalewayInstanceV1SnapshotVolumeTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ScalewayInstanceV1SnapshotVolumeType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// The task status
type SnapshotScalewayInstanceV1TaskStatus string

const (
	SnapshotScalewayInstanceV1TaskStatusPending = SnapshotScalewayInstanceV1TaskStatus("pending")
	SnapshotScalewayInstanceV1TaskStatusStarted = SnapshotScalewayInstanceV1TaskStatus("started")
	SnapshotScalewayInstanceV1TaskStatusSuccess = SnapshotScalewayInstanceV1TaskStatus("success")
	SnapshotScalewayInstanceV1TaskStatusFailure = SnapshotScalewayInstanceV1TaskStatus("failure")
	SnapshotScalewayInstanceV1TaskStatusRetry   = SnapshotScalewayInstanceV1TaskStatus("retry")
)

type SnapshotScalewayInstanceV1TaskStatusOutput struct{ *pulumi.OutputState }

func (SnapshotScalewayInstanceV1TaskStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapshotScalewayInstanceV1TaskStatus)(nil)).Elem()
}

func (o SnapshotScalewayInstanceV1TaskStatusOutput) ToSnapshotScalewayInstanceV1TaskStatusOutput() SnapshotScalewayInstanceV1TaskStatusOutput {
	return o
}

func (o SnapshotScalewayInstanceV1TaskStatusOutput) ToSnapshotScalewayInstanceV1TaskStatusOutputWithContext(ctx context.Context) SnapshotScalewayInstanceV1TaskStatusOutput {
	return o
}

func (o SnapshotScalewayInstanceV1TaskStatusOutput) ToSnapshotScalewayInstanceV1TaskStatusPtrOutput() SnapshotScalewayInstanceV1TaskStatusPtrOutput {
	return o.ToSnapshotScalewayInstanceV1TaskStatusPtrOutputWithContext(context.Background())
}

func (o SnapshotScalewayInstanceV1TaskStatusOutput) ToSnapshotScalewayInstanceV1TaskStatusPtrOutputWithContext(ctx context.Context) SnapshotScalewayInstanceV1TaskStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SnapshotScalewayInstanceV1TaskStatus) *SnapshotScalewayInstanceV1TaskStatus {
		return &v
	}).(SnapshotScalewayInstanceV1TaskStatusPtrOutput)
}

func (o SnapshotScalewayInstanceV1TaskStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SnapshotScalewayInstanceV1TaskStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SnapshotScalewayInstanceV1TaskStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SnapshotScalewayInstanceV1TaskStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SnapshotScalewayInstanceV1TaskStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SnapshotScalewayInstanceV1TaskStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SnapshotScalewayInstanceV1TaskStatusPtrOutput struct{ *pulumi.OutputState }

func (SnapshotScalewayInstanceV1TaskStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SnapshotScalewayInstanceV1TaskStatus)(nil)).Elem()
}

func (o SnapshotScalewayInstanceV1TaskStatusPtrOutput) ToSnapshotScalewayInstanceV1TaskStatusPtrOutput() SnapshotScalewayInstanceV1TaskStatusPtrOutput {
	return o
}

func (o SnapshotScalewayInstanceV1TaskStatusPtrOutput) ToSnapshotScalewayInstanceV1TaskStatusPtrOutputWithContext(ctx context.Context) SnapshotScalewayInstanceV1TaskStatusPtrOutput {
	return o
}

func (o SnapshotScalewayInstanceV1TaskStatusPtrOutput) Elem() SnapshotScalewayInstanceV1TaskStatusOutput {
	return o.ApplyT(func(v *SnapshotScalewayInstanceV1TaskStatus) SnapshotScalewayInstanceV1TaskStatus {
		if v != nil {
			return *v
		}
		var ret SnapshotScalewayInstanceV1TaskStatus
		return ret
	}).(SnapshotScalewayInstanceV1TaskStatusOutput)
}

func (o SnapshotScalewayInstanceV1TaskStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SnapshotScalewayInstanceV1TaskStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SnapshotScalewayInstanceV1TaskStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SnapshotStateEnum string

const (
	SnapshotStateEnumAvailable    = SnapshotStateEnum("available")
	SnapshotStateEnumSnapshotting = SnapshotStateEnum("snapshotting")
	SnapshotStateEnumError        = SnapshotStateEnum("error")
	SnapshotStateEnumInvalidData  = SnapshotStateEnum("invalid_data")
	SnapshotStateEnumImporting    = SnapshotStateEnum("importing")
	SnapshotStateEnumExporting    = SnapshotStateEnum("exporting")
)

func (SnapshotStateEnum) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapshotStateEnum)(nil)).Elem()
}

func (e SnapshotStateEnum) ToSnapshotStateEnumOutput() SnapshotStateEnumOutput {
	return pulumi.ToOutput(e).(SnapshotStateEnumOutput)
}

func (e SnapshotStateEnum) ToSnapshotStateEnumOutputWithContext(ctx context.Context) SnapshotStateEnumOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SnapshotStateEnumOutput)
}

func (e SnapshotStateEnum) ToSnapshotStateEnumPtrOutput() SnapshotStateEnumPtrOutput {
	return e.ToSnapshotStateEnumPtrOutputWithContext(context.Background())
}

func (e SnapshotStateEnum) ToSnapshotStateEnumPtrOutputWithContext(ctx context.Context) SnapshotStateEnumPtrOutput {
	return SnapshotStateEnum(e).ToSnapshotStateEnumOutputWithContext(ctx).ToSnapshotStateEnumPtrOutputWithContext(ctx)
}

func (e SnapshotStateEnum) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SnapshotStateEnum) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SnapshotStateEnum) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SnapshotStateEnum) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SnapshotStateEnumOutput struct{ *pulumi.OutputState }

func (SnapshotStateEnumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapshotStateEnum)(nil)).Elem()
}

func (o SnapshotStateEnumOutput) ToSnapshotStateEnumOutput() SnapshotStateEnumOutput {
	return o
}

func (o SnapshotStateEnumOutput) ToSnapshotStateEnumOutputWithContext(ctx context.Context) SnapshotStateEnumOutput {
	return o
}

func (o SnapshotStateEnumOutput) ToSnapshotStateEnumPtrOutput() SnapshotStateEnumPtrOutput {
	return o.ToSnapshotStateEnumPtrOutputWithContext(context.Background())
}

func (o SnapshotStateEnumOutput) ToSnapshotStateEnumPtrOutputWithContext(ctx context.Context) SnapshotStateEnumPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SnapshotStateEnum) *SnapshotStateEnum {
		return &v
	}).(SnapshotStateEnumPtrOutput)
}

func (o SnapshotStateEnumOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SnapshotStateEnumOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SnapshotStateEnum) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SnapshotStateEnumOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SnapshotStateEnumOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SnapshotStateEnum) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SnapshotStateEnumPtrOutput struct{ *pulumi.OutputState }

func (SnapshotStateEnumPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SnapshotStateEnum)(nil)).Elem()
}

func (o SnapshotStateEnumPtrOutput) ToSnapshotStateEnumPtrOutput() SnapshotStateEnumPtrOutput {
	return o
}

func (o SnapshotStateEnumPtrOutput) ToSnapshotStateEnumPtrOutputWithContext(ctx context.Context) SnapshotStateEnumPtrOutput {
	return o
}

func (o SnapshotStateEnumPtrOutput) Elem() SnapshotStateEnumOutput {
	return o.ApplyT(func(v *SnapshotStateEnum) SnapshotStateEnum {
		if v != nil {
			return *v
		}
		var ret SnapshotStateEnum
		return ret
	}).(SnapshotStateEnumOutput)
}

func (o SnapshotStateEnumPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SnapshotStateEnumPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SnapshotStateEnum) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SnapshotStateEnumInput is an input type that accepts values of the SnapshotStateEnum enum
// A concrete instance of `SnapshotStateEnumInput` can be one of the following:
//
//	SnapshotStateEnumAvailable
//	SnapshotStateEnumSnapshotting
//	SnapshotStateEnumError
//	SnapshotStateEnumInvalidData
//	SnapshotStateEnumImporting
//	SnapshotStateEnumExporting
type SnapshotStateEnumInput interface {
	pulumi.Input

	ToSnapshotStateEnumOutput() SnapshotStateEnumOutput
	ToSnapshotStateEnumOutputWithContext(context.Context) SnapshotStateEnumOutput
}

var snapshotStateEnumPtrType = reflect.TypeOf((**SnapshotStateEnum)(nil)).Elem()

type SnapshotStateEnumPtrInput interface {
	pulumi.Input

	ToSnapshotStateEnumPtrOutput() SnapshotStateEnumPtrOutput
	ToSnapshotStateEnumPtrOutputWithContext(context.Context) SnapshotStateEnumPtrOutput
}

type snapshotStateEnumPtr string

func SnapshotStateEnumPtr(v string) SnapshotStateEnumPtrInput {
	return (*snapshotStateEnumPtr)(&v)
}

func (*snapshotStateEnumPtr) ElementType() reflect.Type {
	return snapshotStateEnumPtrType
}

func (in *snapshotStateEnumPtr) ToSnapshotStateEnumPtrOutput() SnapshotStateEnumPtrOutput {
	return pulumi.ToOutput(in).(SnapshotStateEnumPtrOutput)
}

func (in *snapshotStateEnumPtr) ToSnapshotStateEnumPtrOutputWithContext(ctx context.Context) SnapshotStateEnumPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SnapshotStateEnumPtrOutput)
}

type SnapshotVolumeType string

const (
	SnapshotVolumeTypeLSsd    = SnapshotVolumeType("l_ssd")
	SnapshotVolumeTypeBSsd    = SnapshotVolumeType("b_ssd")
	SnapshotVolumeTypeUnified = SnapshotVolumeType("unified")
)

func (SnapshotVolumeType) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapshotVolumeType)(nil)).Elem()
}

func (e SnapshotVolumeType) ToSnapshotVolumeTypeOutput() SnapshotVolumeTypeOutput {
	return pulumi.ToOutput(e).(SnapshotVolumeTypeOutput)
}

func (e SnapshotVolumeType) ToSnapshotVolumeTypeOutputWithContext(ctx context.Context) SnapshotVolumeTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SnapshotVolumeTypeOutput)
}

func (e SnapshotVolumeType) ToSnapshotVolumeTypePtrOutput() SnapshotVolumeTypePtrOutput {
	return e.ToSnapshotVolumeTypePtrOutputWithContext(context.Background())
}

func (e SnapshotVolumeType) ToSnapshotVolumeTypePtrOutputWithContext(ctx context.Context) SnapshotVolumeTypePtrOutput {
	return SnapshotVolumeType(e).ToSnapshotVolumeTypeOutputWithContext(ctx).ToSnapshotVolumeTypePtrOutputWithContext(ctx)
}

func (e SnapshotVolumeType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SnapshotVolumeType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SnapshotVolumeType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SnapshotVolumeType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SnapshotVolumeTypeOutput struct{ *pulumi.OutputState }

func (SnapshotVolumeTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapshotVolumeType)(nil)).Elem()
}

func (o SnapshotVolumeTypeOutput) ToSnapshotVolumeTypeOutput() SnapshotVolumeTypeOutput {
	return o
}

func (o SnapshotVolumeTypeOutput) ToSnapshotVolumeTypeOutputWithContext(ctx context.Context) SnapshotVolumeTypeOutput {
	return o
}

func (o SnapshotVolumeTypeOutput) ToSnapshotVolumeTypePtrOutput() SnapshotVolumeTypePtrOutput {
	return o.ToSnapshotVolumeTypePtrOutputWithContext(context.Background())
}

func (o SnapshotVolumeTypeOutput) ToSnapshotVolumeTypePtrOutputWithContext(ctx context.Context) SnapshotVolumeTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SnapshotVolumeType) *SnapshotVolumeType {
		return &v
	}).(SnapshotVolumeTypePtrOutput)
}

func (o SnapshotVolumeTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SnapshotVolumeTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SnapshotVolumeType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SnapshotVolumeTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SnapshotVolumeTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SnapshotVolumeType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SnapshotVolumeTypePtrOutput struct{ *pulumi.OutputState }

func (SnapshotVolumeTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SnapshotVolumeType)(nil)).Elem()
}

func (o SnapshotVolumeTypePtrOutput) ToSnapshotVolumeTypePtrOutput() SnapshotVolumeTypePtrOutput {
	return o
}

func (o SnapshotVolumeTypePtrOutput) ToSnapshotVolumeTypePtrOutputWithContext(ctx context.Context) SnapshotVolumeTypePtrOutput {
	return o
}

func (o SnapshotVolumeTypePtrOutput) Elem() SnapshotVolumeTypeOutput {
	return o.ApplyT(func(v *SnapshotVolumeType) SnapshotVolumeType {
		if v != nil {
			return *v
		}
		var ret SnapshotVolumeType
		return ret
	}).(SnapshotVolumeTypeOutput)
}

func (o SnapshotVolumeTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SnapshotVolumeTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SnapshotVolumeType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SnapshotVolumeTypeInput is an input type that accepts values of the SnapshotVolumeType enum
// A concrete instance of `SnapshotVolumeTypeInput` can be one of the following:
//
//	SnapshotVolumeTypeLSsd
//	SnapshotVolumeTypeBSsd
//	SnapshotVolumeTypeUnified
type SnapshotVolumeTypeInput interface {
	pulumi.Input

	ToSnapshotVolumeTypeOutput() SnapshotVolumeTypeOutput
	ToSnapshotVolumeTypeOutputWithContext(context.Context) SnapshotVolumeTypeOutput
}

var snapshotVolumeTypePtrType = reflect.TypeOf((**SnapshotVolumeType)(nil)).Elem()

type SnapshotVolumeTypePtrInput interface {
	pulumi.Input

	ToSnapshotVolumeTypePtrOutput() SnapshotVolumeTypePtrOutput
	ToSnapshotVolumeTypePtrOutputWithContext(context.Context) SnapshotVolumeTypePtrOutput
}

type snapshotVolumeTypePtr string

func SnapshotVolumeTypePtr(v string) SnapshotVolumeTypePtrInput {
	return (*snapshotVolumeTypePtr)(&v)
}

func (*snapshotVolumeTypePtr) ElementType() reflect.Type {
	return snapshotVolumeTypePtrType
}

func (in *snapshotVolumeTypePtr) ToSnapshotVolumeTypePtrOutput() SnapshotVolumeTypePtrOutput {
	return pulumi.ToOutput(in).(SnapshotVolumeTypePtrOutput)
}

func (in *snapshotVolumeTypePtr) ToSnapshotVolumeTypePtrOutputWithContext(ctx context.Context) SnapshotVolumeTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SnapshotVolumeTypePtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SnapshotStateEnumInput)(nil)).Elem(), SnapshotStateEnum("available"))
	pulumi.RegisterInputType(reflect.TypeOf((*SnapshotStateEnumPtrInput)(nil)).Elem(), SnapshotStateEnum("available"))
	pulumi.RegisterInputType(reflect.TypeOf((*SnapshotVolumeTypeInput)(nil)).Elem(), SnapshotVolumeType("l_ssd"))
	pulumi.RegisterInputType(reflect.TypeOf((*SnapshotVolumeTypePtrInput)(nil)).Elem(), SnapshotVolumeType("l_ssd"))
	pulumi.RegisterOutputType(ScalewayInstanceV1SnapshotStateOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1SnapshotStatePtrOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1SnapshotVolumeTypeOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1SnapshotVolumeTypePtrOutput{})
	pulumi.RegisterOutputType(SnapshotScalewayInstanceV1TaskStatusOutput{})
	pulumi.RegisterOutputType(SnapshotScalewayInstanceV1TaskStatusPtrOutput{})
	pulumi.RegisterOutputType(SnapshotStateEnumOutput{})
	pulumi.RegisterOutputType(SnapshotStateEnumPtrOutput{})
	pulumi.RegisterOutputType(SnapshotVolumeTypeOutput{})
	pulumi.RegisterOutputType(SnapshotVolumeTypePtrOutput{})
}
