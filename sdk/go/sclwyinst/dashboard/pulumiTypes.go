// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dashboard

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-scaleway-instances/sdk/go/sclwyinst/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ScalewayInstanceV1Dashboard struct {
	ImagesCount          *float64           `pulumi:"imagesCount"`
	IpsCount             *float64           `pulumi:"ipsCount"`
	IpsUnused            *float64           `pulumi:"ipsUnused"`
	PlacementGroupsCount *float64           `pulumi:"placementGroupsCount"`
	PrivateNicsCount     *float64           `pulumi:"privateNicsCount"`
	RunningServersCount  *float64           `pulumi:"runningServersCount"`
	SecurityGroupsCount  *float64           `pulumi:"securityGroupsCount"`
	ServersByTypes       map[string]float64 `pulumi:"serversByTypes"`
	ServersCount         *float64           `pulumi:"serversCount"`
	SnapshotsCount       *float64           `pulumi:"snapshotsCount"`
	VolumesBSsdCount     *float64           `pulumi:"volumesBSsdCount"`
	VolumesBSsdTotalSize *float64           `pulumi:"volumesBSsdTotalSize"`
	VolumesCount         *float64           `pulumi:"volumesCount"`
	VolumesLSsdCount     *float64           `pulumi:"volumesLSsdCount"`
	VolumesLSsdTotalSize *float64           `pulumi:"volumesLSsdTotalSize"`
}

type ScalewayInstanceV1DashboardOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1DashboardOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalewayInstanceV1Dashboard)(nil)).Elem()
}

func (o ScalewayInstanceV1DashboardOutput) ToScalewayInstanceV1DashboardOutput() ScalewayInstanceV1DashboardOutput {
	return o
}

func (o ScalewayInstanceV1DashboardOutput) ToScalewayInstanceV1DashboardOutputWithContext(ctx context.Context) ScalewayInstanceV1DashboardOutput {
	return o
}

func (o ScalewayInstanceV1DashboardOutput) ImagesCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Dashboard) *float64 { return v.ImagesCount }).(pulumi.Float64PtrOutput)
}

func (o ScalewayInstanceV1DashboardOutput) IpsCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Dashboard) *float64 { return v.IpsCount }).(pulumi.Float64PtrOutput)
}

func (o ScalewayInstanceV1DashboardOutput) IpsUnused() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Dashboard) *float64 { return v.IpsUnused }).(pulumi.Float64PtrOutput)
}

func (o ScalewayInstanceV1DashboardOutput) PlacementGroupsCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Dashboard) *float64 { return v.PlacementGroupsCount }).(pulumi.Float64PtrOutput)
}

func (o ScalewayInstanceV1DashboardOutput) PrivateNicsCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Dashboard) *float64 { return v.PrivateNicsCount }).(pulumi.Float64PtrOutput)
}

func (o ScalewayInstanceV1DashboardOutput) RunningServersCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Dashboard) *float64 { return v.RunningServersCount }).(pulumi.Float64PtrOutput)
}

func (o ScalewayInstanceV1DashboardOutput) SecurityGroupsCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Dashboard) *float64 { return v.SecurityGroupsCount }).(pulumi.Float64PtrOutput)
}

func (o ScalewayInstanceV1DashboardOutput) ServersByTypes() pulumi.Float64MapOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Dashboard) map[string]float64 { return v.ServersByTypes }).(pulumi.Float64MapOutput)
}

func (o ScalewayInstanceV1DashboardOutput) ServersCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Dashboard) *float64 { return v.ServersCount }).(pulumi.Float64PtrOutput)
}

func (o ScalewayInstanceV1DashboardOutput) SnapshotsCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Dashboard) *float64 { return v.SnapshotsCount }).(pulumi.Float64PtrOutput)
}

func (o ScalewayInstanceV1DashboardOutput) VolumesBSsdCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Dashboard) *float64 { return v.VolumesBSsdCount }).(pulumi.Float64PtrOutput)
}

func (o ScalewayInstanceV1DashboardOutput) VolumesBSsdTotalSize() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Dashboard) *float64 { return v.VolumesBSsdTotalSize }).(pulumi.Float64PtrOutput)
}

func (o ScalewayInstanceV1DashboardOutput) VolumesCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Dashboard) *float64 { return v.VolumesCount }).(pulumi.Float64PtrOutput)
}

func (o ScalewayInstanceV1DashboardOutput) VolumesLSsdCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Dashboard) *float64 { return v.VolumesLSsdCount }).(pulumi.Float64PtrOutput)
}

func (o ScalewayInstanceV1DashboardOutput) VolumesLSsdTotalSize() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Dashboard) *float64 { return v.VolumesLSsdTotalSize }).(pulumi.Float64PtrOutput)
}

type ScalewayInstanceV1DashboardPtrOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1DashboardPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalewayInstanceV1Dashboard)(nil)).Elem()
}

func (o ScalewayInstanceV1DashboardPtrOutput) ToScalewayInstanceV1DashboardPtrOutput() ScalewayInstanceV1DashboardPtrOutput {
	return o
}

func (o ScalewayInstanceV1DashboardPtrOutput) ToScalewayInstanceV1DashboardPtrOutputWithContext(ctx context.Context) ScalewayInstanceV1DashboardPtrOutput {
	return o
}

func (o ScalewayInstanceV1DashboardPtrOutput) Elem() ScalewayInstanceV1DashboardOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Dashboard) ScalewayInstanceV1Dashboard {
		if v != nil {
			return *v
		}
		var ret ScalewayInstanceV1Dashboard
		return ret
	}).(ScalewayInstanceV1DashboardOutput)
}

func (o ScalewayInstanceV1DashboardPtrOutput) ImagesCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Dashboard) *float64 {
		if v == nil {
			return nil
		}
		return v.ImagesCount
	}).(pulumi.Float64PtrOutput)
}

func (o ScalewayInstanceV1DashboardPtrOutput) IpsCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Dashboard) *float64 {
		if v == nil {
			return nil
		}
		return v.IpsCount
	}).(pulumi.Float64PtrOutput)
}

func (o ScalewayInstanceV1DashboardPtrOutput) IpsUnused() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Dashboard) *float64 {
		if v == nil {
			return nil
		}
		return v.IpsUnused
	}).(pulumi.Float64PtrOutput)
}

func (o ScalewayInstanceV1DashboardPtrOutput) PlacementGroupsCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Dashboard) *float64 {
		if v == nil {
			return nil
		}
		return v.PlacementGroupsCount
	}).(pulumi.Float64PtrOutput)
}

func (o ScalewayInstanceV1DashboardPtrOutput) PrivateNicsCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Dashboard) *float64 {
		if v == nil {
			return nil
		}
		return v.PrivateNicsCount
	}).(pulumi.Float64PtrOutput)
}

func (o ScalewayInstanceV1DashboardPtrOutput) RunningServersCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Dashboard) *float64 {
		if v == nil {
			return nil
		}
		return v.RunningServersCount
	}).(pulumi.Float64PtrOutput)
}

func (o ScalewayInstanceV1DashboardPtrOutput) SecurityGroupsCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Dashboard) *float64 {
		if v == nil {
			return nil
		}
		return v.SecurityGroupsCount
	}).(pulumi.Float64PtrOutput)
}

func (o ScalewayInstanceV1DashboardPtrOutput) ServersByTypes() pulumi.Float64MapOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Dashboard) map[string]float64 {
		if v == nil {
			return nil
		}
		return v.ServersByTypes
	}).(pulumi.Float64MapOutput)
}

func (o ScalewayInstanceV1DashboardPtrOutput) ServersCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Dashboard) *float64 {
		if v == nil {
			return nil
		}
		return v.ServersCount
	}).(pulumi.Float64PtrOutput)
}

func (o ScalewayInstanceV1DashboardPtrOutput) SnapshotsCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Dashboard) *float64 {
		if v == nil {
			return nil
		}
		return v.SnapshotsCount
	}).(pulumi.Float64PtrOutput)
}

func (o ScalewayInstanceV1DashboardPtrOutput) VolumesBSsdCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Dashboard) *float64 {
		if v == nil {
			return nil
		}
		return v.VolumesBSsdCount
	}).(pulumi.Float64PtrOutput)
}

func (o ScalewayInstanceV1DashboardPtrOutput) VolumesBSsdTotalSize() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Dashboard) *float64 {
		if v == nil {
			return nil
		}
		return v.VolumesBSsdTotalSize
	}).(pulumi.Float64PtrOutput)
}

func (o ScalewayInstanceV1DashboardPtrOutput) VolumesCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Dashboard) *float64 {
		if v == nil {
			return nil
		}
		return v.VolumesCount
	}).(pulumi.Float64PtrOutput)
}

func (o ScalewayInstanceV1DashboardPtrOutput) VolumesLSsdCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Dashboard) *float64 {
		if v == nil {
			return nil
		}
		return v.VolumesLSsdCount
	}).(pulumi.Float64PtrOutput)
}

func (o ScalewayInstanceV1DashboardPtrOutput) VolumesLSsdTotalSize() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Dashboard) *float64 {
		if v == nil {
			return nil
		}
		return v.VolumesLSsdTotalSize
	}).(pulumi.Float64PtrOutput)
}

type ScalewayInstanceV1GetDashboardResponse struct {
	Dashboard *ScalewayInstanceV1Dashboard `pulumi:"dashboard"`
}

type ScalewayInstanceV1GetDashboardResponseOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1GetDashboardResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalewayInstanceV1GetDashboardResponse)(nil)).Elem()
}

func (o ScalewayInstanceV1GetDashboardResponseOutput) ToScalewayInstanceV1GetDashboardResponseOutput() ScalewayInstanceV1GetDashboardResponseOutput {
	return o
}

func (o ScalewayInstanceV1GetDashboardResponseOutput) ToScalewayInstanceV1GetDashboardResponseOutputWithContext(ctx context.Context) ScalewayInstanceV1GetDashboardResponseOutput {
	return o
}

func (o ScalewayInstanceV1GetDashboardResponseOutput) Dashboard() ScalewayInstanceV1DashboardPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1GetDashboardResponse) *ScalewayInstanceV1Dashboard { return v.Dashboard }).(ScalewayInstanceV1DashboardPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ScalewayInstanceV1DashboardOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1DashboardPtrOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1GetDashboardResponseOutput{})
}
