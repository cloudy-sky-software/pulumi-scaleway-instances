// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package images

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-scaleway-instances/sdk/go/sclwyinst/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupImage(ctx *pulumi.Context, args *LookupImageArgs, opts ...pulumi.InvokeOption) (*LookupImageResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupImageResult
	err := ctx.Invoke("scaleway-instances:images:getImage", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type LookupImageArgs struct {
	// UUID of the image you want to get
	Id string `pulumi:"id"`
	// The zone you want to target
	Zone string `pulumi:"zone"`
}

type LookupImageResult struct {
	Image *ScalewayInstanceV1Image `pulumi:"image"`
}

// Defaults sets the appropriate defaults for LookupImageResult
func (val *LookupImageResult) Defaults() *LookupImageResult {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Image = tmp.Image.Defaults()

	return &tmp
}
func LookupImageOutput(ctx *pulumi.Context, args LookupImageOutputArgs, opts ...pulumi.InvokeOption) LookupImageResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupImageResultOutput, error) {
			args := v.(LookupImageArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("scaleway-instances:images:getImage", args, LookupImageResultOutput{}, options).(LookupImageResultOutput), nil
		}).(LookupImageResultOutput)
}

type LookupImageOutputArgs struct {
	// UUID of the image you want to get
	Id pulumi.StringInput `pulumi:"id"`
	// The zone you want to target
	Zone pulumi.StringInput `pulumi:"zone"`
}

func (LookupImageOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupImageArgs)(nil)).Elem()
}

type LookupImageResultOutput struct{ *pulumi.OutputState }

func (LookupImageResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupImageResult)(nil)).Elem()
}

func (o LookupImageResultOutput) ToLookupImageResultOutput() LookupImageResultOutput {
	return o
}

func (o LookupImageResultOutput) ToLookupImageResultOutputWithContext(ctx context.Context) LookupImageResultOutput {
	return o
}

func (o LookupImageResultOutput) Image() ScalewayInstanceV1ImagePtrOutput {
	return o.ApplyT(func(v LookupImageResult) *ScalewayInstanceV1Image { return v.Image }).(ScalewayInstanceV1ImagePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupImageResultOutput{})
}
