// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package images

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-scaleway-instances/sdk/go/sclwyinst/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type ScalewayInstanceV1Bootscript struct {
	// The bootscript arch
	Arch *ScalewayInstanceV1BootscriptArch `pulumi:"arch"`
	// The bootscript arguments
	Bootcmdargs *string `pulumi:"bootcmdargs"`
	// Dispmay if the bootscript is the default bootscript if no other boot option is configured
	Default *bool `pulumi:"default"`
	// Provide information regarding a Device Tree Binary (dtb) for use with C1 servers
	Dtb *string `pulumi:"dtb"`
	// The bootscript ID
	Id *string `pulumi:"id"`
	// The initrd (initial ramdisk) configuration
	Initrd *string `pulumi:"initrd"`
	// The server kernel version
	Kernel *string `pulumi:"kernel"`
	// The bootscript organization ID
	Organization *string `pulumi:"organization"`
	// The bootscript project ID
	Project *string `pulumi:"project"`
	// Provide information if the bootscript is public
	Public *bool `pulumi:"public"`
	// The bootscript title
	Title *string `pulumi:"title"`
	// The zone in which is the bootscript
	Zone *string `pulumi:"zone"`
}

// Defaults sets the appropriate defaults for ScalewayInstanceV1Bootscript
func (val *ScalewayInstanceV1Bootscript) Defaults() *ScalewayInstanceV1Bootscript {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Arch == nil {
		arch_ := ScalewayInstanceV1BootscriptArch("x86_64")
		tmp.Arch = &arch_
	}
	return &tmp
}

// ScalewayInstanceV1BootscriptInput is an input type that accepts ScalewayInstanceV1BootscriptArgs and ScalewayInstanceV1BootscriptOutput values.
// You can construct a concrete instance of `ScalewayInstanceV1BootscriptInput` via:
//
//	ScalewayInstanceV1BootscriptArgs{...}
type ScalewayInstanceV1BootscriptInput interface {
	pulumi.Input

	ToScalewayInstanceV1BootscriptOutput() ScalewayInstanceV1BootscriptOutput
	ToScalewayInstanceV1BootscriptOutputWithContext(context.Context) ScalewayInstanceV1BootscriptOutput
}

type ScalewayInstanceV1BootscriptArgs struct {
	// The bootscript arch
	Arch ScalewayInstanceV1BootscriptArchPtrInput `pulumi:"arch"`
	// The bootscript arguments
	Bootcmdargs pulumi.StringPtrInput `pulumi:"bootcmdargs"`
	// Dispmay if the bootscript is the default bootscript if no other boot option is configured
	Default pulumi.BoolPtrInput `pulumi:"default"`
	// Provide information regarding a Device Tree Binary (dtb) for use with C1 servers
	Dtb pulumi.StringPtrInput `pulumi:"dtb"`
	// The bootscript ID
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The initrd (initial ramdisk) configuration
	Initrd pulumi.StringPtrInput `pulumi:"initrd"`
	// The server kernel version
	Kernel pulumi.StringPtrInput `pulumi:"kernel"`
	// The bootscript organization ID
	Organization pulumi.StringPtrInput `pulumi:"organization"`
	// The bootscript project ID
	Project pulumi.StringPtrInput `pulumi:"project"`
	// Provide information if the bootscript is public
	Public pulumi.BoolPtrInput `pulumi:"public"`
	// The bootscript title
	Title pulumi.StringPtrInput `pulumi:"title"`
	// The zone in which is the bootscript
	Zone pulumi.StringPtrInput `pulumi:"zone"`
}

// Defaults sets the appropriate defaults for ScalewayInstanceV1BootscriptArgs
func (val *ScalewayInstanceV1BootscriptArgs) Defaults() *ScalewayInstanceV1BootscriptArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Arch == nil {
		tmp.Arch = ScalewayInstanceV1BootscriptArch("x86_64")
	}
	return &tmp
}
func (ScalewayInstanceV1BootscriptArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalewayInstanceV1Bootscript)(nil)).Elem()
}

func (i ScalewayInstanceV1BootscriptArgs) ToScalewayInstanceV1BootscriptOutput() ScalewayInstanceV1BootscriptOutput {
	return i.ToScalewayInstanceV1BootscriptOutputWithContext(context.Background())
}

func (i ScalewayInstanceV1BootscriptArgs) ToScalewayInstanceV1BootscriptOutputWithContext(ctx context.Context) ScalewayInstanceV1BootscriptOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalewayInstanceV1BootscriptOutput)
}

func (i ScalewayInstanceV1BootscriptArgs) ToOutput(ctx context.Context) pulumix.Output[ScalewayInstanceV1Bootscript] {
	return pulumix.Output[ScalewayInstanceV1Bootscript]{
		OutputState: i.ToScalewayInstanceV1BootscriptOutputWithContext(ctx).OutputState,
	}
}

func (i ScalewayInstanceV1BootscriptArgs) ToScalewayInstanceV1BootscriptPtrOutput() ScalewayInstanceV1BootscriptPtrOutput {
	return i.ToScalewayInstanceV1BootscriptPtrOutputWithContext(context.Background())
}

func (i ScalewayInstanceV1BootscriptArgs) ToScalewayInstanceV1BootscriptPtrOutputWithContext(ctx context.Context) ScalewayInstanceV1BootscriptPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalewayInstanceV1BootscriptOutput).ToScalewayInstanceV1BootscriptPtrOutputWithContext(ctx)
}

// ScalewayInstanceV1BootscriptPtrInput is an input type that accepts ScalewayInstanceV1BootscriptArgs, ScalewayInstanceV1BootscriptPtr and ScalewayInstanceV1BootscriptPtrOutput values.
// You can construct a concrete instance of `ScalewayInstanceV1BootscriptPtrInput` via:
//
//	        ScalewayInstanceV1BootscriptArgs{...}
//
//	or:
//
//	        nil
type ScalewayInstanceV1BootscriptPtrInput interface {
	pulumi.Input

	ToScalewayInstanceV1BootscriptPtrOutput() ScalewayInstanceV1BootscriptPtrOutput
	ToScalewayInstanceV1BootscriptPtrOutputWithContext(context.Context) ScalewayInstanceV1BootscriptPtrOutput
}

type scalewayInstanceV1BootscriptPtrType ScalewayInstanceV1BootscriptArgs

func ScalewayInstanceV1BootscriptPtr(v *ScalewayInstanceV1BootscriptArgs) ScalewayInstanceV1BootscriptPtrInput {
	return (*scalewayInstanceV1BootscriptPtrType)(v)
}

func (*scalewayInstanceV1BootscriptPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalewayInstanceV1Bootscript)(nil)).Elem()
}

func (i *scalewayInstanceV1BootscriptPtrType) ToScalewayInstanceV1BootscriptPtrOutput() ScalewayInstanceV1BootscriptPtrOutput {
	return i.ToScalewayInstanceV1BootscriptPtrOutputWithContext(context.Background())
}

func (i *scalewayInstanceV1BootscriptPtrType) ToScalewayInstanceV1BootscriptPtrOutputWithContext(ctx context.Context) ScalewayInstanceV1BootscriptPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalewayInstanceV1BootscriptPtrOutput)
}

func (i *scalewayInstanceV1BootscriptPtrType) ToOutput(ctx context.Context) pulumix.Output[*ScalewayInstanceV1Bootscript] {
	return pulumix.Output[*ScalewayInstanceV1Bootscript]{
		OutputState: i.ToScalewayInstanceV1BootscriptPtrOutputWithContext(ctx).OutputState,
	}
}

type ScalewayInstanceV1BootscriptOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1BootscriptOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalewayInstanceV1Bootscript)(nil)).Elem()
}

func (o ScalewayInstanceV1BootscriptOutput) ToScalewayInstanceV1BootscriptOutput() ScalewayInstanceV1BootscriptOutput {
	return o
}

func (o ScalewayInstanceV1BootscriptOutput) ToScalewayInstanceV1BootscriptOutputWithContext(ctx context.Context) ScalewayInstanceV1BootscriptOutput {
	return o
}

func (o ScalewayInstanceV1BootscriptOutput) ToScalewayInstanceV1BootscriptPtrOutput() ScalewayInstanceV1BootscriptPtrOutput {
	return o.ToScalewayInstanceV1BootscriptPtrOutputWithContext(context.Background())
}

func (o ScalewayInstanceV1BootscriptOutput) ToScalewayInstanceV1BootscriptPtrOutputWithContext(ctx context.Context) ScalewayInstanceV1BootscriptPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScalewayInstanceV1Bootscript) *ScalewayInstanceV1Bootscript {
		return &v
	}).(ScalewayInstanceV1BootscriptPtrOutput)
}

func (o ScalewayInstanceV1BootscriptOutput) ToOutput(ctx context.Context) pulumix.Output[ScalewayInstanceV1Bootscript] {
	return pulumix.Output[ScalewayInstanceV1Bootscript]{
		OutputState: o.OutputState,
	}
}

// The bootscript arch
func (o ScalewayInstanceV1BootscriptOutput) Arch() ScalewayInstanceV1BootscriptArchPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Bootscript) *ScalewayInstanceV1BootscriptArch { return v.Arch }).(ScalewayInstanceV1BootscriptArchPtrOutput)
}

// The bootscript arguments
func (o ScalewayInstanceV1BootscriptOutput) Bootcmdargs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Bootscript) *string { return v.Bootcmdargs }).(pulumi.StringPtrOutput)
}

// Dispmay if the bootscript is the default bootscript if no other boot option is configured
func (o ScalewayInstanceV1BootscriptOutput) Default() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Bootscript) *bool { return v.Default }).(pulumi.BoolPtrOutput)
}

// Provide information regarding a Device Tree Binary (dtb) for use with C1 servers
func (o ScalewayInstanceV1BootscriptOutput) Dtb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Bootscript) *string { return v.Dtb }).(pulumi.StringPtrOutput)
}

// The bootscript ID
func (o ScalewayInstanceV1BootscriptOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Bootscript) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The initrd (initial ramdisk) configuration
func (o ScalewayInstanceV1BootscriptOutput) Initrd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Bootscript) *string { return v.Initrd }).(pulumi.StringPtrOutput)
}

// The server kernel version
func (o ScalewayInstanceV1BootscriptOutput) Kernel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Bootscript) *string { return v.Kernel }).(pulumi.StringPtrOutput)
}

// The bootscript organization ID
func (o ScalewayInstanceV1BootscriptOutput) Organization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Bootscript) *string { return v.Organization }).(pulumi.StringPtrOutput)
}

// The bootscript project ID
func (o ScalewayInstanceV1BootscriptOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Bootscript) *string { return v.Project }).(pulumi.StringPtrOutput)
}

// Provide information if the bootscript is public
func (o ScalewayInstanceV1BootscriptOutput) Public() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Bootscript) *bool { return v.Public }).(pulumi.BoolPtrOutput)
}

// The bootscript title
func (o ScalewayInstanceV1BootscriptOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Bootscript) *string { return v.Title }).(pulumi.StringPtrOutput)
}

// The zone in which is the bootscript
func (o ScalewayInstanceV1BootscriptOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Bootscript) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

type ScalewayInstanceV1BootscriptPtrOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1BootscriptPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalewayInstanceV1Bootscript)(nil)).Elem()
}

func (o ScalewayInstanceV1BootscriptPtrOutput) ToScalewayInstanceV1BootscriptPtrOutput() ScalewayInstanceV1BootscriptPtrOutput {
	return o
}

func (o ScalewayInstanceV1BootscriptPtrOutput) ToScalewayInstanceV1BootscriptPtrOutputWithContext(ctx context.Context) ScalewayInstanceV1BootscriptPtrOutput {
	return o
}

func (o ScalewayInstanceV1BootscriptPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ScalewayInstanceV1Bootscript] {
	return pulumix.Output[*ScalewayInstanceV1Bootscript]{
		OutputState: o.OutputState,
	}
}

func (o ScalewayInstanceV1BootscriptPtrOutput) Elem() ScalewayInstanceV1BootscriptOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Bootscript) ScalewayInstanceV1Bootscript {
		if v != nil {
			return *v
		}
		var ret ScalewayInstanceV1Bootscript
		return ret
	}).(ScalewayInstanceV1BootscriptOutput)
}

// The bootscript arch
func (o ScalewayInstanceV1BootscriptPtrOutput) Arch() ScalewayInstanceV1BootscriptArchPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Bootscript) *ScalewayInstanceV1BootscriptArch {
		if v == nil {
			return nil
		}
		return v.Arch
	}).(ScalewayInstanceV1BootscriptArchPtrOutput)
}

// The bootscript arguments
func (o ScalewayInstanceV1BootscriptPtrOutput) Bootcmdargs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Bootscript) *string {
		if v == nil {
			return nil
		}
		return v.Bootcmdargs
	}).(pulumi.StringPtrOutput)
}

// Dispmay if the bootscript is the default bootscript if no other boot option is configured
func (o ScalewayInstanceV1BootscriptPtrOutput) Default() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Bootscript) *bool {
		if v == nil {
			return nil
		}
		return v.Default
	}).(pulumi.BoolPtrOutput)
}

// Provide information regarding a Device Tree Binary (dtb) for use with C1 servers
func (o ScalewayInstanceV1BootscriptPtrOutput) Dtb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Bootscript) *string {
		if v == nil {
			return nil
		}
		return v.Dtb
	}).(pulumi.StringPtrOutput)
}

// The bootscript ID
func (o ScalewayInstanceV1BootscriptPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Bootscript) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The initrd (initial ramdisk) configuration
func (o ScalewayInstanceV1BootscriptPtrOutput) Initrd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Bootscript) *string {
		if v == nil {
			return nil
		}
		return v.Initrd
	}).(pulumi.StringPtrOutput)
}

// The server kernel version
func (o ScalewayInstanceV1BootscriptPtrOutput) Kernel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Bootscript) *string {
		if v == nil {
			return nil
		}
		return v.Kernel
	}).(pulumi.StringPtrOutput)
}

// The bootscript organization ID
func (o ScalewayInstanceV1BootscriptPtrOutput) Organization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Bootscript) *string {
		if v == nil {
			return nil
		}
		return v.Organization
	}).(pulumi.StringPtrOutput)
}

// The bootscript project ID
func (o ScalewayInstanceV1BootscriptPtrOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Bootscript) *string {
		if v == nil {
			return nil
		}
		return v.Project
	}).(pulumi.StringPtrOutput)
}

// Provide information if the bootscript is public
func (o ScalewayInstanceV1BootscriptPtrOutput) Public() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Bootscript) *bool {
		if v == nil {
			return nil
		}
		return v.Public
	}).(pulumi.BoolPtrOutput)
}

// The bootscript title
func (o ScalewayInstanceV1BootscriptPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Bootscript) *string {
		if v == nil {
			return nil
		}
		return v.Title
	}).(pulumi.StringPtrOutput)
}

// The zone in which is the bootscript
func (o ScalewayInstanceV1BootscriptPtrOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Bootscript) *string {
		if v == nil {
			return nil
		}
		return v.Zone
	}).(pulumi.StringPtrOutput)
}

type ScalewayInstanceV1GetImageResponse struct {
	Image *ScalewayInstanceV1Image `pulumi:"image"`
}

// Defaults sets the appropriate defaults for ScalewayInstanceV1GetImageResponse
func (val *ScalewayInstanceV1GetImageResponse) Defaults() *ScalewayInstanceV1GetImageResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Image = tmp.Image.Defaults()

	return &tmp
}

type ScalewayInstanceV1GetImageResponseOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1GetImageResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalewayInstanceV1GetImageResponse)(nil)).Elem()
}

func (o ScalewayInstanceV1GetImageResponseOutput) ToScalewayInstanceV1GetImageResponseOutput() ScalewayInstanceV1GetImageResponseOutput {
	return o
}

func (o ScalewayInstanceV1GetImageResponseOutput) ToScalewayInstanceV1GetImageResponseOutputWithContext(ctx context.Context) ScalewayInstanceV1GetImageResponseOutput {
	return o
}

func (o ScalewayInstanceV1GetImageResponseOutput) ToOutput(ctx context.Context) pulumix.Output[ScalewayInstanceV1GetImageResponse] {
	return pulumix.Output[ScalewayInstanceV1GetImageResponse]{
		OutputState: o.OutputState,
	}
}

func (o ScalewayInstanceV1GetImageResponseOutput) Image() ScalewayInstanceV1ImagePtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1GetImageResponse) *ScalewayInstanceV1Image { return v.Image }).(ScalewayInstanceV1ImagePtrOutput)
}

type ScalewayInstanceV1Image struct {
	Arch *ScalewayInstanceV1ImageArch `pulumi:"arch"`
	// (RFC 3339 format)
	Creation_date      *string                             `pulumi:"creation_date"`
	Default_bootscript *ScalewayInstanceV1Bootscript       `pulumi:"default_bootscript"`
	Extra_volumes      map[string]ScalewayInstanceV1Volume `pulumi:"extra_volumes"`
	From_server        *string                             `pulumi:"from_server"`
	Id                 *string                             `pulumi:"id"`
	// (RFC 3339 format)
	Modification_date *string                         `pulumi:"modification_date"`
	Name              string                          `pulumi:"name"`
	Organization      *string                         `pulumi:"organization"`
	Project           string                          `pulumi:"project"`
	Public            *bool                           `pulumi:"public"`
	Root_volume       ScalewayInstanceV1VolumeSummary `pulumi:"root_volume"`
	State             *ScalewayInstanceV1ImageState   `pulumi:"state"`
	Tags              []string                        `pulumi:"tags"`
	Zone              *string                         `pulumi:"zone"`
}

// Defaults sets the appropriate defaults for ScalewayInstanceV1Image
func (val *ScalewayInstanceV1Image) Defaults() *ScalewayInstanceV1Image {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Arch == nil {
		arch_ := ScalewayInstanceV1ImageArch("x86_64")
		tmp.Arch = &arch_
	}
	tmp.Default_bootscript = tmp.Default_bootscript.Defaults()

	tmp.Root_volume = *tmp.Root_volume.Defaults()

	if tmp.State == nil {
		state_ := ScalewayInstanceV1ImageState("available")
		tmp.State = &state_
	}
	return &tmp
}

type ScalewayInstanceV1ImageOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1ImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalewayInstanceV1Image)(nil)).Elem()
}

func (o ScalewayInstanceV1ImageOutput) ToScalewayInstanceV1ImageOutput() ScalewayInstanceV1ImageOutput {
	return o
}

func (o ScalewayInstanceV1ImageOutput) ToScalewayInstanceV1ImageOutputWithContext(ctx context.Context) ScalewayInstanceV1ImageOutput {
	return o
}

func (o ScalewayInstanceV1ImageOutput) ToOutput(ctx context.Context) pulumix.Output[ScalewayInstanceV1Image] {
	return pulumix.Output[ScalewayInstanceV1Image]{
		OutputState: o.OutputState,
	}
}

func (o ScalewayInstanceV1ImageOutput) Arch() ScalewayInstanceV1ImageArchPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Image) *ScalewayInstanceV1ImageArch { return v.Arch }).(ScalewayInstanceV1ImageArchPtrOutput)
}

// (RFC 3339 format)
func (o ScalewayInstanceV1ImageOutput) Creation_date() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Image) *string { return v.Creation_date }).(pulumi.StringPtrOutput)
}

func (o ScalewayInstanceV1ImageOutput) Default_bootscript() ScalewayInstanceV1BootscriptPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Image) *ScalewayInstanceV1Bootscript { return v.Default_bootscript }).(ScalewayInstanceV1BootscriptPtrOutput)
}

func (o ScalewayInstanceV1ImageOutput) Extra_volumes() ScalewayInstanceV1VolumeMapOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Image) map[string]ScalewayInstanceV1Volume { return v.Extra_volumes }).(ScalewayInstanceV1VolumeMapOutput)
}

func (o ScalewayInstanceV1ImageOutput) From_server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Image) *string { return v.From_server }).(pulumi.StringPtrOutput)
}

func (o ScalewayInstanceV1ImageOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Image) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// (RFC 3339 format)
func (o ScalewayInstanceV1ImageOutput) Modification_date() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Image) *string { return v.Modification_date }).(pulumi.StringPtrOutput)
}

func (o ScalewayInstanceV1ImageOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Image) string { return v.Name }).(pulumi.StringOutput)
}

func (o ScalewayInstanceV1ImageOutput) Organization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Image) *string { return v.Organization }).(pulumi.StringPtrOutput)
}

func (o ScalewayInstanceV1ImageOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Image) string { return v.Project }).(pulumi.StringOutput)
}

func (o ScalewayInstanceV1ImageOutput) Public() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Image) *bool { return v.Public }).(pulumi.BoolPtrOutput)
}

func (o ScalewayInstanceV1ImageOutput) Root_volume() ScalewayInstanceV1VolumeSummaryOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Image) ScalewayInstanceV1VolumeSummary { return v.Root_volume }).(ScalewayInstanceV1VolumeSummaryOutput)
}

func (o ScalewayInstanceV1ImageOutput) State() ScalewayInstanceV1ImageStatePtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Image) *ScalewayInstanceV1ImageState { return v.State }).(ScalewayInstanceV1ImageStatePtrOutput)
}

func (o ScalewayInstanceV1ImageOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Image) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o ScalewayInstanceV1ImageOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Image) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

type ScalewayInstanceV1ImagePtrOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1ImagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalewayInstanceV1Image)(nil)).Elem()
}

func (o ScalewayInstanceV1ImagePtrOutput) ToScalewayInstanceV1ImagePtrOutput() ScalewayInstanceV1ImagePtrOutput {
	return o
}

func (o ScalewayInstanceV1ImagePtrOutput) ToScalewayInstanceV1ImagePtrOutputWithContext(ctx context.Context) ScalewayInstanceV1ImagePtrOutput {
	return o
}

func (o ScalewayInstanceV1ImagePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ScalewayInstanceV1Image] {
	return pulumix.Output[*ScalewayInstanceV1Image]{
		OutputState: o.OutputState,
	}
}

func (o ScalewayInstanceV1ImagePtrOutput) Elem() ScalewayInstanceV1ImageOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Image) ScalewayInstanceV1Image {
		if v != nil {
			return *v
		}
		var ret ScalewayInstanceV1Image
		return ret
	}).(ScalewayInstanceV1ImageOutput)
}

func (o ScalewayInstanceV1ImagePtrOutput) Arch() ScalewayInstanceV1ImageArchPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Image) *ScalewayInstanceV1ImageArch {
		if v == nil {
			return nil
		}
		return v.Arch
	}).(ScalewayInstanceV1ImageArchPtrOutput)
}

// (RFC 3339 format)
func (o ScalewayInstanceV1ImagePtrOutput) Creation_date() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Image) *string {
		if v == nil {
			return nil
		}
		return v.Creation_date
	}).(pulumi.StringPtrOutput)
}

func (o ScalewayInstanceV1ImagePtrOutput) Default_bootscript() ScalewayInstanceV1BootscriptPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Image) *ScalewayInstanceV1Bootscript {
		if v == nil {
			return nil
		}
		return v.Default_bootscript
	}).(ScalewayInstanceV1BootscriptPtrOutput)
}

func (o ScalewayInstanceV1ImagePtrOutput) Extra_volumes() ScalewayInstanceV1VolumeMapOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Image) map[string]ScalewayInstanceV1Volume {
		if v == nil {
			return nil
		}
		return v.Extra_volumes
	}).(ScalewayInstanceV1VolumeMapOutput)
}

func (o ScalewayInstanceV1ImagePtrOutput) From_server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Image) *string {
		if v == nil {
			return nil
		}
		return v.From_server
	}).(pulumi.StringPtrOutput)
}

func (o ScalewayInstanceV1ImagePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Image) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// (RFC 3339 format)
func (o ScalewayInstanceV1ImagePtrOutput) Modification_date() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Image) *string {
		if v == nil {
			return nil
		}
		return v.Modification_date
	}).(pulumi.StringPtrOutput)
}

func (o ScalewayInstanceV1ImagePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Image) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

func (o ScalewayInstanceV1ImagePtrOutput) Organization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Image) *string {
		if v == nil {
			return nil
		}
		return v.Organization
	}).(pulumi.StringPtrOutput)
}

func (o ScalewayInstanceV1ImagePtrOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Image) *string {
		if v == nil {
			return nil
		}
		return &v.Project
	}).(pulumi.StringPtrOutput)
}

func (o ScalewayInstanceV1ImagePtrOutput) Public() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Image) *bool {
		if v == nil {
			return nil
		}
		return v.Public
	}).(pulumi.BoolPtrOutput)
}

func (o ScalewayInstanceV1ImagePtrOutput) Root_volume() ScalewayInstanceV1VolumeSummaryPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Image) *ScalewayInstanceV1VolumeSummary {
		if v == nil {
			return nil
		}
		return &v.Root_volume
	}).(ScalewayInstanceV1VolumeSummaryPtrOutput)
}

func (o ScalewayInstanceV1ImagePtrOutput) State() ScalewayInstanceV1ImageStatePtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Image) *ScalewayInstanceV1ImageState {
		if v == nil {
			return nil
		}
		return v.State
	}).(ScalewayInstanceV1ImageStatePtrOutput)
}

func (o ScalewayInstanceV1ImagePtrOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Image) []string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringArrayOutput)
}

func (o ScalewayInstanceV1ImagePtrOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Image) *string {
		if v == nil {
			return nil
		}
		return v.Zone
	}).(pulumi.StringPtrOutput)
}

type ScalewayInstanceV1ImageArrayOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1ImageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScalewayInstanceV1Image)(nil)).Elem()
}

func (o ScalewayInstanceV1ImageArrayOutput) ToScalewayInstanceV1ImageArrayOutput() ScalewayInstanceV1ImageArrayOutput {
	return o
}

func (o ScalewayInstanceV1ImageArrayOutput) ToScalewayInstanceV1ImageArrayOutputWithContext(ctx context.Context) ScalewayInstanceV1ImageArrayOutput {
	return o
}

func (o ScalewayInstanceV1ImageArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ScalewayInstanceV1Image] {
	return pulumix.Output[[]ScalewayInstanceV1Image]{
		OutputState: o.OutputState,
	}
}

func (o ScalewayInstanceV1ImageArrayOutput) Index(i pulumi.IntInput) ScalewayInstanceV1ImageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScalewayInstanceV1Image {
		return vs[0].([]ScalewayInstanceV1Image)[vs[1].(int)]
	}).(ScalewayInstanceV1ImageOutput)
}

type ScalewayInstanceV1ListImagesResponse struct {
	// List of images
	Images []ScalewayInstanceV1Image `pulumi:"images"`
}

type ScalewayInstanceV1ListImagesResponseOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1ListImagesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalewayInstanceV1ListImagesResponse)(nil)).Elem()
}

func (o ScalewayInstanceV1ListImagesResponseOutput) ToScalewayInstanceV1ListImagesResponseOutput() ScalewayInstanceV1ListImagesResponseOutput {
	return o
}

func (o ScalewayInstanceV1ListImagesResponseOutput) ToScalewayInstanceV1ListImagesResponseOutputWithContext(ctx context.Context) ScalewayInstanceV1ListImagesResponseOutput {
	return o
}

func (o ScalewayInstanceV1ListImagesResponseOutput) ToOutput(ctx context.Context) pulumix.Output[ScalewayInstanceV1ListImagesResponse] {
	return pulumix.Output[ScalewayInstanceV1ListImagesResponse]{
		OutputState: o.OutputState,
	}
}

// List of images
func (o ScalewayInstanceV1ListImagesResponseOutput) Images() ScalewayInstanceV1ImageArrayOutput {
	return o.ApplyT(func(v ScalewayInstanceV1ListImagesResponse) []ScalewayInstanceV1Image { return v.Images }).(ScalewayInstanceV1ImageArrayOutput)
}

type ScalewayInstanceV1Volume struct {
	// The volume creation date (RFC 3339 format)
	Creation_date *string `pulumi:"creation_date"`
	// Show the volume NBD export URI
	Export_uri *string `pulumi:"export_uri"`
	Id         *string `pulumi:"id"`
	// The volume modification date (RFC 3339 format)
	Modification_date *string `pulumi:"modification_date"`
	// The volume name
	Name string `pulumi:"name"`
	// The volume organization ID
	Organization *string `pulumi:"organization"`
	// The volume project ID
	Project string `pulumi:"project"`
	// The server attached to the volume
	Server *ScalewayInstanceV1VolumeServerProperties `pulumi:"server"`
	// The volume disk size (in bytes)
	Size  *float64                       `pulumi:"size"`
	State *ScalewayInstanceV1VolumeState `pulumi:"state"`
	// The volume tags
	Tags        []string                            `pulumi:"tags"`
	Volume_type *ScalewayInstanceV1VolumeVolumeType `pulumi:"volume_type"`
	// The zone in which is the volume
	Zone *string `pulumi:"zone"`
}

// Defaults sets the appropriate defaults for ScalewayInstanceV1Volume
func (val *ScalewayInstanceV1Volume) Defaults() *ScalewayInstanceV1Volume {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.State == nil {
		state_ := ScalewayInstanceV1VolumeState("available")
		tmp.State = &state_
	}
	if tmp.Volume_type == nil {
		volume_type_ := ScalewayInstanceV1VolumeVolumeType("l_ssd")
		tmp.Volume_type = &volume_type_
	}
	return &tmp
}

// ScalewayInstanceV1VolumeInput is an input type that accepts ScalewayInstanceV1VolumeArgs and ScalewayInstanceV1VolumeOutput values.
// You can construct a concrete instance of `ScalewayInstanceV1VolumeInput` via:
//
//	ScalewayInstanceV1VolumeArgs{...}
type ScalewayInstanceV1VolumeInput interface {
	pulumi.Input

	ToScalewayInstanceV1VolumeOutput() ScalewayInstanceV1VolumeOutput
	ToScalewayInstanceV1VolumeOutputWithContext(context.Context) ScalewayInstanceV1VolumeOutput
}

type ScalewayInstanceV1VolumeArgs struct {
	// The volume creation date (RFC 3339 format)
	Creation_date pulumi.StringPtrInput `pulumi:"creation_date"`
	// Show the volume NBD export URI
	Export_uri pulumi.StringPtrInput `pulumi:"export_uri"`
	Id         pulumi.StringPtrInput `pulumi:"id"`
	// The volume modification date (RFC 3339 format)
	Modification_date pulumi.StringPtrInput `pulumi:"modification_date"`
	// The volume name
	Name pulumi.StringInput `pulumi:"name"`
	// The volume organization ID
	Organization pulumi.StringPtrInput `pulumi:"organization"`
	// The volume project ID
	Project pulumi.StringInput `pulumi:"project"`
	// The server attached to the volume
	Server ScalewayInstanceV1VolumeServerPropertiesPtrInput `pulumi:"server"`
	// The volume disk size (in bytes)
	Size  pulumi.Float64PtrInput                `pulumi:"size"`
	State ScalewayInstanceV1VolumeStatePtrInput `pulumi:"state"`
	// The volume tags
	Tags        pulumi.StringArrayInput                    `pulumi:"tags"`
	Volume_type ScalewayInstanceV1VolumeVolumeTypePtrInput `pulumi:"volume_type"`
	// The zone in which is the volume
	Zone pulumi.StringPtrInput `pulumi:"zone"`
}

// Defaults sets the appropriate defaults for ScalewayInstanceV1VolumeArgs
func (val *ScalewayInstanceV1VolumeArgs) Defaults() *ScalewayInstanceV1VolumeArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.State == nil {
		tmp.State = ScalewayInstanceV1VolumeState("available")
	}
	if tmp.Volume_type == nil {
		tmp.Volume_type = ScalewayInstanceV1VolumeVolumeType("l_ssd")
	}
	return &tmp
}
func (ScalewayInstanceV1VolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalewayInstanceV1Volume)(nil)).Elem()
}

func (i ScalewayInstanceV1VolumeArgs) ToScalewayInstanceV1VolumeOutput() ScalewayInstanceV1VolumeOutput {
	return i.ToScalewayInstanceV1VolumeOutputWithContext(context.Background())
}

func (i ScalewayInstanceV1VolumeArgs) ToScalewayInstanceV1VolumeOutputWithContext(ctx context.Context) ScalewayInstanceV1VolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalewayInstanceV1VolumeOutput)
}

func (i ScalewayInstanceV1VolumeArgs) ToOutput(ctx context.Context) pulumix.Output[ScalewayInstanceV1Volume] {
	return pulumix.Output[ScalewayInstanceV1Volume]{
		OutputState: i.ToScalewayInstanceV1VolumeOutputWithContext(ctx).OutputState,
	}
}

// ScalewayInstanceV1VolumeMapInput is an input type that accepts ScalewayInstanceV1VolumeMap and ScalewayInstanceV1VolumeMapOutput values.
// You can construct a concrete instance of `ScalewayInstanceV1VolumeMapInput` via:
//
//	ScalewayInstanceV1VolumeMap{ "key": ScalewayInstanceV1VolumeArgs{...} }
type ScalewayInstanceV1VolumeMapInput interface {
	pulumi.Input

	ToScalewayInstanceV1VolumeMapOutput() ScalewayInstanceV1VolumeMapOutput
	ToScalewayInstanceV1VolumeMapOutputWithContext(context.Context) ScalewayInstanceV1VolumeMapOutput
}

type ScalewayInstanceV1VolumeMap map[string]ScalewayInstanceV1VolumeInput

func (ScalewayInstanceV1VolumeMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ScalewayInstanceV1Volume)(nil)).Elem()
}

func (i ScalewayInstanceV1VolumeMap) ToScalewayInstanceV1VolumeMapOutput() ScalewayInstanceV1VolumeMapOutput {
	return i.ToScalewayInstanceV1VolumeMapOutputWithContext(context.Background())
}

func (i ScalewayInstanceV1VolumeMap) ToScalewayInstanceV1VolumeMapOutputWithContext(ctx context.Context) ScalewayInstanceV1VolumeMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalewayInstanceV1VolumeMapOutput)
}

func (i ScalewayInstanceV1VolumeMap) ToOutput(ctx context.Context) pulumix.Output[map[string]ScalewayInstanceV1Volume] {
	return pulumix.Output[map[string]ScalewayInstanceV1Volume]{
		OutputState: i.ToScalewayInstanceV1VolumeMapOutputWithContext(ctx).OutputState,
	}
}

type ScalewayInstanceV1VolumeOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1VolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalewayInstanceV1Volume)(nil)).Elem()
}

func (o ScalewayInstanceV1VolumeOutput) ToScalewayInstanceV1VolumeOutput() ScalewayInstanceV1VolumeOutput {
	return o
}

func (o ScalewayInstanceV1VolumeOutput) ToScalewayInstanceV1VolumeOutputWithContext(ctx context.Context) ScalewayInstanceV1VolumeOutput {
	return o
}

func (o ScalewayInstanceV1VolumeOutput) ToOutput(ctx context.Context) pulumix.Output[ScalewayInstanceV1Volume] {
	return pulumix.Output[ScalewayInstanceV1Volume]{
		OutputState: o.OutputState,
	}
}

// The volume creation date (RFC 3339 format)
func (o ScalewayInstanceV1VolumeOutput) Creation_date() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Volume) *string { return v.Creation_date }).(pulumi.StringPtrOutput)
}

// Show the volume NBD export URI
func (o ScalewayInstanceV1VolumeOutput) Export_uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Volume) *string { return v.Export_uri }).(pulumi.StringPtrOutput)
}

func (o ScalewayInstanceV1VolumeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Volume) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The volume modification date (RFC 3339 format)
func (o ScalewayInstanceV1VolumeOutput) Modification_date() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Volume) *string { return v.Modification_date }).(pulumi.StringPtrOutput)
}

// The volume name
func (o ScalewayInstanceV1VolumeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Volume) string { return v.Name }).(pulumi.StringOutput)
}

// The volume organization ID
func (o ScalewayInstanceV1VolumeOutput) Organization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Volume) *string { return v.Organization }).(pulumi.StringPtrOutput)
}

// The volume project ID
func (o ScalewayInstanceV1VolumeOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Volume) string { return v.Project }).(pulumi.StringOutput)
}

// The server attached to the volume
func (o ScalewayInstanceV1VolumeOutput) Server() ScalewayInstanceV1VolumeServerPropertiesPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Volume) *ScalewayInstanceV1VolumeServerProperties { return v.Server }).(ScalewayInstanceV1VolumeServerPropertiesPtrOutput)
}

// The volume disk size (in bytes)
func (o ScalewayInstanceV1VolumeOutput) Size() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Volume) *float64 { return v.Size }).(pulumi.Float64PtrOutput)
}

func (o ScalewayInstanceV1VolumeOutput) State() ScalewayInstanceV1VolumeStatePtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Volume) *ScalewayInstanceV1VolumeState { return v.State }).(ScalewayInstanceV1VolumeStatePtrOutput)
}

// The volume tags
func (o ScalewayInstanceV1VolumeOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Volume) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o ScalewayInstanceV1VolumeOutput) Volume_type() ScalewayInstanceV1VolumeVolumeTypePtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Volume) *ScalewayInstanceV1VolumeVolumeType { return v.Volume_type }).(ScalewayInstanceV1VolumeVolumeTypePtrOutput)
}

// The zone in which is the volume
func (o ScalewayInstanceV1VolumeOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Volume) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

type ScalewayInstanceV1VolumeMapOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1VolumeMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ScalewayInstanceV1Volume)(nil)).Elem()
}

func (o ScalewayInstanceV1VolumeMapOutput) ToScalewayInstanceV1VolumeMapOutput() ScalewayInstanceV1VolumeMapOutput {
	return o
}

func (o ScalewayInstanceV1VolumeMapOutput) ToScalewayInstanceV1VolumeMapOutputWithContext(ctx context.Context) ScalewayInstanceV1VolumeMapOutput {
	return o
}

func (o ScalewayInstanceV1VolumeMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]ScalewayInstanceV1Volume] {
	return pulumix.Output[map[string]ScalewayInstanceV1Volume]{
		OutputState: o.OutputState,
	}
}

func (o ScalewayInstanceV1VolumeMapOutput) MapIndex(k pulumi.StringInput) ScalewayInstanceV1VolumeOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ScalewayInstanceV1Volume {
		return vs[0].(map[string]ScalewayInstanceV1Volume)[vs[1].(string)]
	}).(ScalewayInstanceV1VolumeOutput)
}

// The server attached to the volume
type ScalewayInstanceV1VolumeServerProperties struct {
	Id   *string `pulumi:"id"`
	Name *string `pulumi:"name"`
}

// ScalewayInstanceV1VolumeServerPropertiesInput is an input type that accepts ScalewayInstanceV1VolumeServerPropertiesArgs and ScalewayInstanceV1VolumeServerPropertiesOutput values.
// You can construct a concrete instance of `ScalewayInstanceV1VolumeServerPropertiesInput` via:
//
//	ScalewayInstanceV1VolumeServerPropertiesArgs{...}
type ScalewayInstanceV1VolumeServerPropertiesInput interface {
	pulumi.Input

	ToScalewayInstanceV1VolumeServerPropertiesOutput() ScalewayInstanceV1VolumeServerPropertiesOutput
	ToScalewayInstanceV1VolumeServerPropertiesOutputWithContext(context.Context) ScalewayInstanceV1VolumeServerPropertiesOutput
}

// The server attached to the volume
type ScalewayInstanceV1VolumeServerPropertiesArgs struct {
	Id   pulumi.StringPtrInput `pulumi:"id"`
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ScalewayInstanceV1VolumeServerPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalewayInstanceV1VolumeServerProperties)(nil)).Elem()
}

func (i ScalewayInstanceV1VolumeServerPropertiesArgs) ToScalewayInstanceV1VolumeServerPropertiesOutput() ScalewayInstanceV1VolumeServerPropertiesOutput {
	return i.ToScalewayInstanceV1VolumeServerPropertiesOutputWithContext(context.Background())
}

func (i ScalewayInstanceV1VolumeServerPropertiesArgs) ToScalewayInstanceV1VolumeServerPropertiesOutputWithContext(ctx context.Context) ScalewayInstanceV1VolumeServerPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalewayInstanceV1VolumeServerPropertiesOutput)
}

func (i ScalewayInstanceV1VolumeServerPropertiesArgs) ToOutput(ctx context.Context) pulumix.Output[ScalewayInstanceV1VolumeServerProperties] {
	return pulumix.Output[ScalewayInstanceV1VolumeServerProperties]{
		OutputState: i.ToScalewayInstanceV1VolumeServerPropertiesOutputWithContext(ctx).OutputState,
	}
}

func (i ScalewayInstanceV1VolumeServerPropertiesArgs) ToScalewayInstanceV1VolumeServerPropertiesPtrOutput() ScalewayInstanceV1VolumeServerPropertiesPtrOutput {
	return i.ToScalewayInstanceV1VolumeServerPropertiesPtrOutputWithContext(context.Background())
}

func (i ScalewayInstanceV1VolumeServerPropertiesArgs) ToScalewayInstanceV1VolumeServerPropertiesPtrOutputWithContext(ctx context.Context) ScalewayInstanceV1VolumeServerPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalewayInstanceV1VolumeServerPropertiesOutput).ToScalewayInstanceV1VolumeServerPropertiesPtrOutputWithContext(ctx)
}

// ScalewayInstanceV1VolumeServerPropertiesPtrInput is an input type that accepts ScalewayInstanceV1VolumeServerPropertiesArgs, ScalewayInstanceV1VolumeServerPropertiesPtr and ScalewayInstanceV1VolumeServerPropertiesPtrOutput values.
// You can construct a concrete instance of `ScalewayInstanceV1VolumeServerPropertiesPtrInput` via:
//
//	        ScalewayInstanceV1VolumeServerPropertiesArgs{...}
//
//	or:
//
//	        nil
type ScalewayInstanceV1VolumeServerPropertiesPtrInput interface {
	pulumi.Input

	ToScalewayInstanceV1VolumeServerPropertiesPtrOutput() ScalewayInstanceV1VolumeServerPropertiesPtrOutput
	ToScalewayInstanceV1VolumeServerPropertiesPtrOutputWithContext(context.Context) ScalewayInstanceV1VolumeServerPropertiesPtrOutput
}

type scalewayInstanceV1VolumeServerPropertiesPtrType ScalewayInstanceV1VolumeServerPropertiesArgs

func ScalewayInstanceV1VolumeServerPropertiesPtr(v *ScalewayInstanceV1VolumeServerPropertiesArgs) ScalewayInstanceV1VolumeServerPropertiesPtrInput {
	return (*scalewayInstanceV1VolumeServerPropertiesPtrType)(v)
}

func (*scalewayInstanceV1VolumeServerPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalewayInstanceV1VolumeServerProperties)(nil)).Elem()
}

func (i *scalewayInstanceV1VolumeServerPropertiesPtrType) ToScalewayInstanceV1VolumeServerPropertiesPtrOutput() ScalewayInstanceV1VolumeServerPropertiesPtrOutput {
	return i.ToScalewayInstanceV1VolumeServerPropertiesPtrOutputWithContext(context.Background())
}

func (i *scalewayInstanceV1VolumeServerPropertiesPtrType) ToScalewayInstanceV1VolumeServerPropertiesPtrOutputWithContext(ctx context.Context) ScalewayInstanceV1VolumeServerPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalewayInstanceV1VolumeServerPropertiesPtrOutput)
}

func (i *scalewayInstanceV1VolumeServerPropertiesPtrType) ToOutput(ctx context.Context) pulumix.Output[*ScalewayInstanceV1VolumeServerProperties] {
	return pulumix.Output[*ScalewayInstanceV1VolumeServerProperties]{
		OutputState: i.ToScalewayInstanceV1VolumeServerPropertiesPtrOutputWithContext(ctx).OutputState,
	}
}

// The server attached to the volume
type ScalewayInstanceV1VolumeServerPropertiesOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1VolumeServerPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalewayInstanceV1VolumeServerProperties)(nil)).Elem()
}

func (o ScalewayInstanceV1VolumeServerPropertiesOutput) ToScalewayInstanceV1VolumeServerPropertiesOutput() ScalewayInstanceV1VolumeServerPropertiesOutput {
	return o
}

func (o ScalewayInstanceV1VolumeServerPropertiesOutput) ToScalewayInstanceV1VolumeServerPropertiesOutputWithContext(ctx context.Context) ScalewayInstanceV1VolumeServerPropertiesOutput {
	return o
}

func (o ScalewayInstanceV1VolumeServerPropertiesOutput) ToScalewayInstanceV1VolumeServerPropertiesPtrOutput() ScalewayInstanceV1VolumeServerPropertiesPtrOutput {
	return o.ToScalewayInstanceV1VolumeServerPropertiesPtrOutputWithContext(context.Background())
}

func (o ScalewayInstanceV1VolumeServerPropertiesOutput) ToScalewayInstanceV1VolumeServerPropertiesPtrOutputWithContext(ctx context.Context) ScalewayInstanceV1VolumeServerPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScalewayInstanceV1VolumeServerProperties) *ScalewayInstanceV1VolumeServerProperties {
		return &v
	}).(ScalewayInstanceV1VolumeServerPropertiesPtrOutput)
}

func (o ScalewayInstanceV1VolumeServerPropertiesOutput) ToOutput(ctx context.Context) pulumix.Output[ScalewayInstanceV1VolumeServerProperties] {
	return pulumix.Output[ScalewayInstanceV1VolumeServerProperties]{
		OutputState: o.OutputState,
	}
}

func (o ScalewayInstanceV1VolumeServerPropertiesOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1VolumeServerProperties) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o ScalewayInstanceV1VolumeServerPropertiesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1VolumeServerProperties) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ScalewayInstanceV1VolumeServerPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1VolumeServerPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalewayInstanceV1VolumeServerProperties)(nil)).Elem()
}

func (o ScalewayInstanceV1VolumeServerPropertiesPtrOutput) ToScalewayInstanceV1VolumeServerPropertiesPtrOutput() ScalewayInstanceV1VolumeServerPropertiesPtrOutput {
	return o
}

func (o ScalewayInstanceV1VolumeServerPropertiesPtrOutput) ToScalewayInstanceV1VolumeServerPropertiesPtrOutputWithContext(ctx context.Context) ScalewayInstanceV1VolumeServerPropertiesPtrOutput {
	return o
}

func (o ScalewayInstanceV1VolumeServerPropertiesPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ScalewayInstanceV1VolumeServerProperties] {
	return pulumix.Output[*ScalewayInstanceV1VolumeServerProperties]{
		OutputState: o.OutputState,
	}
}

func (o ScalewayInstanceV1VolumeServerPropertiesPtrOutput) Elem() ScalewayInstanceV1VolumeServerPropertiesOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1VolumeServerProperties) ScalewayInstanceV1VolumeServerProperties {
		if v != nil {
			return *v
		}
		var ret ScalewayInstanceV1VolumeServerProperties
		return ret
	}).(ScalewayInstanceV1VolumeServerPropertiesOutput)
}

func (o ScalewayInstanceV1VolumeServerPropertiesPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1VolumeServerProperties) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

func (o ScalewayInstanceV1VolumeServerPropertiesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1VolumeServerProperties) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

type ScalewayInstanceV1VolumeSummary struct {
	Id   *string `pulumi:"id"`
	Name *string `pulumi:"name"`
	// (in bytes)
	Size        *float64                                   `pulumi:"size"`
	Volume_type *ScalewayInstanceV1VolumeSummaryVolumeType `pulumi:"volume_type"`
}

// Defaults sets the appropriate defaults for ScalewayInstanceV1VolumeSummary
func (val *ScalewayInstanceV1VolumeSummary) Defaults() *ScalewayInstanceV1VolumeSummary {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Volume_type == nil {
		volume_type_ := ScalewayInstanceV1VolumeSummaryVolumeType("l_ssd")
		tmp.Volume_type = &volume_type_
	}
	return &tmp
}

// ScalewayInstanceV1VolumeSummaryInput is an input type that accepts ScalewayInstanceV1VolumeSummaryArgs and ScalewayInstanceV1VolumeSummaryOutput values.
// You can construct a concrete instance of `ScalewayInstanceV1VolumeSummaryInput` via:
//
//	ScalewayInstanceV1VolumeSummaryArgs{...}
type ScalewayInstanceV1VolumeSummaryInput interface {
	pulumi.Input

	ToScalewayInstanceV1VolumeSummaryOutput() ScalewayInstanceV1VolumeSummaryOutput
	ToScalewayInstanceV1VolumeSummaryOutputWithContext(context.Context) ScalewayInstanceV1VolumeSummaryOutput
}

type ScalewayInstanceV1VolumeSummaryArgs struct {
	Id   pulumi.StringPtrInput `pulumi:"id"`
	Name pulumi.StringPtrInput `pulumi:"name"`
	// (in bytes)
	Size        pulumi.Float64PtrInput                            `pulumi:"size"`
	Volume_type ScalewayInstanceV1VolumeSummaryVolumeTypePtrInput `pulumi:"volume_type"`
}

// Defaults sets the appropriate defaults for ScalewayInstanceV1VolumeSummaryArgs
func (val *ScalewayInstanceV1VolumeSummaryArgs) Defaults() *ScalewayInstanceV1VolumeSummaryArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Volume_type == nil {
		tmp.Volume_type = ScalewayInstanceV1VolumeSummaryVolumeType("l_ssd")
	}
	return &tmp
}
func (ScalewayInstanceV1VolumeSummaryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalewayInstanceV1VolumeSummary)(nil)).Elem()
}

func (i ScalewayInstanceV1VolumeSummaryArgs) ToScalewayInstanceV1VolumeSummaryOutput() ScalewayInstanceV1VolumeSummaryOutput {
	return i.ToScalewayInstanceV1VolumeSummaryOutputWithContext(context.Background())
}

func (i ScalewayInstanceV1VolumeSummaryArgs) ToScalewayInstanceV1VolumeSummaryOutputWithContext(ctx context.Context) ScalewayInstanceV1VolumeSummaryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalewayInstanceV1VolumeSummaryOutput)
}

func (i ScalewayInstanceV1VolumeSummaryArgs) ToOutput(ctx context.Context) pulumix.Output[ScalewayInstanceV1VolumeSummary] {
	return pulumix.Output[ScalewayInstanceV1VolumeSummary]{
		OutputState: i.ToScalewayInstanceV1VolumeSummaryOutputWithContext(ctx).OutputState,
	}
}

type ScalewayInstanceV1VolumeSummaryOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1VolumeSummaryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalewayInstanceV1VolumeSummary)(nil)).Elem()
}

func (o ScalewayInstanceV1VolumeSummaryOutput) ToScalewayInstanceV1VolumeSummaryOutput() ScalewayInstanceV1VolumeSummaryOutput {
	return o
}

func (o ScalewayInstanceV1VolumeSummaryOutput) ToScalewayInstanceV1VolumeSummaryOutputWithContext(ctx context.Context) ScalewayInstanceV1VolumeSummaryOutput {
	return o
}

func (o ScalewayInstanceV1VolumeSummaryOutput) ToOutput(ctx context.Context) pulumix.Output[ScalewayInstanceV1VolumeSummary] {
	return pulumix.Output[ScalewayInstanceV1VolumeSummary]{
		OutputState: o.OutputState,
	}
}

func (o ScalewayInstanceV1VolumeSummaryOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1VolumeSummary) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o ScalewayInstanceV1VolumeSummaryOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1VolumeSummary) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// (in bytes)
func (o ScalewayInstanceV1VolumeSummaryOutput) Size() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1VolumeSummary) *float64 { return v.Size }).(pulumi.Float64PtrOutput)
}

func (o ScalewayInstanceV1VolumeSummaryOutput) Volume_type() ScalewayInstanceV1VolumeSummaryVolumeTypePtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1VolumeSummary) *ScalewayInstanceV1VolumeSummaryVolumeType {
		return v.Volume_type
	}).(ScalewayInstanceV1VolumeSummaryVolumeTypePtrOutput)
}

type ScalewayInstanceV1VolumeSummaryPtrOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1VolumeSummaryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalewayInstanceV1VolumeSummary)(nil)).Elem()
}

func (o ScalewayInstanceV1VolumeSummaryPtrOutput) ToScalewayInstanceV1VolumeSummaryPtrOutput() ScalewayInstanceV1VolumeSummaryPtrOutput {
	return o
}

func (o ScalewayInstanceV1VolumeSummaryPtrOutput) ToScalewayInstanceV1VolumeSummaryPtrOutputWithContext(ctx context.Context) ScalewayInstanceV1VolumeSummaryPtrOutput {
	return o
}

func (o ScalewayInstanceV1VolumeSummaryPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ScalewayInstanceV1VolumeSummary] {
	return pulumix.Output[*ScalewayInstanceV1VolumeSummary]{
		OutputState: o.OutputState,
	}
}

func (o ScalewayInstanceV1VolumeSummaryPtrOutput) Elem() ScalewayInstanceV1VolumeSummaryOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1VolumeSummary) ScalewayInstanceV1VolumeSummary {
		if v != nil {
			return *v
		}
		var ret ScalewayInstanceV1VolumeSummary
		return ret
	}).(ScalewayInstanceV1VolumeSummaryOutput)
}

func (o ScalewayInstanceV1VolumeSummaryPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1VolumeSummary) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

func (o ScalewayInstanceV1VolumeSummaryPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1VolumeSummary) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// (in bytes)
func (o ScalewayInstanceV1VolumeSummaryPtrOutput) Size() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1VolumeSummary) *float64 {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.Float64PtrOutput)
}

func (o ScalewayInstanceV1VolumeSummaryPtrOutput) Volume_type() ScalewayInstanceV1VolumeSummaryVolumeTypePtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1VolumeSummary) *ScalewayInstanceV1VolumeSummaryVolumeType {
		if v == nil {
			return nil
		}
		return v.Volume_type
	}).(ScalewayInstanceV1VolumeSummaryVolumeTypePtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ScalewayInstanceV1BootscriptInput)(nil)).Elem(), ScalewayInstanceV1BootscriptArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalewayInstanceV1BootscriptPtrInput)(nil)).Elem(), ScalewayInstanceV1BootscriptArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalewayInstanceV1VolumeInput)(nil)).Elem(), ScalewayInstanceV1VolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalewayInstanceV1VolumeMapInput)(nil)).Elem(), ScalewayInstanceV1VolumeMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalewayInstanceV1VolumeServerPropertiesInput)(nil)).Elem(), ScalewayInstanceV1VolumeServerPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalewayInstanceV1VolumeServerPropertiesPtrInput)(nil)).Elem(), ScalewayInstanceV1VolumeServerPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalewayInstanceV1VolumeSummaryInput)(nil)).Elem(), ScalewayInstanceV1VolumeSummaryArgs{})
	pulumi.RegisterOutputType(ScalewayInstanceV1BootscriptOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1BootscriptPtrOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1GetImageResponseOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1ImageOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1ImagePtrOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1ImageArrayOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1ListImagesResponseOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1VolumeOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1VolumeMapOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1VolumeServerPropertiesOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1VolumeServerPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1VolumeSummaryOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1VolumeSummaryPtrOutput{})
}
