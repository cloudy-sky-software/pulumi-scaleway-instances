// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package export

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-scaleway-instances/sdk/go/sclwyinst/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type ExportSnapshot struct {
	pulumi.CustomResourceState

	// S3 bucket name
	Bucket pulumi.StringPtrOutput `pulumi:"bucket"`
	// S3 object key
	Key  pulumi.StringPtrOutput          `pulumi:"key"`
	Task ScalewayInstanceV1TaskPtrOutput `pulumi:"task"`
}

// NewExportSnapshot registers a new resource with the given unique name, arguments, and options.
func NewExportSnapshot(ctx *pulumi.Context,
	name string, args *ExportSnapshotArgs, opts ...pulumi.ResourceOption) (*ExportSnapshot, error) {
	if args == nil {
		args = &ExportSnapshotArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ExportSnapshot
	err := ctx.RegisterResource("scaleway-instances:export:ExportSnapshot", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetExportSnapshot gets an existing ExportSnapshot resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetExportSnapshot(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ExportSnapshotState, opts ...pulumi.ResourceOption) (*ExportSnapshot, error) {
	var resource ExportSnapshot
	err := ctx.ReadResource("scaleway-instances:export:ExportSnapshot", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ExportSnapshot resources.
type exportSnapshotState struct {
}

type ExportSnapshotState struct {
}

func (ExportSnapshotState) ElementType() reflect.Type {
	return reflect.TypeOf((*exportSnapshotState)(nil)).Elem()
}

type exportSnapshotArgs struct {
	// S3 bucket name
	Bucket *string `pulumi:"bucket"`
	// S3 object key
	Key *string `pulumi:"key"`
	// The snapshot ID
	Snapshot_id *string `pulumi:"snapshot_id"`
	// The zone you want to target
	Zone *string `pulumi:"zone"`
}

// The set of arguments for constructing a ExportSnapshot resource.
type ExportSnapshotArgs struct {
	// S3 bucket name
	Bucket pulumi.StringPtrInput
	// S3 object key
	Key pulumi.StringPtrInput
	// The snapshot ID
	Snapshot_id pulumi.StringPtrInput
	// The zone you want to target
	Zone pulumi.StringPtrInput
}

func (ExportSnapshotArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*exportSnapshotArgs)(nil)).Elem()
}

type ExportSnapshotInput interface {
	pulumi.Input

	ToExportSnapshotOutput() ExportSnapshotOutput
	ToExportSnapshotOutputWithContext(ctx context.Context) ExportSnapshotOutput
}

func (*ExportSnapshot) ElementType() reflect.Type {
	return reflect.TypeOf((**ExportSnapshot)(nil)).Elem()
}

func (i *ExportSnapshot) ToExportSnapshotOutput() ExportSnapshotOutput {
	return i.ToExportSnapshotOutputWithContext(context.Background())
}

func (i *ExportSnapshot) ToExportSnapshotOutputWithContext(ctx context.Context) ExportSnapshotOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExportSnapshotOutput)
}

func (i *ExportSnapshot) ToOutput(ctx context.Context) pulumix.Output[*ExportSnapshot] {
	return pulumix.Output[*ExportSnapshot]{
		OutputState: i.ToExportSnapshotOutputWithContext(ctx).OutputState,
	}
}

type ExportSnapshotOutput struct{ *pulumi.OutputState }

func (ExportSnapshotOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExportSnapshot)(nil)).Elem()
}

func (o ExportSnapshotOutput) ToExportSnapshotOutput() ExportSnapshotOutput {
	return o
}

func (o ExportSnapshotOutput) ToExportSnapshotOutputWithContext(ctx context.Context) ExportSnapshotOutput {
	return o
}

func (o ExportSnapshotOutput) ToOutput(ctx context.Context) pulumix.Output[*ExportSnapshot] {
	return pulumix.Output[*ExportSnapshot]{
		OutputState: o.OutputState,
	}
}

// S3 bucket name
func (o ExportSnapshotOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExportSnapshot) pulumi.StringPtrOutput { return v.Bucket }).(pulumi.StringPtrOutput)
}

// S3 object key
func (o ExportSnapshotOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExportSnapshot) pulumi.StringPtrOutput { return v.Key }).(pulumi.StringPtrOutput)
}

func (o ExportSnapshotOutput) Task() ScalewayInstanceV1TaskPtrOutput {
	return o.ApplyT(func(v *ExportSnapshot) ScalewayInstanceV1TaskPtrOutput { return v.Task }).(ScalewayInstanceV1TaskPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ExportSnapshotInput)(nil)).Elem(), &ExportSnapshot{})
	pulumi.RegisterOutputType(ExportSnapshotOutput{})
}
