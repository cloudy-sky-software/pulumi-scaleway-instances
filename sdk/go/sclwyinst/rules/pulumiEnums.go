// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rules

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type Action string

const (
	ActionAccept = Action("accept")
	ActionDrop   = Action("drop")
)

func (Action) ElementType() reflect.Type {
	return reflect.TypeOf((*Action)(nil)).Elem()
}

func (e Action) ToActionOutput() ActionOutput {
	return pulumi.ToOutput(e).(ActionOutput)
}

func (e Action) ToActionOutputWithContext(ctx context.Context) ActionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ActionOutput)
}

func (e Action) ToActionPtrOutput() ActionPtrOutput {
	return e.ToActionPtrOutputWithContext(context.Background())
}

func (e Action) ToActionPtrOutputWithContext(ctx context.Context) ActionPtrOutput {
	return Action(e).ToActionOutputWithContext(ctx).ToActionPtrOutputWithContext(ctx)
}

func (e Action) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Action) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Action) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Action) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ActionOutput struct{ *pulumi.OutputState }

func (ActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Action)(nil)).Elem()
}

func (o ActionOutput) ToActionOutput() ActionOutput {
	return o
}

func (o ActionOutput) ToActionOutputWithContext(ctx context.Context) ActionOutput {
	return o
}

func (o ActionOutput) ToActionPtrOutput() ActionPtrOutput {
	return o.ToActionPtrOutputWithContext(context.Background())
}

func (o ActionOutput) ToActionPtrOutputWithContext(ctx context.Context) ActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Action) *Action {
		return &v
	}).(ActionPtrOutput)
}

func (o ActionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ActionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Action) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ActionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ActionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Action) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ActionPtrOutput struct{ *pulumi.OutputState }

func (ActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Action)(nil)).Elem()
}

func (o ActionPtrOutput) ToActionPtrOutput() ActionPtrOutput {
	return o
}

func (o ActionPtrOutput) ToActionPtrOutputWithContext(ctx context.Context) ActionPtrOutput {
	return o
}

func (o ActionPtrOutput) Elem() ActionOutput {
	return o.ApplyT(func(v *Action) Action {
		if v != nil {
			return *v
		}
		var ret Action
		return ret
	}).(ActionOutput)
}

func (o ActionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ActionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Action) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ActionInput is an input type that accepts values of the Action enum
// A concrete instance of `ActionInput` can be one of the following:
//
//	ActionAccept
//	ActionDrop
type ActionInput interface {
	pulumi.Input

	ToActionOutput() ActionOutput
	ToActionOutputWithContext(context.Context) ActionOutput
}

var actionPtrType = reflect.TypeOf((**Action)(nil)).Elem()

type ActionPtrInput interface {
	pulumi.Input

	ToActionPtrOutput() ActionPtrOutput
	ToActionPtrOutputWithContext(context.Context) ActionPtrOutput
}

type actionPtr string

func ActionPtr(v string) ActionPtrInput {
	return (*actionPtr)(&v)
}

func (*actionPtr) ElementType() reflect.Type {
	return actionPtrType
}

func (in *actionPtr) ToActionPtrOutput() ActionPtrOutput {
	return pulumi.ToOutput(in).(ActionPtrOutput)
}

func (in *actionPtr) ToActionPtrOutputWithContext(ctx context.Context) ActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ActionPtrOutput)
}

type Direction string

const (
	DirectionInbound  = Direction("inbound")
	DirectionOutbound = Direction("outbound")
)

func (Direction) ElementType() reflect.Type {
	return reflect.TypeOf((*Direction)(nil)).Elem()
}

func (e Direction) ToDirectionOutput() DirectionOutput {
	return pulumi.ToOutput(e).(DirectionOutput)
}

func (e Direction) ToDirectionOutputWithContext(ctx context.Context) DirectionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DirectionOutput)
}

func (e Direction) ToDirectionPtrOutput() DirectionPtrOutput {
	return e.ToDirectionPtrOutputWithContext(context.Background())
}

func (e Direction) ToDirectionPtrOutputWithContext(ctx context.Context) DirectionPtrOutput {
	return Direction(e).ToDirectionOutputWithContext(ctx).ToDirectionPtrOutputWithContext(ctx)
}

func (e Direction) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Direction) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Direction) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Direction) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DirectionOutput struct{ *pulumi.OutputState }

func (DirectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Direction)(nil)).Elem()
}

func (o DirectionOutput) ToDirectionOutput() DirectionOutput {
	return o
}

func (o DirectionOutput) ToDirectionOutputWithContext(ctx context.Context) DirectionOutput {
	return o
}

func (o DirectionOutput) ToDirectionPtrOutput() DirectionPtrOutput {
	return o.ToDirectionPtrOutputWithContext(context.Background())
}

func (o DirectionOutput) ToDirectionPtrOutputWithContext(ctx context.Context) DirectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Direction) *Direction {
		return &v
	}).(DirectionPtrOutput)
}

func (o DirectionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DirectionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Direction) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DirectionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DirectionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Direction) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DirectionPtrOutput struct{ *pulumi.OutputState }

func (DirectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Direction)(nil)).Elem()
}

func (o DirectionPtrOutput) ToDirectionPtrOutput() DirectionPtrOutput {
	return o
}

func (o DirectionPtrOutput) ToDirectionPtrOutputWithContext(ctx context.Context) DirectionPtrOutput {
	return o
}

func (o DirectionPtrOutput) Elem() DirectionOutput {
	return o.ApplyT(func(v *Direction) Direction {
		if v != nil {
			return *v
		}
		var ret Direction
		return ret
	}).(DirectionOutput)
}

func (o DirectionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DirectionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Direction) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DirectionInput is an input type that accepts values of the Direction enum
// A concrete instance of `DirectionInput` can be one of the following:
//
//	DirectionInbound
//	DirectionOutbound
type DirectionInput interface {
	pulumi.Input

	ToDirectionOutput() DirectionOutput
	ToDirectionOutputWithContext(context.Context) DirectionOutput
}

var directionPtrType = reflect.TypeOf((**Direction)(nil)).Elem()

type DirectionPtrInput interface {
	pulumi.Input

	ToDirectionPtrOutput() DirectionPtrOutput
	ToDirectionPtrOutputWithContext(context.Context) DirectionPtrOutput
}

type directionPtr string

func DirectionPtr(v string) DirectionPtrInput {
	return (*directionPtr)(&v)
}

func (*directionPtr) ElementType() reflect.Type {
	return directionPtrType
}

func (in *directionPtr) ToDirectionPtrOutput() DirectionPtrOutput {
	return pulumi.ToOutput(in).(DirectionPtrOutput)
}

func (in *directionPtr) ToDirectionPtrOutputWithContext(ctx context.Context) DirectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DirectionPtrOutput)
}

type Protocol string

const (
	ProtocolTcp  = Protocol("TCP")
	ProtocolUdp  = Protocol("UDP")
	ProtocolIcmp = Protocol("ICMP")
	ProtocolAny  = Protocol("ANY")
)

func (Protocol) ElementType() reflect.Type {
	return reflect.TypeOf((*Protocol)(nil)).Elem()
}

func (e Protocol) ToProtocolOutput() ProtocolOutput {
	return pulumi.ToOutput(e).(ProtocolOutput)
}

func (e Protocol) ToProtocolOutputWithContext(ctx context.Context) ProtocolOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ProtocolOutput)
}

func (e Protocol) ToProtocolPtrOutput() ProtocolPtrOutput {
	return e.ToProtocolPtrOutputWithContext(context.Background())
}

func (e Protocol) ToProtocolPtrOutputWithContext(ctx context.Context) ProtocolPtrOutput {
	return Protocol(e).ToProtocolOutputWithContext(ctx).ToProtocolPtrOutputWithContext(ctx)
}

func (e Protocol) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Protocol) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Protocol) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Protocol) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ProtocolOutput struct{ *pulumi.OutputState }

func (ProtocolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Protocol)(nil)).Elem()
}

func (o ProtocolOutput) ToProtocolOutput() ProtocolOutput {
	return o
}

func (o ProtocolOutput) ToProtocolOutputWithContext(ctx context.Context) ProtocolOutput {
	return o
}

func (o ProtocolOutput) ToProtocolPtrOutput() ProtocolPtrOutput {
	return o.ToProtocolPtrOutputWithContext(context.Background())
}

func (o ProtocolOutput) ToProtocolPtrOutputWithContext(ctx context.Context) ProtocolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Protocol) *Protocol {
		return &v
	}).(ProtocolPtrOutput)
}

func (o ProtocolOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ProtocolOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Protocol) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ProtocolOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ProtocolOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Protocol) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ProtocolPtrOutput struct{ *pulumi.OutputState }

func (ProtocolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Protocol)(nil)).Elem()
}

func (o ProtocolPtrOutput) ToProtocolPtrOutput() ProtocolPtrOutput {
	return o
}

func (o ProtocolPtrOutput) ToProtocolPtrOutputWithContext(ctx context.Context) ProtocolPtrOutput {
	return o
}

func (o ProtocolPtrOutput) Elem() ProtocolOutput {
	return o.ApplyT(func(v *Protocol) Protocol {
		if v != nil {
			return *v
		}
		var ret Protocol
		return ret
	}).(ProtocolOutput)
}

func (o ProtocolPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ProtocolPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Protocol) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ProtocolInput is an input type that accepts values of the Protocol enum
// A concrete instance of `ProtocolInput` can be one of the following:
//
//	ProtocolTcp
//	ProtocolUdp
//	ProtocolIcmp
//	ProtocolAny
type ProtocolInput interface {
	pulumi.Input

	ToProtocolOutput() ProtocolOutput
	ToProtocolOutputWithContext(context.Context) ProtocolOutput
}

var protocolPtrType = reflect.TypeOf((**Protocol)(nil)).Elem()

type ProtocolPtrInput interface {
	pulumi.Input

	ToProtocolPtrOutput() ProtocolPtrOutput
	ToProtocolPtrOutputWithContext(context.Context) ProtocolPtrOutput
}

type protocolPtr string

func ProtocolPtr(v string) ProtocolPtrInput {
	return (*protocolPtr)(&v)
}

func (*protocolPtr) ElementType() reflect.Type {
	return protocolPtrType
}

func (in *protocolPtr) ToProtocolPtrOutput() ProtocolPtrOutput {
	return pulumi.ToOutput(in).(ProtocolPtrOutput)
}

func (in *protocolPtr) ToProtocolPtrOutputWithContext(ctx context.Context) ProtocolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ProtocolPtrOutput)
}

type ScalewayInstanceV1SecurityGroupRuleAction string

const (
	ScalewayInstanceV1SecurityGroupRuleActionAccept = ScalewayInstanceV1SecurityGroupRuleAction("accept")
	ScalewayInstanceV1SecurityGroupRuleActionDrop   = ScalewayInstanceV1SecurityGroupRuleAction("drop")
)

type ScalewayInstanceV1SecurityGroupRuleActionOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1SecurityGroupRuleActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalewayInstanceV1SecurityGroupRuleAction)(nil)).Elem()
}

func (o ScalewayInstanceV1SecurityGroupRuleActionOutput) ToScalewayInstanceV1SecurityGroupRuleActionOutput() ScalewayInstanceV1SecurityGroupRuleActionOutput {
	return o
}

func (o ScalewayInstanceV1SecurityGroupRuleActionOutput) ToScalewayInstanceV1SecurityGroupRuleActionOutputWithContext(ctx context.Context) ScalewayInstanceV1SecurityGroupRuleActionOutput {
	return o
}

func (o ScalewayInstanceV1SecurityGroupRuleActionOutput) ToScalewayInstanceV1SecurityGroupRuleActionPtrOutput() ScalewayInstanceV1SecurityGroupRuleActionPtrOutput {
	return o.ToScalewayInstanceV1SecurityGroupRuleActionPtrOutputWithContext(context.Background())
}

func (o ScalewayInstanceV1SecurityGroupRuleActionOutput) ToScalewayInstanceV1SecurityGroupRuleActionPtrOutputWithContext(ctx context.Context) ScalewayInstanceV1SecurityGroupRuleActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScalewayInstanceV1SecurityGroupRuleAction) *ScalewayInstanceV1SecurityGroupRuleAction {
		return &v
	}).(ScalewayInstanceV1SecurityGroupRuleActionPtrOutput)
}

func (o ScalewayInstanceV1SecurityGroupRuleActionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ScalewayInstanceV1SecurityGroupRuleActionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ScalewayInstanceV1SecurityGroupRuleAction) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ScalewayInstanceV1SecurityGroupRuleActionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ScalewayInstanceV1SecurityGroupRuleActionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ScalewayInstanceV1SecurityGroupRuleAction) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ScalewayInstanceV1SecurityGroupRuleActionPtrOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1SecurityGroupRuleActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalewayInstanceV1SecurityGroupRuleAction)(nil)).Elem()
}

func (o ScalewayInstanceV1SecurityGroupRuleActionPtrOutput) ToScalewayInstanceV1SecurityGroupRuleActionPtrOutput() ScalewayInstanceV1SecurityGroupRuleActionPtrOutput {
	return o
}

func (o ScalewayInstanceV1SecurityGroupRuleActionPtrOutput) ToScalewayInstanceV1SecurityGroupRuleActionPtrOutputWithContext(ctx context.Context) ScalewayInstanceV1SecurityGroupRuleActionPtrOutput {
	return o
}

func (o ScalewayInstanceV1SecurityGroupRuleActionPtrOutput) Elem() ScalewayInstanceV1SecurityGroupRuleActionOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1SecurityGroupRuleAction) ScalewayInstanceV1SecurityGroupRuleAction {
		if v != nil {
			return *v
		}
		var ret ScalewayInstanceV1SecurityGroupRuleAction
		return ret
	}).(ScalewayInstanceV1SecurityGroupRuleActionOutput)
}

func (o ScalewayInstanceV1SecurityGroupRuleActionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ScalewayInstanceV1SecurityGroupRuleActionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ScalewayInstanceV1SecurityGroupRuleAction) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ScalewayInstanceV1SecurityGroupRuleDirection string

const (
	ScalewayInstanceV1SecurityGroupRuleDirectionInbound  = ScalewayInstanceV1SecurityGroupRuleDirection("inbound")
	ScalewayInstanceV1SecurityGroupRuleDirectionOutbound = ScalewayInstanceV1SecurityGroupRuleDirection("outbound")
)

type ScalewayInstanceV1SecurityGroupRuleDirectionOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1SecurityGroupRuleDirectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalewayInstanceV1SecurityGroupRuleDirection)(nil)).Elem()
}

func (o ScalewayInstanceV1SecurityGroupRuleDirectionOutput) ToScalewayInstanceV1SecurityGroupRuleDirectionOutput() ScalewayInstanceV1SecurityGroupRuleDirectionOutput {
	return o
}

func (o ScalewayInstanceV1SecurityGroupRuleDirectionOutput) ToScalewayInstanceV1SecurityGroupRuleDirectionOutputWithContext(ctx context.Context) ScalewayInstanceV1SecurityGroupRuleDirectionOutput {
	return o
}

func (o ScalewayInstanceV1SecurityGroupRuleDirectionOutput) ToScalewayInstanceV1SecurityGroupRuleDirectionPtrOutput() ScalewayInstanceV1SecurityGroupRuleDirectionPtrOutput {
	return o.ToScalewayInstanceV1SecurityGroupRuleDirectionPtrOutputWithContext(context.Background())
}

func (o ScalewayInstanceV1SecurityGroupRuleDirectionOutput) ToScalewayInstanceV1SecurityGroupRuleDirectionPtrOutputWithContext(ctx context.Context) ScalewayInstanceV1SecurityGroupRuleDirectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScalewayInstanceV1SecurityGroupRuleDirection) *ScalewayInstanceV1SecurityGroupRuleDirection {
		return &v
	}).(ScalewayInstanceV1SecurityGroupRuleDirectionPtrOutput)
}

func (o ScalewayInstanceV1SecurityGroupRuleDirectionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ScalewayInstanceV1SecurityGroupRuleDirectionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ScalewayInstanceV1SecurityGroupRuleDirection) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ScalewayInstanceV1SecurityGroupRuleDirectionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ScalewayInstanceV1SecurityGroupRuleDirectionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ScalewayInstanceV1SecurityGroupRuleDirection) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ScalewayInstanceV1SecurityGroupRuleDirectionPtrOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1SecurityGroupRuleDirectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalewayInstanceV1SecurityGroupRuleDirection)(nil)).Elem()
}

func (o ScalewayInstanceV1SecurityGroupRuleDirectionPtrOutput) ToScalewayInstanceV1SecurityGroupRuleDirectionPtrOutput() ScalewayInstanceV1SecurityGroupRuleDirectionPtrOutput {
	return o
}

func (o ScalewayInstanceV1SecurityGroupRuleDirectionPtrOutput) ToScalewayInstanceV1SecurityGroupRuleDirectionPtrOutputWithContext(ctx context.Context) ScalewayInstanceV1SecurityGroupRuleDirectionPtrOutput {
	return o
}

func (o ScalewayInstanceV1SecurityGroupRuleDirectionPtrOutput) Elem() ScalewayInstanceV1SecurityGroupRuleDirectionOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1SecurityGroupRuleDirection) ScalewayInstanceV1SecurityGroupRuleDirection {
		if v != nil {
			return *v
		}
		var ret ScalewayInstanceV1SecurityGroupRuleDirection
		return ret
	}).(ScalewayInstanceV1SecurityGroupRuleDirectionOutput)
}

func (o ScalewayInstanceV1SecurityGroupRuleDirectionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ScalewayInstanceV1SecurityGroupRuleDirectionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ScalewayInstanceV1SecurityGroupRuleDirection) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ScalewayInstanceV1SecurityGroupRuleProtocol string

const (
	ScalewayInstanceV1SecurityGroupRuleProtocolTcp  = ScalewayInstanceV1SecurityGroupRuleProtocol("TCP")
	ScalewayInstanceV1SecurityGroupRuleProtocolUdp  = ScalewayInstanceV1SecurityGroupRuleProtocol("UDP")
	ScalewayInstanceV1SecurityGroupRuleProtocolIcmp = ScalewayInstanceV1SecurityGroupRuleProtocol("ICMP")
	ScalewayInstanceV1SecurityGroupRuleProtocolAny  = ScalewayInstanceV1SecurityGroupRuleProtocol("ANY")
)

type ScalewayInstanceV1SecurityGroupRuleProtocolOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1SecurityGroupRuleProtocolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalewayInstanceV1SecurityGroupRuleProtocol)(nil)).Elem()
}

func (o ScalewayInstanceV1SecurityGroupRuleProtocolOutput) ToScalewayInstanceV1SecurityGroupRuleProtocolOutput() ScalewayInstanceV1SecurityGroupRuleProtocolOutput {
	return o
}

func (o ScalewayInstanceV1SecurityGroupRuleProtocolOutput) ToScalewayInstanceV1SecurityGroupRuleProtocolOutputWithContext(ctx context.Context) ScalewayInstanceV1SecurityGroupRuleProtocolOutput {
	return o
}

func (o ScalewayInstanceV1SecurityGroupRuleProtocolOutput) ToScalewayInstanceV1SecurityGroupRuleProtocolPtrOutput() ScalewayInstanceV1SecurityGroupRuleProtocolPtrOutput {
	return o.ToScalewayInstanceV1SecurityGroupRuleProtocolPtrOutputWithContext(context.Background())
}

func (o ScalewayInstanceV1SecurityGroupRuleProtocolOutput) ToScalewayInstanceV1SecurityGroupRuleProtocolPtrOutputWithContext(ctx context.Context) ScalewayInstanceV1SecurityGroupRuleProtocolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScalewayInstanceV1SecurityGroupRuleProtocol) *ScalewayInstanceV1SecurityGroupRuleProtocol {
		return &v
	}).(ScalewayInstanceV1SecurityGroupRuleProtocolPtrOutput)
}

func (o ScalewayInstanceV1SecurityGroupRuleProtocolOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ScalewayInstanceV1SecurityGroupRuleProtocolOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ScalewayInstanceV1SecurityGroupRuleProtocol) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ScalewayInstanceV1SecurityGroupRuleProtocolOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ScalewayInstanceV1SecurityGroupRuleProtocolOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ScalewayInstanceV1SecurityGroupRuleProtocol) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ScalewayInstanceV1SecurityGroupRuleProtocolPtrOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1SecurityGroupRuleProtocolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalewayInstanceV1SecurityGroupRuleProtocol)(nil)).Elem()
}

func (o ScalewayInstanceV1SecurityGroupRuleProtocolPtrOutput) ToScalewayInstanceV1SecurityGroupRuleProtocolPtrOutput() ScalewayInstanceV1SecurityGroupRuleProtocolPtrOutput {
	return o
}

func (o ScalewayInstanceV1SecurityGroupRuleProtocolPtrOutput) ToScalewayInstanceV1SecurityGroupRuleProtocolPtrOutputWithContext(ctx context.Context) ScalewayInstanceV1SecurityGroupRuleProtocolPtrOutput {
	return o
}

func (o ScalewayInstanceV1SecurityGroupRuleProtocolPtrOutput) Elem() ScalewayInstanceV1SecurityGroupRuleProtocolOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1SecurityGroupRuleProtocol) ScalewayInstanceV1SecurityGroupRuleProtocol {
		if v != nil {
			return *v
		}
		var ret ScalewayInstanceV1SecurityGroupRuleProtocol
		return ret
	}).(ScalewayInstanceV1SecurityGroupRuleProtocolOutput)
}

func (o ScalewayInstanceV1SecurityGroupRuleProtocolPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ScalewayInstanceV1SecurityGroupRuleProtocolPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ScalewayInstanceV1SecurityGroupRuleProtocol) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ActionInput)(nil)).Elem(), Action("accept"))
	pulumi.RegisterInputType(reflect.TypeOf((*ActionPtrInput)(nil)).Elem(), Action("accept"))
	pulumi.RegisterInputType(reflect.TypeOf((*DirectionInput)(nil)).Elem(), Direction("inbound"))
	pulumi.RegisterInputType(reflect.TypeOf((*DirectionPtrInput)(nil)).Elem(), Direction("inbound"))
	pulumi.RegisterInputType(reflect.TypeOf((*ProtocolInput)(nil)).Elem(), Protocol("TCP"))
	pulumi.RegisterInputType(reflect.TypeOf((*ProtocolPtrInput)(nil)).Elem(), Protocol("TCP"))
	pulumi.RegisterOutputType(ActionOutput{})
	pulumi.RegisterOutputType(ActionPtrOutput{})
	pulumi.RegisterOutputType(DirectionOutput{})
	pulumi.RegisterOutputType(DirectionPtrOutput{})
	pulumi.RegisterOutputType(ProtocolOutput{})
	pulumi.RegisterOutputType(ProtocolPtrOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1SecurityGroupRuleActionOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1SecurityGroupRuleActionPtrOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1SecurityGroupRuleDirectionOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1SecurityGroupRuleDirectionPtrOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1SecurityGroupRuleProtocolOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1SecurityGroupRuleProtocolPtrOutput{})
}
