// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package volumes

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-scaleway-instances/sdk/go/sclwyinst/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func ListVolumes(ctx *pulumi.Context, args *ListVolumesArgs, opts ...pulumi.InvokeOption) (*ListVolumesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv ListVolumesResult
	err := ctx.Invoke("scaleway-instances:volumes:listVolumes", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListVolumesArgs struct {
	// The zone you want to target
	Zone string `pulumi:"zone"`
}

type ListVolumesResult struct {
	// List of volumes
	Volumes []ScalewayInstanceV1Volume `pulumi:"volumes"`
}

func ListVolumesOutput(ctx *pulumi.Context, args ListVolumesOutputArgs, opts ...pulumi.InvokeOption) ListVolumesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (ListVolumesResultOutput, error) {
			args := v.(ListVolumesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("scaleway-instances:volumes:listVolumes", args, ListVolumesResultOutput{}, options).(ListVolumesResultOutput), nil
		}).(ListVolumesResultOutput)
}

type ListVolumesOutputArgs struct {
	// The zone you want to target
	Zone pulumi.StringInput `pulumi:"zone"`
}

func (ListVolumesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListVolumesArgs)(nil)).Elem()
}

type ListVolumesResultOutput struct{ *pulumi.OutputState }

func (ListVolumesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListVolumesResult)(nil)).Elem()
}

func (o ListVolumesResultOutput) ToListVolumesResultOutput() ListVolumesResultOutput {
	return o
}

func (o ListVolumesResultOutput) ToListVolumesResultOutputWithContext(ctx context.Context) ListVolumesResultOutput {
	return o
}

// List of volumes
func (o ListVolumesResultOutput) Volumes() ScalewayInstanceV1VolumeArrayOutput {
	return o.ApplyT(func(v ListVolumesResult) []ScalewayInstanceV1Volume { return v.Volumes }).(ScalewayInstanceV1VolumeArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(ListVolumesResultOutput{})
}
