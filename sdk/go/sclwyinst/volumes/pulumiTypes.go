// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package volumes

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ScalewayInstanceV1GetVolumeResponse struct {
	Volume *ScalewayInstanceV1Volume `pulumi:"volume"`
}

// Defaults sets the appropriate defaults for ScalewayInstanceV1GetVolumeResponse
func (val *ScalewayInstanceV1GetVolumeResponse) Defaults() *ScalewayInstanceV1GetVolumeResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Volume = tmp.Volume.Defaults()

	return &tmp
}

type ScalewayInstanceV1GetVolumeResponseOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1GetVolumeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalewayInstanceV1GetVolumeResponse)(nil)).Elem()
}

func (o ScalewayInstanceV1GetVolumeResponseOutput) ToScalewayInstanceV1GetVolumeResponseOutput() ScalewayInstanceV1GetVolumeResponseOutput {
	return o
}

func (o ScalewayInstanceV1GetVolumeResponseOutput) ToScalewayInstanceV1GetVolumeResponseOutputWithContext(ctx context.Context) ScalewayInstanceV1GetVolumeResponseOutput {
	return o
}

func (o ScalewayInstanceV1GetVolumeResponseOutput) Volume() ScalewayInstanceV1VolumePtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1GetVolumeResponse) *ScalewayInstanceV1Volume { return v.Volume }).(ScalewayInstanceV1VolumePtrOutput)
}

type ScalewayInstanceV1ListVolumesResponse struct {
	// List of volumes
	Volumes []ScalewayInstanceV1Volume `pulumi:"volumes"`
}

type ScalewayInstanceV1ListVolumesResponseOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1ListVolumesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalewayInstanceV1ListVolumesResponse)(nil)).Elem()
}

func (o ScalewayInstanceV1ListVolumesResponseOutput) ToScalewayInstanceV1ListVolumesResponseOutput() ScalewayInstanceV1ListVolumesResponseOutput {
	return o
}

func (o ScalewayInstanceV1ListVolumesResponseOutput) ToScalewayInstanceV1ListVolumesResponseOutputWithContext(ctx context.Context) ScalewayInstanceV1ListVolumesResponseOutput {
	return o
}

// List of volumes
func (o ScalewayInstanceV1ListVolumesResponseOutput) Volumes() ScalewayInstanceV1VolumeArrayOutput {
	return o.ApplyT(func(v ScalewayInstanceV1ListVolumesResponse) []ScalewayInstanceV1Volume { return v.Volumes }).(ScalewayInstanceV1VolumeArrayOutput)
}

type ScalewayInstanceV1ListVolumesTypesResponse struct {
	// Map of volume types
	Volumes map[string]ScalewayInstanceV1VolumeType `pulumi:"volumes"`
}

type ScalewayInstanceV1ListVolumesTypesResponseOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1ListVolumesTypesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalewayInstanceV1ListVolumesTypesResponse)(nil)).Elem()
}

func (o ScalewayInstanceV1ListVolumesTypesResponseOutput) ToScalewayInstanceV1ListVolumesTypesResponseOutput() ScalewayInstanceV1ListVolumesTypesResponseOutput {
	return o
}

func (o ScalewayInstanceV1ListVolumesTypesResponseOutput) ToScalewayInstanceV1ListVolumesTypesResponseOutputWithContext(ctx context.Context) ScalewayInstanceV1ListVolumesTypesResponseOutput {
	return o
}

// Map of volume types
func (o ScalewayInstanceV1ListVolumesTypesResponseOutput) Volumes() ScalewayInstanceV1VolumeTypeMapOutput {
	return o.ApplyT(func(v ScalewayInstanceV1ListVolumesTypesResponse) map[string]ScalewayInstanceV1VolumeType {
		return v.Volumes
	}).(ScalewayInstanceV1VolumeTypeMapOutput)
}

type ScalewayInstanceV1Volume struct {
	// The volume creation date (RFC 3339 format)
	Creation_date *string `pulumi:"creation_date"`
	// Show the volume NBD export URI
	Export_uri *string `pulumi:"export_uri"`
	Id         *string `pulumi:"id"`
	// The volume modification date (RFC 3339 format)
	Modification_date *string `pulumi:"modification_date"`
	// The volume name
	Name string `pulumi:"name"`
	// The volume organization ID
	Organization *string `pulumi:"organization"`
	// The volume project ID
	Project string `pulumi:"project"`
	// The server attached to the volume
	Server *ScalewayInstanceV1VolumeServerProperties `pulumi:"server"`
	// The volume disk size (in bytes)
	Size  *float64                       `pulumi:"size"`
	State *ScalewayInstanceV1VolumeState `pulumi:"state"`
	// The volume tags
	Tags        []string                            `pulumi:"tags"`
	Volume_type *ScalewayInstanceV1VolumeVolumeType `pulumi:"volume_type"`
	// The zone in which is the volume
	Zone *string `pulumi:"zone"`
}

// Defaults sets the appropriate defaults for ScalewayInstanceV1Volume
func (val *ScalewayInstanceV1Volume) Defaults() *ScalewayInstanceV1Volume {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.State == nil {
		state_ := ScalewayInstanceV1VolumeState("available")
		tmp.State = &state_
	}
	if tmp.Volume_type == nil {
		volume_type_ := ScalewayInstanceV1VolumeVolumeType("l_ssd")
		tmp.Volume_type = &volume_type_
	}
	return &tmp
}

type ScalewayInstanceV1VolumeOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1VolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalewayInstanceV1Volume)(nil)).Elem()
}

func (o ScalewayInstanceV1VolumeOutput) ToScalewayInstanceV1VolumeOutput() ScalewayInstanceV1VolumeOutput {
	return o
}

func (o ScalewayInstanceV1VolumeOutput) ToScalewayInstanceV1VolumeOutputWithContext(ctx context.Context) ScalewayInstanceV1VolumeOutput {
	return o
}

// The volume creation date (RFC 3339 format)
func (o ScalewayInstanceV1VolumeOutput) Creation_date() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Volume) *string { return v.Creation_date }).(pulumi.StringPtrOutput)
}

// Show the volume NBD export URI
func (o ScalewayInstanceV1VolumeOutput) Export_uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Volume) *string { return v.Export_uri }).(pulumi.StringPtrOutput)
}

func (o ScalewayInstanceV1VolumeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Volume) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The volume modification date (RFC 3339 format)
func (o ScalewayInstanceV1VolumeOutput) Modification_date() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Volume) *string { return v.Modification_date }).(pulumi.StringPtrOutput)
}

// The volume name
func (o ScalewayInstanceV1VolumeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Volume) string { return v.Name }).(pulumi.StringOutput)
}

// The volume organization ID
func (o ScalewayInstanceV1VolumeOutput) Organization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Volume) *string { return v.Organization }).(pulumi.StringPtrOutput)
}

// The volume project ID
func (o ScalewayInstanceV1VolumeOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Volume) string { return v.Project }).(pulumi.StringOutput)
}

// The server attached to the volume
func (o ScalewayInstanceV1VolumeOutput) Server() ScalewayInstanceV1VolumeServerPropertiesPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Volume) *ScalewayInstanceV1VolumeServerProperties { return v.Server }).(ScalewayInstanceV1VolumeServerPropertiesPtrOutput)
}

// The volume disk size (in bytes)
func (o ScalewayInstanceV1VolumeOutput) Size() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Volume) *float64 { return v.Size }).(pulumi.Float64PtrOutput)
}

func (o ScalewayInstanceV1VolumeOutput) State() ScalewayInstanceV1VolumeStatePtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Volume) *ScalewayInstanceV1VolumeState { return v.State }).(ScalewayInstanceV1VolumeStatePtrOutput)
}

// The volume tags
func (o ScalewayInstanceV1VolumeOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Volume) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o ScalewayInstanceV1VolumeOutput) Volume_type() ScalewayInstanceV1VolumeVolumeTypePtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Volume) *ScalewayInstanceV1VolumeVolumeType { return v.Volume_type }).(ScalewayInstanceV1VolumeVolumeTypePtrOutput)
}

// The zone in which is the volume
func (o ScalewayInstanceV1VolumeOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1Volume) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

type ScalewayInstanceV1VolumePtrOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1VolumePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalewayInstanceV1Volume)(nil)).Elem()
}

func (o ScalewayInstanceV1VolumePtrOutput) ToScalewayInstanceV1VolumePtrOutput() ScalewayInstanceV1VolumePtrOutput {
	return o
}

func (o ScalewayInstanceV1VolumePtrOutput) ToScalewayInstanceV1VolumePtrOutputWithContext(ctx context.Context) ScalewayInstanceV1VolumePtrOutput {
	return o
}

func (o ScalewayInstanceV1VolumePtrOutput) Elem() ScalewayInstanceV1VolumeOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Volume) ScalewayInstanceV1Volume {
		if v != nil {
			return *v
		}
		var ret ScalewayInstanceV1Volume
		return ret
	}).(ScalewayInstanceV1VolumeOutput)
}

// The volume creation date (RFC 3339 format)
func (o ScalewayInstanceV1VolumePtrOutput) Creation_date() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Volume) *string {
		if v == nil {
			return nil
		}
		return v.Creation_date
	}).(pulumi.StringPtrOutput)
}

// Show the volume NBD export URI
func (o ScalewayInstanceV1VolumePtrOutput) Export_uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Volume) *string {
		if v == nil {
			return nil
		}
		return v.Export_uri
	}).(pulumi.StringPtrOutput)
}

func (o ScalewayInstanceV1VolumePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Volume) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The volume modification date (RFC 3339 format)
func (o ScalewayInstanceV1VolumePtrOutput) Modification_date() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Volume) *string {
		if v == nil {
			return nil
		}
		return v.Modification_date
	}).(pulumi.StringPtrOutput)
}

// The volume name
func (o ScalewayInstanceV1VolumePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Volume) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The volume organization ID
func (o ScalewayInstanceV1VolumePtrOutput) Organization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Volume) *string {
		if v == nil {
			return nil
		}
		return v.Organization
	}).(pulumi.StringPtrOutput)
}

// The volume project ID
func (o ScalewayInstanceV1VolumePtrOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Volume) *string {
		if v == nil {
			return nil
		}
		return &v.Project
	}).(pulumi.StringPtrOutput)
}

// The server attached to the volume
func (o ScalewayInstanceV1VolumePtrOutput) Server() ScalewayInstanceV1VolumeServerPropertiesPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Volume) *ScalewayInstanceV1VolumeServerProperties {
		if v == nil {
			return nil
		}
		return v.Server
	}).(ScalewayInstanceV1VolumeServerPropertiesPtrOutput)
}

// The volume disk size (in bytes)
func (o ScalewayInstanceV1VolumePtrOutput) Size() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Volume) *float64 {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.Float64PtrOutput)
}

func (o ScalewayInstanceV1VolumePtrOutput) State() ScalewayInstanceV1VolumeStatePtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Volume) *ScalewayInstanceV1VolumeState {
		if v == nil {
			return nil
		}
		return v.State
	}).(ScalewayInstanceV1VolumeStatePtrOutput)
}

// The volume tags
func (o ScalewayInstanceV1VolumePtrOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Volume) []string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringArrayOutput)
}

func (o ScalewayInstanceV1VolumePtrOutput) Volume_type() ScalewayInstanceV1VolumeVolumeTypePtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Volume) *ScalewayInstanceV1VolumeVolumeType {
		if v == nil {
			return nil
		}
		return v.Volume_type
	}).(ScalewayInstanceV1VolumeVolumeTypePtrOutput)
}

// The zone in which is the volume
func (o ScalewayInstanceV1VolumePtrOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1Volume) *string {
		if v == nil {
			return nil
		}
		return v.Zone
	}).(pulumi.StringPtrOutput)
}

type ScalewayInstanceV1VolumeArrayOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1VolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScalewayInstanceV1Volume)(nil)).Elem()
}

func (o ScalewayInstanceV1VolumeArrayOutput) ToScalewayInstanceV1VolumeArrayOutput() ScalewayInstanceV1VolumeArrayOutput {
	return o
}

func (o ScalewayInstanceV1VolumeArrayOutput) ToScalewayInstanceV1VolumeArrayOutputWithContext(ctx context.Context) ScalewayInstanceV1VolumeArrayOutput {
	return o
}

func (o ScalewayInstanceV1VolumeArrayOutput) Index(i pulumi.IntInput) ScalewayInstanceV1VolumeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScalewayInstanceV1Volume {
		return vs[0].([]ScalewayInstanceV1Volume)[vs[1].(int)]
	}).(ScalewayInstanceV1VolumeOutput)
}

// The server attached to the volume
type ScalewayInstanceV1VolumeServerProperties struct {
	Id   *string `pulumi:"id"`
	Name *string `pulumi:"name"`
}

// The server attached to the volume
type ScalewayInstanceV1VolumeServerPropertiesOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1VolumeServerPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalewayInstanceV1VolumeServerProperties)(nil)).Elem()
}

func (o ScalewayInstanceV1VolumeServerPropertiesOutput) ToScalewayInstanceV1VolumeServerPropertiesOutput() ScalewayInstanceV1VolumeServerPropertiesOutput {
	return o
}

func (o ScalewayInstanceV1VolumeServerPropertiesOutput) ToScalewayInstanceV1VolumeServerPropertiesOutputWithContext(ctx context.Context) ScalewayInstanceV1VolumeServerPropertiesOutput {
	return o
}

func (o ScalewayInstanceV1VolumeServerPropertiesOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1VolumeServerProperties) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o ScalewayInstanceV1VolumeServerPropertiesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1VolumeServerProperties) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ScalewayInstanceV1VolumeServerPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1VolumeServerPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalewayInstanceV1VolumeServerProperties)(nil)).Elem()
}

func (o ScalewayInstanceV1VolumeServerPropertiesPtrOutput) ToScalewayInstanceV1VolumeServerPropertiesPtrOutput() ScalewayInstanceV1VolumeServerPropertiesPtrOutput {
	return o
}

func (o ScalewayInstanceV1VolumeServerPropertiesPtrOutput) ToScalewayInstanceV1VolumeServerPropertiesPtrOutputWithContext(ctx context.Context) ScalewayInstanceV1VolumeServerPropertiesPtrOutput {
	return o
}

func (o ScalewayInstanceV1VolumeServerPropertiesPtrOutput) Elem() ScalewayInstanceV1VolumeServerPropertiesOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1VolumeServerProperties) ScalewayInstanceV1VolumeServerProperties {
		if v != nil {
			return *v
		}
		var ret ScalewayInstanceV1VolumeServerProperties
		return ret
	}).(ScalewayInstanceV1VolumeServerPropertiesOutput)
}

func (o ScalewayInstanceV1VolumeServerPropertiesPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1VolumeServerProperties) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

func (o ScalewayInstanceV1VolumeServerPropertiesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1VolumeServerProperties) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

type ScalewayInstanceV1VolumeType struct {
	Capabilities *ScalewayInstanceV1VolumeTypeCapabilities `pulumi:"capabilities"`
	Constraints  *ScalewayInstanceV1VolumeTypeConstraints  `pulumi:"constraints"`
	Display_name *string                                   `pulumi:"display_name"`
}

type ScalewayInstanceV1VolumeTypeOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1VolumeTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalewayInstanceV1VolumeType)(nil)).Elem()
}

func (o ScalewayInstanceV1VolumeTypeOutput) ToScalewayInstanceV1VolumeTypeOutput() ScalewayInstanceV1VolumeTypeOutput {
	return o
}

func (o ScalewayInstanceV1VolumeTypeOutput) ToScalewayInstanceV1VolumeTypeOutputWithContext(ctx context.Context) ScalewayInstanceV1VolumeTypeOutput {
	return o
}

func (o ScalewayInstanceV1VolumeTypeOutput) Capabilities() ScalewayInstanceV1VolumeTypeCapabilitiesPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1VolumeType) *ScalewayInstanceV1VolumeTypeCapabilities { return v.Capabilities }).(ScalewayInstanceV1VolumeTypeCapabilitiesPtrOutput)
}

func (o ScalewayInstanceV1VolumeTypeOutput) Constraints() ScalewayInstanceV1VolumeTypeConstraintsPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1VolumeType) *ScalewayInstanceV1VolumeTypeConstraints { return v.Constraints }).(ScalewayInstanceV1VolumeTypeConstraintsPtrOutput)
}

func (o ScalewayInstanceV1VolumeTypeOutput) Display_name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1VolumeType) *string { return v.Display_name }).(pulumi.StringPtrOutput)
}

type ScalewayInstanceV1VolumeTypeMapOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1VolumeTypeMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ScalewayInstanceV1VolumeType)(nil)).Elem()
}

func (o ScalewayInstanceV1VolumeTypeMapOutput) ToScalewayInstanceV1VolumeTypeMapOutput() ScalewayInstanceV1VolumeTypeMapOutput {
	return o
}

func (o ScalewayInstanceV1VolumeTypeMapOutput) ToScalewayInstanceV1VolumeTypeMapOutputWithContext(ctx context.Context) ScalewayInstanceV1VolumeTypeMapOutput {
	return o
}

func (o ScalewayInstanceV1VolumeTypeMapOutput) MapIndex(k pulumi.StringInput) ScalewayInstanceV1VolumeTypeOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ScalewayInstanceV1VolumeType {
		return vs[0].(map[string]ScalewayInstanceV1VolumeType)[vs[1].(string)]
	}).(ScalewayInstanceV1VolumeTypeOutput)
}

type ScalewayInstanceV1VolumeTypeCapabilities struct {
	Snapshot *bool `pulumi:"snapshot"`
}

type ScalewayInstanceV1VolumeTypeCapabilitiesOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1VolumeTypeCapabilitiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalewayInstanceV1VolumeTypeCapabilities)(nil)).Elem()
}

func (o ScalewayInstanceV1VolumeTypeCapabilitiesOutput) ToScalewayInstanceV1VolumeTypeCapabilitiesOutput() ScalewayInstanceV1VolumeTypeCapabilitiesOutput {
	return o
}

func (o ScalewayInstanceV1VolumeTypeCapabilitiesOutput) ToScalewayInstanceV1VolumeTypeCapabilitiesOutputWithContext(ctx context.Context) ScalewayInstanceV1VolumeTypeCapabilitiesOutput {
	return o
}

func (o ScalewayInstanceV1VolumeTypeCapabilitiesOutput) Snapshot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1VolumeTypeCapabilities) *bool { return v.Snapshot }).(pulumi.BoolPtrOutput)
}

type ScalewayInstanceV1VolumeTypeCapabilitiesPtrOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1VolumeTypeCapabilitiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalewayInstanceV1VolumeTypeCapabilities)(nil)).Elem()
}

func (o ScalewayInstanceV1VolumeTypeCapabilitiesPtrOutput) ToScalewayInstanceV1VolumeTypeCapabilitiesPtrOutput() ScalewayInstanceV1VolumeTypeCapabilitiesPtrOutput {
	return o
}

func (o ScalewayInstanceV1VolumeTypeCapabilitiesPtrOutput) ToScalewayInstanceV1VolumeTypeCapabilitiesPtrOutputWithContext(ctx context.Context) ScalewayInstanceV1VolumeTypeCapabilitiesPtrOutput {
	return o
}

func (o ScalewayInstanceV1VolumeTypeCapabilitiesPtrOutput) Elem() ScalewayInstanceV1VolumeTypeCapabilitiesOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1VolumeTypeCapabilities) ScalewayInstanceV1VolumeTypeCapabilities {
		if v != nil {
			return *v
		}
		var ret ScalewayInstanceV1VolumeTypeCapabilities
		return ret
	}).(ScalewayInstanceV1VolumeTypeCapabilitiesOutput)
}

func (o ScalewayInstanceV1VolumeTypeCapabilitiesPtrOutput) Snapshot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1VolumeTypeCapabilities) *bool {
		if v == nil {
			return nil
		}
		return v.Snapshot
	}).(pulumi.BoolPtrOutput)
}

type ScalewayInstanceV1VolumeTypeConstraints struct {
	// (in bytes)
	Max *float64 `pulumi:"max"`
	// (in bytes)
	Min *float64 `pulumi:"min"`
}

type ScalewayInstanceV1VolumeTypeConstraintsOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1VolumeTypeConstraintsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalewayInstanceV1VolumeTypeConstraints)(nil)).Elem()
}

func (o ScalewayInstanceV1VolumeTypeConstraintsOutput) ToScalewayInstanceV1VolumeTypeConstraintsOutput() ScalewayInstanceV1VolumeTypeConstraintsOutput {
	return o
}

func (o ScalewayInstanceV1VolumeTypeConstraintsOutput) ToScalewayInstanceV1VolumeTypeConstraintsOutputWithContext(ctx context.Context) ScalewayInstanceV1VolumeTypeConstraintsOutput {
	return o
}

// (in bytes)
func (o ScalewayInstanceV1VolumeTypeConstraintsOutput) Max() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1VolumeTypeConstraints) *float64 { return v.Max }).(pulumi.Float64PtrOutput)
}

// (in bytes)
func (o ScalewayInstanceV1VolumeTypeConstraintsOutput) Min() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ScalewayInstanceV1VolumeTypeConstraints) *float64 { return v.Min }).(pulumi.Float64PtrOutput)
}

type ScalewayInstanceV1VolumeTypeConstraintsPtrOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1VolumeTypeConstraintsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalewayInstanceV1VolumeTypeConstraints)(nil)).Elem()
}

func (o ScalewayInstanceV1VolumeTypeConstraintsPtrOutput) ToScalewayInstanceV1VolumeTypeConstraintsPtrOutput() ScalewayInstanceV1VolumeTypeConstraintsPtrOutput {
	return o
}

func (o ScalewayInstanceV1VolumeTypeConstraintsPtrOutput) ToScalewayInstanceV1VolumeTypeConstraintsPtrOutputWithContext(ctx context.Context) ScalewayInstanceV1VolumeTypeConstraintsPtrOutput {
	return o
}

func (o ScalewayInstanceV1VolumeTypeConstraintsPtrOutput) Elem() ScalewayInstanceV1VolumeTypeConstraintsOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1VolumeTypeConstraints) ScalewayInstanceV1VolumeTypeConstraints {
		if v != nil {
			return *v
		}
		var ret ScalewayInstanceV1VolumeTypeConstraints
		return ret
	}).(ScalewayInstanceV1VolumeTypeConstraintsOutput)
}

// (in bytes)
func (o ScalewayInstanceV1VolumeTypeConstraintsPtrOutput) Max() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1VolumeTypeConstraints) *float64 {
		if v == nil {
			return nil
		}
		return v.Max
	}).(pulumi.Float64PtrOutput)
}

// (in bytes)
func (o ScalewayInstanceV1VolumeTypeConstraintsPtrOutput) Min() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1VolumeTypeConstraints) *float64 {
		if v == nil {
			return nil
		}
		return v.Min
	}).(pulumi.Float64PtrOutput)
}

// The server attached to the volume
type ServerProperties struct {
	Id   *string `pulumi:"id"`
	Name *string `pulumi:"name"`
}

// The server attached to the volume
type ServerPropertiesOutput struct{ *pulumi.OutputState }

func (ServerPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerProperties)(nil)).Elem()
}

func (o ServerPropertiesOutput) ToServerPropertiesOutput() ServerPropertiesOutput {
	return o
}

func (o ServerPropertiesOutput) ToServerPropertiesOutputWithContext(ctx context.Context) ServerPropertiesOutput {
	return o
}

func (o ServerPropertiesOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerProperties) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o ServerPropertiesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerProperties) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ServerPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ServerPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerProperties)(nil)).Elem()
}

func (o ServerPropertiesPtrOutput) ToServerPropertiesPtrOutput() ServerPropertiesPtrOutput {
	return o
}

func (o ServerPropertiesPtrOutput) ToServerPropertiesPtrOutputWithContext(ctx context.Context) ServerPropertiesPtrOutput {
	return o
}

func (o ServerPropertiesPtrOutput) Elem() ServerPropertiesOutput {
	return o.ApplyT(func(v *ServerProperties) ServerProperties {
		if v != nil {
			return *v
		}
		var ret ServerProperties
		return ret
	}).(ServerPropertiesOutput)
}

func (o ServerPropertiesPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerProperties) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

func (o ServerPropertiesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerProperties) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ScalewayInstanceV1GetVolumeResponseOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1ListVolumesResponseOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1ListVolumesTypesResponseOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1VolumeOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1VolumePtrOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1VolumeArrayOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1VolumeServerPropertiesOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1VolumeServerPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1VolumeTypeOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1VolumeTypeMapOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1VolumeTypeCapabilitiesOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1VolumeTypeCapabilitiesPtrOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1VolumeTypeConstraintsOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1VolumeTypeConstraintsPtrOutput{})
	pulumi.RegisterOutputType(ServerPropertiesOutput{})
	pulumi.RegisterOutputType(ServerPropertiesPtrOutput{})
}
