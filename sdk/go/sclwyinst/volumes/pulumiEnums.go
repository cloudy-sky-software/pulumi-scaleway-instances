// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package volumes

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ScalewayInstanceV1VolumeState string

const (
	ScalewayInstanceV1VolumeStateAvailable    = ScalewayInstanceV1VolumeState("available")
	ScalewayInstanceV1VolumeStateSnapshotting = ScalewayInstanceV1VolumeState("snapshotting")
	ScalewayInstanceV1VolumeStateError        = ScalewayInstanceV1VolumeState("error")
	ScalewayInstanceV1VolumeStateFetching     = ScalewayInstanceV1VolumeState("fetching")
	ScalewayInstanceV1VolumeStateResizing     = ScalewayInstanceV1VolumeState("resizing")
	ScalewayInstanceV1VolumeStateSaving       = ScalewayInstanceV1VolumeState("saving")
	ScalewayInstanceV1VolumeStateHotsyncing   = ScalewayInstanceV1VolumeState("hotsyncing")
)

type ScalewayInstanceV1VolumeStateOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1VolumeStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalewayInstanceV1VolumeState)(nil)).Elem()
}

func (o ScalewayInstanceV1VolumeStateOutput) ToScalewayInstanceV1VolumeStateOutput() ScalewayInstanceV1VolumeStateOutput {
	return o
}

func (o ScalewayInstanceV1VolumeStateOutput) ToScalewayInstanceV1VolumeStateOutputWithContext(ctx context.Context) ScalewayInstanceV1VolumeStateOutput {
	return o
}

func (o ScalewayInstanceV1VolumeStateOutput) ToScalewayInstanceV1VolumeStatePtrOutput() ScalewayInstanceV1VolumeStatePtrOutput {
	return o.ToScalewayInstanceV1VolumeStatePtrOutputWithContext(context.Background())
}

func (o ScalewayInstanceV1VolumeStateOutput) ToScalewayInstanceV1VolumeStatePtrOutputWithContext(ctx context.Context) ScalewayInstanceV1VolumeStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScalewayInstanceV1VolumeState) *ScalewayInstanceV1VolumeState {
		return &v
	}).(ScalewayInstanceV1VolumeStatePtrOutput)
}

func (o ScalewayInstanceV1VolumeStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ScalewayInstanceV1VolumeStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ScalewayInstanceV1VolumeState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ScalewayInstanceV1VolumeStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ScalewayInstanceV1VolumeStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ScalewayInstanceV1VolumeState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ScalewayInstanceV1VolumeStatePtrOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1VolumeStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalewayInstanceV1VolumeState)(nil)).Elem()
}

func (o ScalewayInstanceV1VolumeStatePtrOutput) ToScalewayInstanceV1VolumeStatePtrOutput() ScalewayInstanceV1VolumeStatePtrOutput {
	return o
}

func (o ScalewayInstanceV1VolumeStatePtrOutput) ToScalewayInstanceV1VolumeStatePtrOutputWithContext(ctx context.Context) ScalewayInstanceV1VolumeStatePtrOutput {
	return o
}

func (o ScalewayInstanceV1VolumeStatePtrOutput) Elem() ScalewayInstanceV1VolumeStateOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1VolumeState) ScalewayInstanceV1VolumeState {
		if v != nil {
			return *v
		}
		var ret ScalewayInstanceV1VolumeState
		return ret
	}).(ScalewayInstanceV1VolumeStateOutput)
}

func (o ScalewayInstanceV1VolumeStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ScalewayInstanceV1VolumeStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ScalewayInstanceV1VolumeState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ScalewayInstanceV1VolumeVolumeType string

const (
	ScalewayInstanceV1VolumeVolumeTypeLSsd    = ScalewayInstanceV1VolumeVolumeType("l_ssd")
	ScalewayInstanceV1VolumeVolumeTypeBSsd    = ScalewayInstanceV1VolumeVolumeType("b_ssd")
	ScalewayInstanceV1VolumeVolumeTypeUnified = ScalewayInstanceV1VolumeVolumeType("unified")
)

type ScalewayInstanceV1VolumeVolumeTypeOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1VolumeVolumeTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalewayInstanceV1VolumeVolumeType)(nil)).Elem()
}

func (o ScalewayInstanceV1VolumeVolumeTypeOutput) ToScalewayInstanceV1VolumeVolumeTypeOutput() ScalewayInstanceV1VolumeVolumeTypeOutput {
	return o
}

func (o ScalewayInstanceV1VolumeVolumeTypeOutput) ToScalewayInstanceV1VolumeVolumeTypeOutputWithContext(ctx context.Context) ScalewayInstanceV1VolumeVolumeTypeOutput {
	return o
}

func (o ScalewayInstanceV1VolumeVolumeTypeOutput) ToScalewayInstanceV1VolumeVolumeTypePtrOutput() ScalewayInstanceV1VolumeVolumeTypePtrOutput {
	return o.ToScalewayInstanceV1VolumeVolumeTypePtrOutputWithContext(context.Background())
}

func (o ScalewayInstanceV1VolumeVolumeTypeOutput) ToScalewayInstanceV1VolumeVolumeTypePtrOutputWithContext(ctx context.Context) ScalewayInstanceV1VolumeVolumeTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScalewayInstanceV1VolumeVolumeType) *ScalewayInstanceV1VolumeVolumeType {
		return &v
	}).(ScalewayInstanceV1VolumeVolumeTypePtrOutput)
}

func (o ScalewayInstanceV1VolumeVolumeTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ScalewayInstanceV1VolumeVolumeTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ScalewayInstanceV1VolumeVolumeType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ScalewayInstanceV1VolumeVolumeTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ScalewayInstanceV1VolumeVolumeTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ScalewayInstanceV1VolumeVolumeType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ScalewayInstanceV1VolumeVolumeTypePtrOutput struct{ *pulumi.OutputState }

func (ScalewayInstanceV1VolumeVolumeTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalewayInstanceV1VolumeVolumeType)(nil)).Elem()
}

func (o ScalewayInstanceV1VolumeVolumeTypePtrOutput) ToScalewayInstanceV1VolumeVolumeTypePtrOutput() ScalewayInstanceV1VolumeVolumeTypePtrOutput {
	return o
}

func (o ScalewayInstanceV1VolumeVolumeTypePtrOutput) ToScalewayInstanceV1VolumeVolumeTypePtrOutputWithContext(ctx context.Context) ScalewayInstanceV1VolumeVolumeTypePtrOutput {
	return o
}

func (o ScalewayInstanceV1VolumeVolumeTypePtrOutput) Elem() ScalewayInstanceV1VolumeVolumeTypeOutput {
	return o.ApplyT(func(v *ScalewayInstanceV1VolumeVolumeType) ScalewayInstanceV1VolumeVolumeType {
		if v != nil {
			return *v
		}
		var ret ScalewayInstanceV1VolumeVolumeType
		return ret
	}).(ScalewayInstanceV1VolumeVolumeTypeOutput)
}

func (o ScalewayInstanceV1VolumeVolumeTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ScalewayInstanceV1VolumeVolumeTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ScalewayInstanceV1VolumeVolumeType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type VolumeStateEnum string

const (
	VolumeStateEnumAvailable    = VolumeStateEnum("available")
	VolumeStateEnumSnapshotting = VolumeStateEnum("snapshotting")
	VolumeStateEnumError        = VolumeStateEnum("error")
	VolumeStateEnumFetching     = VolumeStateEnum("fetching")
	VolumeStateEnumResizing     = VolumeStateEnum("resizing")
	VolumeStateEnumSaving       = VolumeStateEnum("saving")
	VolumeStateEnumHotsyncing   = VolumeStateEnum("hotsyncing")
)

type VolumeStateEnumOutput struct{ *pulumi.OutputState }

func (VolumeStateEnumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeStateEnum)(nil)).Elem()
}

func (o VolumeStateEnumOutput) ToVolumeStateEnumOutput() VolumeStateEnumOutput {
	return o
}

func (o VolumeStateEnumOutput) ToVolumeStateEnumOutputWithContext(ctx context.Context) VolumeStateEnumOutput {
	return o
}

func (o VolumeStateEnumOutput) ToVolumeStateEnumPtrOutput() VolumeStateEnumPtrOutput {
	return o.ToVolumeStateEnumPtrOutputWithContext(context.Background())
}

func (o VolumeStateEnumOutput) ToVolumeStateEnumPtrOutputWithContext(ctx context.Context) VolumeStateEnumPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VolumeStateEnum) *VolumeStateEnum {
		return &v
	}).(VolumeStateEnumPtrOutput)
}

func (o VolumeStateEnumOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o VolumeStateEnumOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e VolumeStateEnum) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o VolumeStateEnumOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o VolumeStateEnumOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e VolumeStateEnum) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type VolumeStateEnumPtrOutput struct{ *pulumi.OutputState }

func (VolumeStateEnumPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VolumeStateEnum)(nil)).Elem()
}

func (o VolumeStateEnumPtrOutput) ToVolumeStateEnumPtrOutput() VolumeStateEnumPtrOutput {
	return o
}

func (o VolumeStateEnumPtrOutput) ToVolumeStateEnumPtrOutputWithContext(ctx context.Context) VolumeStateEnumPtrOutput {
	return o
}

func (o VolumeStateEnumPtrOutput) Elem() VolumeStateEnumOutput {
	return o.ApplyT(func(v *VolumeStateEnum) VolumeStateEnum {
		if v != nil {
			return *v
		}
		var ret VolumeStateEnum
		return ret
	}).(VolumeStateEnumOutput)
}

func (o VolumeStateEnumPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o VolumeStateEnumPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *VolumeStateEnum) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type VolumeType string

const (
	VolumeTypeLSsd    = VolumeType("l_ssd")
	VolumeTypeBSsd    = VolumeType("b_ssd")
	VolumeTypeUnified = VolumeType("unified")
)

func (VolumeType) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeType)(nil)).Elem()
}

func (e VolumeType) ToVolumeTypeOutput() VolumeTypeOutput {
	return pulumi.ToOutput(e).(VolumeTypeOutput)
}

func (e VolumeType) ToVolumeTypeOutputWithContext(ctx context.Context) VolumeTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(VolumeTypeOutput)
}

func (e VolumeType) ToVolumeTypePtrOutput() VolumeTypePtrOutput {
	return e.ToVolumeTypePtrOutputWithContext(context.Background())
}

func (e VolumeType) ToVolumeTypePtrOutputWithContext(ctx context.Context) VolumeTypePtrOutput {
	return VolumeType(e).ToVolumeTypeOutputWithContext(ctx).ToVolumeTypePtrOutputWithContext(ctx)
}

func (e VolumeType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e VolumeType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e VolumeType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e VolumeType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type VolumeTypeOutput struct{ *pulumi.OutputState }

func (VolumeTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeType)(nil)).Elem()
}

func (o VolumeTypeOutput) ToVolumeTypeOutput() VolumeTypeOutput {
	return o
}

func (o VolumeTypeOutput) ToVolumeTypeOutputWithContext(ctx context.Context) VolumeTypeOutput {
	return o
}

func (o VolumeTypeOutput) ToVolumeTypePtrOutput() VolumeTypePtrOutput {
	return o.ToVolumeTypePtrOutputWithContext(context.Background())
}

func (o VolumeTypeOutput) ToVolumeTypePtrOutputWithContext(ctx context.Context) VolumeTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VolumeType) *VolumeType {
		return &v
	}).(VolumeTypePtrOutput)
}

func (o VolumeTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o VolumeTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e VolumeType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o VolumeTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o VolumeTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e VolumeType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type VolumeTypePtrOutput struct{ *pulumi.OutputState }

func (VolumeTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VolumeType)(nil)).Elem()
}

func (o VolumeTypePtrOutput) ToVolumeTypePtrOutput() VolumeTypePtrOutput {
	return o
}

func (o VolumeTypePtrOutput) ToVolumeTypePtrOutputWithContext(ctx context.Context) VolumeTypePtrOutput {
	return o
}

func (o VolumeTypePtrOutput) Elem() VolumeTypeOutput {
	return o.ApplyT(func(v *VolumeType) VolumeType {
		if v != nil {
			return *v
		}
		var ret VolumeType
		return ret
	}).(VolumeTypeOutput)
}

func (o VolumeTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o VolumeTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *VolumeType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// VolumeTypeInput is an input type that accepts values of the VolumeType enum
// A concrete instance of `VolumeTypeInput` can be one of the following:
//
//	VolumeTypeLSsd
//	VolumeTypeBSsd
//	VolumeTypeUnified
type VolumeTypeInput interface {
	pulumi.Input

	ToVolumeTypeOutput() VolumeTypeOutput
	ToVolumeTypeOutputWithContext(context.Context) VolumeTypeOutput
}

var volumeTypePtrType = reflect.TypeOf((**VolumeType)(nil)).Elem()

type VolumeTypePtrInput interface {
	pulumi.Input

	ToVolumeTypePtrOutput() VolumeTypePtrOutput
	ToVolumeTypePtrOutputWithContext(context.Context) VolumeTypePtrOutput
}

type volumeTypePtr string

func VolumeTypePtr(v string) VolumeTypePtrInput {
	return (*volumeTypePtr)(&v)
}

func (*volumeTypePtr) ElementType() reflect.Type {
	return volumeTypePtrType
}

func (in *volumeTypePtr) ToVolumeTypePtrOutput() VolumeTypePtrOutput {
	return pulumi.ToOutput(in).(VolumeTypePtrOutput)
}

func (in *volumeTypePtr) ToVolumeTypePtrOutputWithContext(ctx context.Context) VolumeTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(VolumeTypePtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VolumeTypeInput)(nil)).Elem(), VolumeType("l_ssd"))
	pulumi.RegisterInputType(reflect.TypeOf((*VolumeTypePtrInput)(nil)).Elem(), VolumeType("l_ssd"))
	pulumi.RegisterOutputType(ScalewayInstanceV1VolumeStateOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1VolumeStatePtrOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1VolumeVolumeTypeOutput{})
	pulumi.RegisterOutputType(ScalewayInstanceV1VolumeVolumeTypePtrOutput{})
	pulumi.RegisterOutputType(VolumeStateEnumOutput{})
	pulumi.RegisterOutputType(VolumeStateEnumPtrOutput{})
	pulumi.RegisterOutputType(VolumeTypeOutput{})
	pulumi.RegisterOutputType(VolumeTypePtrOutput{})
}
