// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package user_data

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-scaleway-instances/sdk/go/sclwyinst/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetServerUserData(ctx *pulumi.Context, args *GetServerUserDataArgs, opts ...pulumi.InvokeOption) (*GetServerUserDataResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetServerUserDataResult
	err := ctx.Invoke("scaleway-instances:user_data:getServerUserData", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type GetServerUserDataArgs struct {
	// Key of the user data to get
	Key string `pulumi:"key"`
	// UUID of the server
	ServerId string `pulumi:"serverId"`
	// The zone you want to target
	Zone string `pulumi:"zone"`
}

type GetServerUserDataResult struct {
	Content     *string `pulumi:"content"`
	ContentType *string `pulumi:"contentType"`
	Name        *string `pulumi:"name"`
}

func GetServerUserDataOutput(ctx *pulumi.Context, args GetServerUserDataOutputArgs, opts ...pulumi.InvokeOption) GetServerUserDataResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetServerUserDataResultOutput, error) {
			args := v.(GetServerUserDataArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetServerUserDataResult
			secret, err := ctx.InvokePackageRaw("scaleway-instances:user_data:getServerUserData", args, &rv, "", opts...)
			if err != nil {
				return GetServerUserDataResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetServerUserDataResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetServerUserDataResultOutput), nil
			}
			return output, nil
		}).(GetServerUserDataResultOutput)
}

type GetServerUserDataOutputArgs struct {
	// Key of the user data to get
	Key pulumi.StringInput `pulumi:"key"`
	// UUID of the server
	ServerId pulumi.StringInput `pulumi:"serverId"`
	// The zone you want to target
	Zone pulumi.StringInput `pulumi:"zone"`
}

func (GetServerUserDataOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerUserDataArgs)(nil)).Elem()
}

type GetServerUserDataResultOutput struct{ *pulumi.OutputState }

func (GetServerUserDataResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerUserDataResult)(nil)).Elem()
}

func (o GetServerUserDataResultOutput) ToGetServerUserDataResultOutput() GetServerUserDataResultOutput {
	return o
}

func (o GetServerUserDataResultOutput) ToGetServerUserDataResultOutputWithContext(ctx context.Context) GetServerUserDataResultOutput {
	return o
}

func (o GetServerUserDataResultOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServerUserDataResult) *string { return v.Content }).(pulumi.StringPtrOutput)
}

func (o GetServerUserDataResultOutput) ContentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServerUserDataResult) *string { return v.ContentType }).(pulumi.StringPtrOutput)
}

func (o GetServerUserDataResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServerUserDataResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetServerUserDataResultOutput{})
}
