// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package private_nics

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type PrivateNIC struct {
	pulumi.CustomResourceState

	Private_network_id pulumi.StringPtrOutput `pulumi:"private_network_id"`
}

// NewPrivateNIC registers a new resource with the given unique name, arguments, and options.
func NewPrivateNIC(ctx *pulumi.Context,
	name string, args *PrivateNICArgs, opts ...pulumi.ResourceOption) (*PrivateNIC, error) {
	if args == nil {
		args = &PrivateNICArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource PrivateNIC
	err := ctx.RegisterResource("scaleway-instances:private_nics:PrivateNIC", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPrivateNIC gets an existing PrivateNIC resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPrivateNIC(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PrivateNICState, opts ...pulumi.ResourceOption) (*PrivateNIC, error) {
	var resource PrivateNIC
	err := ctx.ReadResource("scaleway-instances:private_nics:PrivateNIC", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PrivateNIC resources.
type privateNICState struct {
}

type PrivateNICState struct {
}

func (PrivateNICState) ElementType() reflect.Type {
	return reflect.TypeOf((*privateNICState)(nil)).Elem()
}

type privateNICArgs struct {
	Id                 *string `pulumi:"id"`
	Private_network_id *string `pulumi:"private_network_id"`
	// The zone you want to target
	Zone *string `pulumi:"zone"`
}

// The set of arguments for constructing a PrivateNIC resource.
type PrivateNICArgs struct {
	Id                 pulumi.StringPtrInput
	Private_network_id pulumi.StringPtrInput
	// The zone you want to target
	Zone pulumi.StringPtrInput
}

func (PrivateNICArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*privateNICArgs)(nil)).Elem()
}

type PrivateNICInput interface {
	pulumi.Input

	ToPrivateNICOutput() PrivateNICOutput
	ToPrivateNICOutputWithContext(ctx context.Context) PrivateNICOutput
}

func (*PrivateNIC) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateNIC)(nil)).Elem()
}

func (i *PrivateNIC) ToPrivateNICOutput() PrivateNICOutput {
	return i.ToPrivateNICOutputWithContext(context.Background())
}

func (i *PrivateNIC) ToPrivateNICOutputWithContext(ctx context.Context) PrivateNICOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateNICOutput)
}

type PrivateNICOutput struct{ *pulumi.OutputState }

func (PrivateNICOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateNIC)(nil)).Elem()
}

func (o PrivateNICOutput) ToPrivateNICOutput() PrivateNICOutput {
	return o
}

func (o PrivateNICOutput) ToPrivateNICOutputWithContext(ctx context.Context) PrivateNICOutput {
	return o
}

func (o PrivateNICOutput) Private_network_id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateNIC) pulumi.StringPtrOutput { return v.Private_network_id }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateNICInput)(nil)).Elem(), &PrivateNIC{})
	pulumi.RegisterOutputType(PrivateNICOutput{})
}
