// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.ScalewayInstances.Ips
{
    public static class GetIp
    {
        public static Task<Outputs.ScalewayInstanceV1GetIpResponse> InvokeAsync(GetIpArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<Outputs.ScalewayInstanceV1GetIpResponse>("scaleway-instances:ips:getIp", args ?? new GetIpArgs(), options.WithDefaults());

        public static Output<Outputs.ScalewayInstanceV1GetIpResponse> Invoke(GetIpInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<Outputs.ScalewayInstanceV1GetIpResponse>("scaleway-instances:ips:getIp", args ?? new GetIpInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetIpArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The IP ID or address to get
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        /// <summary>
        /// The zone you want to target
        /// </summary>
        [Input("zone", required: true)]
        public string Zone { get; set; } = null!;

        public GetIpArgs()
        {
        }
        public static new GetIpArgs Empty => new GetIpArgs();
    }

    public sealed class GetIpInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The IP ID or address to get
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        /// <summary>
        /// The zone you want to target
        /// </summary>
        [Input("zone", required: true)]
        public Input<string> Zone { get; set; } = null!;

        public GetIpInvokeArgs()
        {
        }
        public static new GetIpInvokeArgs Empty => new GetIpInvokeArgs();
    }
}
