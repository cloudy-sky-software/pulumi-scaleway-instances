// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.ScalewayInstances.Snapshots
{
    public static class ListSnapshots
    {
        public static Task<ListSnapshotsResult> InvokeAsync(ListSnapshotsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<ListSnapshotsResult>("scaleway-instances:snapshots:listSnapshots", args ?? new ListSnapshotsArgs(), options.WithDefaults());

        public static Output<ListSnapshotsResult> Invoke(ListSnapshotsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<ListSnapshotsResult>("scaleway-instances:snapshots:listSnapshots", args ?? new ListSnapshotsInvokeArgs(), options.WithDefaults());
    }


    public sealed class ListSnapshotsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The zone you want to target
        /// </summary>
        [Input("zone", required: true)]
        public string Zone { get; set; } = null!;

        public ListSnapshotsArgs()
        {
        }
        public static new ListSnapshotsArgs Empty => new ListSnapshotsArgs();
    }

    public sealed class ListSnapshotsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The zone you want to target
        /// </summary>
        [Input("zone", required: true)]
        public Input<string> Zone { get; set; } = null!;

        public ListSnapshotsInvokeArgs()
        {
        }
        public static new ListSnapshotsInvokeArgs Empty => new ListSnapshotsInvokeArgs();
    }


    [OutputType]
    public sealed class ListSnapshotsResult
    {
        public readonly Outputs.ScalewayInstanceV1ListSnapshotsResponse Items;

        [OutputConstructor]
        private ListSnapshotsResult(Outputs.ScalewayInstanceV1ListSnapshotsResponse items)
        {
            Items = items;
        }
    }
}
