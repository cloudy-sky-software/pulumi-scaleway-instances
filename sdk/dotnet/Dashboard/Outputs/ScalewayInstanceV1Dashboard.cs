// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.ScalewayInstances.Dashboard.Outputs
{

    [OutputType]
    public sealed class ScalewayInstanceV1Dashboard
    {
        public readonly double? ImagesCount;
        public readonly double? IpsCount;
        public readonly double? IpsUnused;
        public readonly double? PlacementGroupsCount;
        public readonly double? PrivateNicsCount;
        public readonly double? RunningServersCount;
        public readonly double? SecurityGroupsCount;
        public readonly ImmutableDictionary<string, double>? ServersByTypes;
        public readonly double? ServersCount;
        public readonly double? SnapshotsCount;
        public readonly double? VolumesBSsdCount;
        public readonly double? VolumesBSsdTotalSize;
        public readonly double? VolumesCount;
        public readonly double? VolumesLSsdCount;
        public readonly double? VolumesLSsdTotalSize;

        [OutputConstructor]
        private ScalewayInstanceV1Dashboard(
            double? imagesCount,

            double? ipsCount,

            double? ipsUnused,

            double? placementGroupsCount,

            double? privateNicsCount,

            double? runningServersCount,

            double? securityGroupsCount,

            ImmutableDictionary<string, double>? serversByTypes,

            double? serversCount,

            double? snapshotsCount,

            double? volumesBSsdCount,

            double? volumesBSsdTotalSize,

            double? volumesCount,

            double? volumesLSsdCount,

            double? volumesLSsdTotalSize)
        {
            ImagesCount = imagesCount;
            IpsCount = ipsCount;
            IpsUnused = ipsUnused;
            PlacementGroupsCount = placementGroupsCount;
            PrivateNicsCount = privateNicsCount;
            RunningServersCount = runningServersCount;
            SecurityGroupsCount = securityGroupsCount;
            ServersByTypes = serversByTypes;
            ServersCount = serversCount;
            SnapshotsCount = snapshotsCount;
            VolumesBSsdCount = volumesBSsdCount;
            VolumesBSsdTotalSize = volumesBSsdTotalSize;
            VolumesCount = volumesCount;
            VolumesLSsdCount = volumesLSsdCount;
            VolumesLSsdTotalSize = volumesLSsdTotalSize;
        }
    }
}
