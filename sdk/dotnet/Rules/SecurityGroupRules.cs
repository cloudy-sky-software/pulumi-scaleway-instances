// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.ScalewayInstances.Rules
{
    [ScalewayInstancesResourceType("scaleway-instances:rules:SecurityGroupRules")]
    public partial class SecurityGroupRules : global::Pulumi.CustomResource
    {
        /// <summary>
        /// List of rules to update in the security group
        /// </summary>
        [Output("rules")]
        public Output<ImmutableArray<Outputs.ScalewayInstanceV1SetSecurityGroupRulesRequestRule>> Rules { get; private set; } = null!;


        /// <summary>
        /// Create a SecurityGroupRules resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SecurityGroupRules(string name, SecurityGroupRulesArgs? args = null, CustomResourceOptions? options = null)
            : base("scaleway-instances:rules:SecurityGroupRules", name, args ?? new SecurityGroupRulesArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SecurityGroupRules(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("scaleway-instances:rules:SecurityGroupRules", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/cloudy-sky-software/pulumi-scaleway-instances",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SecurityGroupRules resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SecurityGroupRules Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new SecurityGroupRules(name, id, options);
        }
    }

    public sealed class SecurityGroupRulesArgs : global::Pulumi.ResourceArgs
    {
        [Input("rules")]
        private InputList<Inputs.ScalewayInstanceV1SetSecurityGroupRulesRequestRuleArgs>? _rules;

        /// <summary>
        /// List of rules to update in the security group
        /// </summary>
        public InputList<Inputs.ScalewayInstanceV1SetSecurityGroupRulesRequestRuleArgs> Rules
        {
            get => _rules ?? (_rules = new InputList<Inputs.ScalewayInstanceV1SetSecurityGroupRulesRequestRuleArgs>());
            set => _rules = value;
        }

        /// <summary>
        /// UUID of the security group to update the rules on
        /// </summary>
        [Input("security_group_id")]
        public Input<string>? Security_group_id { get; set; }

        /// <summary>
        /// The zone you want to target
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public SecurityGroupRulesArgs()
        {
        }
        public static new SecurityGroupRulesArgs Empty => new SecurityGroupRulesArgs();
    }
}
