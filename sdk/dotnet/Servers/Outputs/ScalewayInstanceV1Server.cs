// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.ScalewayInstances.Servers.Outputs
{

    [OutputType]
    public sealed class ScalewayInstanceV1Server
    {
        /// <summary>
        /// Provide as list of allowed actions on the server
        /// </summary>
        public readonly ImmutableArray<Pulumi.ScalewayInstances.Servers.ScalewayInstanceV1ServerAllowedActionsItem> AllowedActions;
        /// <summary>
        /// The server arch
        /// </summary>
        public readonly Pulumi.ScalewayInstances.Servers.ScalewayInstanceV1ServerArch? Arch;
        public readonly Pulumi.ScalewayInstances.Servers.ScalewayInstanceV1ServerBootType? BootType;
        public readonly Outputs.ScalewayInstanceV1Bootscript? Bootscript;
        /// <summary>
        /// The server commercial type (eg. GP1-M)
        /// </summary>
        public readonly string? CommercialType;
        /// <summary>
        /// The server creation date (RFC 3339 format)
        /// </summary>
        public readonly string? CreationDate;
        /// <summary>
        /// True if a dynamic IP is required
        /// </summary>
        public readonly bool? DynamicIpRequired;
        /// <summary>
        /// True if IPv6 is enabled
        /// </summary>
        public readonly bool? EnableIpv6;
        /// <summary>
        /// The server host name
        /// </summary>
        public readonly string? Hostname;
        /// <summary>
        /// The server unique ID
        /// </summary>
        public readonly string? Id;
        public readonly Outputs.ScalewayInstanceV1Image? Image;
        /// <summary>
        /// The server IPv6 address
        /// </summary>
        public readonly Outputs.ScalewayInstanceV1ServerIpv6Properties? Ipv6;
        /// <summary>
        /// The server location
        /// </summary>
        public readonly Outputs.ScalewayInstanceV1ServerLocationProperties? Location;
        /// <summary>
        /// The server planned maintenances
        /// </summary>
        public readonly ImmutableArray<Outputs.ScalewayInstanceV1ServerMaintenance> Maintenances;
        /// <summary>
        /// The server modification date (RFC 3339 format)
        /// </summary>
        public readonly string? ModificationDate;
        /// <summary>
        /// The server name
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The server organization ID
        /// </summary>
        public readonly string? Organization;
        public readonly Outputs.ScalewayInstanceV1PlacementGroup? PlacementGroup;
        /// <summary>
        /// The server private IP address
        /// </summary>
        public readonly string? PrivateIp;
        /// <summary>
        /// The server private NICs
        /// </summary>
        public readonly ImmutableArray<Outputs.ScalewayInstanceV1PrivateNIC> PrivateNics;
        /// <summary>
        /// The server project ID
        /// </summary>
        public readonly string? Project;
        /// <summary>
        /// The server protection option is activated
        /// </summary>
        public readonly bool? Protected;
        /// <summary>
        /// Information about the public IP
        /// </summary>
        public readonly Outputs.ScalewayInstanceV1ServerPublicIpProperties? PublicIp;
        /// <summary>
        /// The server security group
        /// </summary>
        public readonly Outputs.ScalewayInstanceV1ServerSecurityGroupProperties? SecurityGroup;
        /// <summary>
        /// The server state
        /// </summary>
        public readonly Pulumi.ScalewayInstances.Servers.ScalewayInstanceV1ServerState? State;
        /// <summary>
        /// The server state_detail
        /// </summary>
        public readonly string? StateDetail;
        /// <summary>
        /// The server associated tags
        /// </summary>
        public readonly ImmutableArray<string> Tags;
        /// <summary>
        /// The server volumes
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.ScalewayInstanceV1VolumeServer>? Volumes;
        /// <summary>
        /// The zone in which is the server
        /// </summary>
        public readonly string? Zone;

        [OutputConstructor]
        private ScalewayInstanceV1Server(
            ImmutableArray<Pulumi.ScalewayInstances.Servers.ScalewayInstanceV1ServerAllowedActionsItem> allowedActions,

            Pulumi.ScalewayInstances.Servers.ScalewayInstanceV1ServerArch? arch,

            Pulumi.ScalewayInstances.Servers.ScalewayInstanceV1ServerBootType? bootType,

            Outputs.ScalewayInstanceV1Bootscript? bootscript,

            string? commercialType,

            string? creationDate,

            bool? dynamicIpRequired,

            bool? enableIpv6,

            string? hostname,

            string? id,

            Outputs.ScalewayInstanceV1Image? image,

            Outputs.ScalewayInstanceV1ServerIpv6Properties? ipv6,

            Outputs.ScalewayInstanceV1ServerLocationProperties? location,

            ImmutableArray<Outputs.ScalewayInstanceV1ServerMaintenance> maintenances,

            string? modificationDate,

            string? name,

            string? organization,

            Outputs.ScalewayInstanceV1PlacementGroup? placementGroup,

            string? privateIp,

            ImmutableArray<Outputs.ScalewayInstanceV1PrivateNIC> privateNics,

            string? project,

            bool? @protected,

            Outputs.ScalewayInstanceV1ServerPublicIpProperties? publicIp,

            Outputs.ScalewayInstanceV1ServerSecurityGroupProperties? securityGroup,

            Pulumi.ScalewayInstances.Servers.ScalewayInstanceV1ServerState? state,

            string? stateDetail,

            ImmutableArray<string> tags,

            ImmutableDictionary<string, Outputs.ScalewayInstanceV1VolumeServer>? volumes,

            string? zone)
        {
            AllowedActions = allowedActions;
            Arch = arch;
            BootType = bootType;
            Bootscript = bootscript;
            CommercialType = commercialType;
            CreationDate = creationDate;
            DynamicIpRequired = dynamicIpRequired;
            EnableIpv6 = enableIpv6;
            Hostname = hostname;
            Id = id;
            Image = image;
            Ipv6 = ipv6;
            Location = location;
            Maintenances = maintenances;
            ModificationDate = modificationDate;
            Name = name;
            Organization = organization;
            PlacementGroup = placementGroup;
            PrivateIp = privateIp;
            PrivateNics = privateNics;
            Project = project;
            Protected = @protected;
            PublicIp = publicIp;
            SecurityGroup = securityGroup;
            State = state;
            StateDetail = stateDetail;
            Tags = tags;
            Volumes = volumes;
            Zone = zone;
        }
    }
}
