// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.ScalewayInstances.Servers.Outputs
{

    [OutputType]
    public sealed class ScalewayInstanceV1VolumeServerTemplate
    {
        /// <summary>
        /// The ID of the snapshot on which this volume will be based
        /// </summary>
        public readonly string? Base_snapshot;
        /// <summary>
        /// Force the server to boot on this volume
        /// </summary>
        public readonly bool? Boot;
        /// <summary>
        /// UUID of the volume
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// Name of the volume
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Organization ID of the volume
        /// </summary>
        public readonly string? Organization;
        /// <summary>
        /// Project ID of the volume
        /// </summary>
        public readonly string? Project;
        /// <summary>
        /// Disk size of the volume, must be a multiple of 512 (in bytes)
        /// </summary>
        public readonly double? Size;
        public readonly Pulumi.ScalewayInstances.Servers.ScalewayInstanceV1VolumeServerTemplateVolumeType? Volume_type;

        [OutputConstructor]
        private ScalewayInstanceV1VolumeServerTemplate(
            string? base_snapshot,

            bool? boot,

            string? id,

            string? name,

            string? organization,

            string? project,

            double? size,

            Pulumi.ScalewayInstances.Servers.ScalewayInstanceV1VolumeServerTemplateVolumeType? volume_type)
        {
            Base_snapshot = base_snapshot;
            Boot = boot;
            Id = id;
            Name = name;
            Organization = organization;
            Project = project;
            Size = size;
            Volume_type = volume_type;
        }
    }
}
