# coding=utf-8
# *** WARNING: this file was generated by pulumigen. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload, Awaitable
from .. import _utilities
from . import outputs
from ._enums import *

__all__ = [
    'ScalewayInstanceV1GetSecurityGroupResponse',
    'AwaitableScalewayInstanceV1GetSecurityGroupResponse',
    'get_security_group',
    'get_security_group_output',
]

@pulumi.output_type
class ScalewayInstanceV1GetSecurityGroupResponse:
    def __init__(__self__, security_group=None):
        if security_group and not isinstance(security_group, dict):
            raise TypeError("Expected argument 'security_group' to be a dict")
        pulumi.set(__self__, "security_group", security_group)

    @property
    @pulumi.getter(name="securityGroup")
    def security_group(self) -> Optional['outputs.ScalewayInstanceV1SecurityGroup']:
        return pulumi.get(self, "security_group")


class AwaitableScalewayInstanceV1GetSecurityGroupResponse(ScalewayInstanceV1GetSecurityGroupResponse):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return ScalewayInstanceV1GetSecurityGroupResponse(
            security_group=self.security_group)


def get_security_group(security_group_id: Optional[str] = None,
                       zone: Optional[str] = None,
                       opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableScalewayInstanceV1GetSecurityGroupResponse:
    """
    Use this data source to access information about an existing resource.

    :param str security_group_id: UUID of the security group you want to get
    :param str zone: The zone you want to target
    """
    __args__ = dict()
    __args__['securityGroupId'] = security_group_id
    __args__['zone'] = zone
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('scaleway-instances:security_groups:getSecurityGroup', __args__, opts=opts, typ=ScalewayInstanceV1GetSecurityGroupResponse).value

    return AwaitableScalewayInstanceV1GetSecurityGroupResponse(
        security_group=pulumi.get(__ret__, 'security_group'))


@_utilities.lift_output_func(get_security_group)
def get_security_group_output(security_group_id: Optional[pulumi.Input[str]] = None,
                              zone: Optional[pulumi.Input[str]] = None,
                              opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[ScalewayInstanceV1GetSecurityGroupResponse]:
    """
    Use this data source to access information about an existing resource.

    :param str security_group_id: UUID of the security group you want to get
    :param str zone: The zone you want to target
    """
    ...
