# coding=utf-8
# *** WARNING: this file was generated by pulumigen. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload, Awaitable
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._enums import *

__all__ = [
    'ScalewayInstanceV1ListVolumesResponse',
    'AwaitableScalewayInstanceV1ListVolumesResponse',
    'list_volumes',
    'list_volumes_output',
]

@pulumi.output_type
class ScalewayInstanceV1ListVolumesResponse:
    def __init__(__self__, volumes=None):
        if volumes and not isinstance(volumes, list):
            raise TypeError("Expected argument 'volumes' to be a list")
        pulumi.set(__self__, "volumes", volumes)

    @property
    @pulumi.getter
    def volumes(self) -> Optional[Sequence['outputs.ScalewayInstanceV1Volume']]:
        """
        List of volumes
        """
        return pulumi.get(self, "volumes")


class AwaitableScalewayInstanceV1ListVolumesResponse(ScalewayInstanceV1ListVolumesResponse):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return ScalewayInstanceV1ListVolumesResponse(
            volumes=self.volumes)


def list_volumes(zone: Optional[str] = None,
                 opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableScalewayInstanceV1ListVolumesResponse:
    """
    Use this data source to access information about an existing resource.

    :param str zone: The zone you want to target
    """
    __args__ = dict()
    __args__['zone'] = zone
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('scaleway-instances:volumes:listVolumes', __args__, opts=opts, typ=ScalewayInstanceV1ListVolumesResponse).value

    return AwaitableScalewayInstanceV1ListVolumesResponse(
        volumes=pulumi.get(__ret__, 'volumes'))
def list_volumes_output(zone: Optional[pulumi.Input[str]] = None,
                        opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[ScalewayInstanceV1ListVolumesResponse]:
    """
    Use this data source to access information about an existing resource.

    :param str zone: The zone you want to target
    """
    __args__ = dict()
    __args__['zone'] = zone
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('scaleway-instances:volumes:listVolumes', __args__, opts=opts, typ=ScalewayInstanceV1ListVolumesResponse)
    return __ret__.apply(lambda __response__: ScalewayInstanceV1ListVolumesResponse(
        volumes=pulumi.get(__response__, 'volumes')))
