# coding=utf-8
# *** WARNING: this file was generated by pulumigen. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from ._enums import *

__all__ = [
    'ScalewayInstanceV1SecurityGroupRule',
]

@pulumi.output_type
class ScalewayInstanceV1SecurityGroupRule(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "destPortFrom":
            suggest = "dest_port_from"
        elif key == "destPortTo":
            suggest = "dest_port_to"
        elif key == "ipRange":
            suggest = "ip_range"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ScalewayInstanceV1SecurityGroupRule. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ScalewayInstanceV1SecurityGroupRule.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ScalewayInstanceV1SecurityGroupRule.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 action: Optional['ScalewayInstanceV1SecurityGroupRuleAction'] = None,
                 dest_port_from: Optional[float] = None,
                 dest_port_to: Optional[float] = None,
                 direction: Optional['ScalewayInstanceV1SecurityGroupRuleDirection'] = None,
                 editable: Optional[bool] = None,
                 id: Optional[str] = None,
                 ip_range: Optional[str] = None,
                 position: Optional[float] = None,
                 protocol: Optional['ScalewayInstanceV1SecurityGroupRuleProtocol'] = None,
                 zone: Optional[str] = None):
        """
        :param str ip_range: (IP network)
        """
        if action is None:
            action = 'accept'
        if action is not None:
            pulumi.set(__self__, "action", action)
        if dest_port_from is not None:
            pulumi.set(__self__, "dest_port_from", dest_port_from)
        if dest_port_to is not None:
            pulumi.set(__self__, "dest_port_to", dest_port_to)
        if direction is None:
            direction = 'inbound'
        if direction is not None:
            pulumi.set(__self__, "direction", direction)
        if editable is not None:
            pulumi.set(__self__, "editable", editable)
        if id is not None:
            pulumi.set(__self__, "id", id)
        if ip_range is not None:
            pulumi.set(__self__, "ip_range", ip_range)
        if position is not None:
            pulumi.set(__self__, "position", position)
        if protocol is None:
            protocol = 'TCP'
        if protocol is not None:
            pulumi.set(__self__, "protocol", protocol)
        if zone is not None:
            pulumi.set(__self__, "zone", zone)

    @property
    @pulumi.getter
    def action(self) -> Optional['ScalewayInstanceV1SecurityGroupRuleAction']:
        return pulumi.get(self, "action")

    @property
    @pulumi.getter(name="destPortFrom")
    def dest_port_from(self) -> Optional[float]:
        return pulumi.get(self, "dest_port_from")

    @property
    @pulumi.getter(name="destPortTo")
    def dest_port_to(self) -> Optional[float]:
        return pulumi.get(self, "dest_port_to")

    @property
    @pulumi.getter
    def direction(self) -> Optional['ScalewayInstanceV1SecurityGroupRuleDirection']:
        return pulumi.get(self, "direction")

    @property
    @pulumi.getter
    def editable(self) -> Optional[bool]:
        return pulumi.get(self, "editable")

    @property
    @pulumi.getter
    def id(self) -> Optional[str]:
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="ipRange")
    def ip_range(self) -> Optional[str]:
        """
        (IP network)
        """
        return pulumi.get(self, "ip_range")

    @property
    @pulumi.getter
    def position(self) -> Optional[float]:
        return pulumi.get(self, "position")

    @property
    @pulumi.getter
    def protocol(self) -> Optional['ScalewayInstanceV1SecurityGroupRuleProtocol']:
        return pulumi.get(self, "protocol")

    @property
    @pulumi.getter
    def zone(self) -> Optional[str]:
        return pulumi.get(self, "zone")


