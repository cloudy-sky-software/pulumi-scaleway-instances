# coding=utf-8
# *** WARNING: this file was generated by pulumigen. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from ._enums import *

__all__ = [
    'ScalewayInstanceV1SetSecurityGroupRulesRequestRuleArgs',
]

@pulumi.input_type
class ScalewayInstanceV1SetSecurityGroupRulesRequestRuleArgs:
    def __init__(__self__, *,
                 action: Optional[pulumi.Input['ScalewayInstanceV1SetSecurityGroupRulesRequestRuleAction']] = None,
                 dest_port_from: Optional[pulumi.Input[float]] = None,
                 dest_port_to: Optional[pulumi.Input[float]] = None,
                 direction: Optional[pulumi.Input['ScalewayInstanceV1SetSecurityGroupRulesRequestRuleDirection']] = None,
                 editable: Optional[pulumi.Input[bool]] = None,
                 id: Optional[pulumi.Input[str]] = None,
                 ip_range: Optional[pulumi.Input[str]] = None,
                 position: Optional[pulumi.Input[float]] = None,
                 protocol: Optional[pulumi.Input['ScalewayInstanceV1SetSecurityGroupRulesRequestRuleProtocol']] = None,
                 zone: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input['ScalewayInstanceV1SetSecurityGroupRulesRequestRuleAction'] action: Action to apply when the rule matches a packet
        :param pulumi.Input[float] dest_port_from: Beginning of the range of ports this rule applies to (inclusive). This value will be set to null if protocol is ICMP or ANY
        :param pulumi.Input[float] dest_port_to: End of the range of ports this rule applies to (inclusive). This value will be set to null if protocol is ICMP or ANY, or if it is equal to dest_port_from
        :param pulumi.Input['ScalewayInstanceV1SetSecurityGroupRulesRequestRuleDirection'] direction: Direction the rule applies to
        :param pulumi.Input[bool] editable: Indicates if this rule is editable. Rules with the value false will be ignored
        :param pulumi.Input[str] id: UUID of the security rule to update. If no value is provided, a new rule will be created
        :param pulumi.Input[str] ip_range: The range of IP address this rules applies to (IP network)
        :param pulumi.Input[float] position: Position of this rule in the security group rules list. If several rules are passed with the same position, the resulting order is undefined
        :param pulumi.Input['ScalewayInstanceV1SetSecurityGroupRulesRequestRuleProtocol'] protocol: Protocol family this rule applies to
        :param pulumi.Input[str] zone: Zone of the rule. This field is ignored
        """
        if action is None:
            action = 'accept'
        if action is not None:
            pulumi.set(__self__, "action", action)
        if dest_port_from is not None:
            pulumi.set(__self__, "dest_port_from", dest_port_from)
        if dest_port_to is not None:
            pulumi.set(__self__, "dest_port_to", dest_port_to)
        if direction is None:
            direction = 'inbound'
        if direction is not None:
            pulumi.set(__self__, "direction", direction)
        if editable is not None:
            pulumi.set(__self__, "editable", editable)
        if id is not None:
            pulumi.set(__self__, "id", id)
        if ip_range is not None:
            pulumi.set(__self__, "ip_range", ip_range)
        if position is not None:
            pulumi.set(__self__, "position", position)
        if protocol is None:
            protocol = 'TCP'
        if protocol is not None:
            pulumi.set(__self__, "protocol", protocol)
        if zone is not None:
            pulumi.set(__self__, "zone", zone)

    @property
    @pulumi.getter
    def action(self) -> Optional[pulumi.Input['ScalewayInstanceV1SetSecurityGroupRulesRequestRuleAction']]:
        """
        Action to apply when the rule matches a packet
        """
        return pulumi.get(self, "action")

    @action.setter
    def action(self, value: Optional[pulumi.Input['ScalewayInstanceV1SetSecurityGroupRulesRequestRuleAction']]):
        pulumi.set(self, "action", value)

    @property
    @pulumi.getter
    def dest_port_from(self) -> Optional[pulumi.Input[float]]:
        """
        Beginning of the range of ports this rule applies to (inclusive). This value will be set to null if protocol is ICMP or ANY
        """
        return pulumi.get(self, "dest_port_from")

    @dest_port_from.setter
    def dest_port_from(self, value: Optional[pulumi.Input[float]]):
        pulumi.set(self, "dest_port_from", value)

    @property
    @pulumi.getter
    def dest_port_to(self) -> Optional[pulumi.Input[float]]:
        """
        End of the range of ports this rule applies to (inclusive). This value will be set to null if protocol is ICMP or ANY, or if it is equal to dest_port_from
        """
        return pulumi.get(self, "dest_port_to")

    @dest_port_to.setter
    def dest_port_to(self, value: Optional[pulumi.Input[float]]):
        pulumi.set(self, "dest_port_to", value)

    @property
    @pulumi.getter
    def direction(self) -> Optional[pulumi.Input['ScalewayInstanceV1SetSecurityGroupRulesRequestRuleDirection']]:
        """
        Direction the rule applies to
        """
        return pulumi.get(self, "direction")

    @direction.setter
    def direction(self, value: Optional[pulumi.Input['ScalewayInstanceV1SetSecurityGroupRulesRequestRuleDirection']]):
        pulumi.set(self, "direction", value)

    @property
    @pulumi.getter
    def editable(self) -> Optional[pulumi.Input[bool]]:
        """
        Indicates if this rule is editable. Rules with the value false will be ignored
        """
        return pulumi.get(self, "editable")

    @editable.setter
    def editable(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "editable", value)

    @property
    @pulumi.getter
    def id(self) -> Optional[pulumi.Input[str]]:
        """
        UUID of the security rule to update. If no value is provided, a new rule will be created
        """
        return pulumi.get(self, "id")

    @id.setter
    def id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "id", value)

    @property
    @pulumi.getter
    def ip_range(self) -> Optional[pulumi.Input[str]]:
        """
        The range of IP address this rules applies to (IP network)
        """
        return pulumi.get(self, "ip_range")

    @ip_range.setter
    def ip_range(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ip_range", value)

    @property
    @pulumi.getter
    def position(self) -> Optional[pulumi.Input[float]]:
        """
        Position of this rule in the security group rules list. If several rules are passed with the same position, the resulting order is undefined
        """
        return pulumi.get(self, "position")

    @position.setter
    def position(self, value: Optional[pulumi.Input[float]]):
        pulumi.set(self, "position", value)

    @property
    @pulumi.getter
    def protocol(self) -> Optional[pulumi.Input['ScalewayInstanceV1SetSecurityGroupRulesRequestRuleProtocol']]:
        """
        Protocol family this rule applies to
        """
        return pulumi.get(self, "protocol")

    @protocol.setter
    def protocol(self, value: Optional[pulumi.Input['ScalewayInstanceV1SetSecurityGroupRulesRequestRuleProtocol']]):
        pulumi.set(self, "protocol", value)

    @property
    @pulumi.getter
    def zone(self) -> Optional[pulumi.Input[str]]:
        """
        Zone of the rule. This field is ignored
        """
        return pulumi.get(self, "zone")

    @zone.setter
    def zone(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "zone", value)


