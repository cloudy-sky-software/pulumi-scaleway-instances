# coding=utf-8
# *** WARNING: this file was generated by pulumigen. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload, Awaitable
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._enums import *

__all__ = [
    'ScalewayInstanceV1ListImagesResponse',
    'AwaitableScalewayInstanceV1ListImagesResponse',
    'list_images',
    'list_images_output',
]

@pulumi.output_type
class ScalewayInstanceV1ListImagesResponse:
    def __init__(__self__, images=None):
        if images and not isinstance(images, list):
            raise TypeError("Expected argument 'images' to be a list")
        pulumi.set(__self__, "images", images)

    @property
    @pulumi.getter
    def images(self) -> Optional[Sequence['outputs.ScalewayInstanceV1Image']]:
        """
        List of images
        """
        return pulumi.get(self, "images")


class AwaitableScalewayInstanceV1ListImagesResponse(ScalewayInstanceV1ListImagesResponse):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return ScalewayInstanceV1ListImagesResponse(
            images=self.images)


def list_images(zone: Optional[builtins.str] = None,
                opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableScalewayInstanceV1ListImagesResponse:
    """
    Use this data source to access information about an existing resource.

    :param builtins.str zone: The zone you want to target
    """
    __args__ = dict()
    __args__['zone'] = zone
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('scaleway-instances:images:listImages', __args__, opts=opts, typ=ScalewayInstanceV1ListImagesResponse).value

    return AwaitableScalewayInstanceV1ListImagesResponse(
        images=pulumi.get(__ret__, 'images'))
def list_images_output(zone: Optional[pulumi.Input[builtins.str]] = None,
                       opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[ScalewayInstanceV1ListImagesResponse]:
    """
    Use this data source to access information about an existing resource.

    :param builtins.str zone: The zone you want to target
    """
    __args__ = dict()
    __args__['zone'] = zone
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('scaleway-instances:images:listImages', __args__, opts=opts, typ=ScalewayInstanceV1ListImagesResponse)
    return __ret__.apply(lambda __response__: ScalewayInstanceV1ListImagesResponse(
        images=pulumi.get(__response__, 'images')))
