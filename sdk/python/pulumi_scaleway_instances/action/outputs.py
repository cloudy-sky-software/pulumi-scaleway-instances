# coding=utf-8
# *** WARNING: this file was generated by pulumigen. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Callable, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from ._enums import *

__all__ = [
    'ScalewayInstanceV1ListServerActionsResponse',
    'ScalewayInstanceV1ServerActionRequestVolumeBackupTemplate',
    'ScalewayInstanceV1Task',
]

@pulumi.output_type
class ScalewayInstanceV1ListServerActionsResponse(dict):
    def __init__(__self__, *,
                 actions: Optional[Sequence['ScalewayInstanceV1ListServerActionsResponseActionsItem']] = None):
        ScalewayInstanceV1ListServerActionsResponse._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            actions=actions,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             actions: Optional[Sequence['ScalewayInstanceV1ListServerActionsResponseActionsItem']] = None,
             opts: Optional[pulumi.ResourceOptions]=None):
        if actions is not None:
            _setter("actions", actions)

    @property
    @pulumi.getter
    def actions(self) -> Optional[Sequence['ScalewayInstanceV1ListServerActionsResponseActionsItem']]:
        return pulumi.get(self, "actions")


@pulumi.output_type
class ScalewayInstanceV1ServerActionRequestVolumeBackupTemplate(dict):
    def __init__(__self__, *,
                 volume_type: Optional['ScalewayInstanceV1ServerActionRequestVolumeBackupTemplateVolumeType'] = None):
        ScalewayInstanceV1ServerActionRequestVolumeBackupTemplate._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            volume_type=volume_type,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             volume_type: Optional['ScalewayInstanceV1ServerActionRequestVolumeBackupTemplateVolumeType'] = None,
             opts: Optional[pulumi.ResourceOptions]=None):
        if volume_type is None:
            volume_type = 'l_ssd'
        if volume_type is not None:
            _setter("volume_type", volume_type)

    @property
    @pulumi.getter
    def volume_type(self) -> Optional['ScalewayInstanceV1ServerActionRequestVolumeBackupTemplateVolumeType']:
        return pulumi.get(self, "volume_type")


@pulumi.output_type
class ScalewayInstanceV1Task(dict):
    def __init__(__self__, *,
                 description: Optional[str] = None,
                 href_from: Optional[str] = None,
                 href_result: Optional[str] = None,
                 id: Optional[str] = None,
                 progress: Optional[float] = None,
                 started_at: Optional[str] = None,
                 status: Optional['ScalewayInstanceV1TaskStatus'] = None,
                 terminated_at: Optional[str] = None,
                 zone: Optional[str] = None):
        """
        :param str description: The description of the task
        :param str id: The unique ID of the task
        :param float progress: The progress of the task in percent
        :param str started_at: The task start date (RFC 3339 format)
        :param 'ScalewayInstanceV1TaskStatus' status: The task status
        :param str terminated_at: The task end date (RFC 3339 format)
        :param str zone: The zone in which is the task
        """
        ScalewayInstanceV1Task._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            description=description,
            href_from=href_from,
            href_result=href_result,
            id=id,
            progress=progress,
            started_at=started_at,
            status=status,
            terminated_at=terminated_at,
            zone=zone,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             description: Optional[str] = None,
             href_from: Optional[str] = None,
             href_result: Optional[str] = None,
             id: Optional[str] = None,
             progress: Optional[float] = None,
             started_at: Optional[str] = None,
             status: Optional['ScalewayInstanceV1TaskStatus'] = None,
             terminated_at: Optional[str] = None,
             zone: Optional[str] = None,
             opts: Optional[pulumi.ResourceOptions]=None):
        if description is not None:
            _setter("description", description)
        if href_from is not None:
            _setter("href_from", href_from)
        if href_result is not None:
            _setter("href_result", href_result)
        if id is not None:
            _setter("id", id)
        if progress is not None:
            _setter("progress", progress)
        if started_at is not None:
            _setter("started_at", started_at)
        if status is None:
            status = 'pending'
        if status is not None:
            _setter("status", status)
        if terminated_at is not None:
            _setter("terminated_at", terminated_at)
        if zone is not None:
            _setter("zone", zone)

    @property
    @pulumi.getter
    def description(self) -> Optional[str]:
        """
        The description of the task
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter
    def href_from(self) -> Optional[str]:
        return pulumi.get(self, "href_from")

    @property
    @pulumi.getter
    def href_result(self) -> Optional[str]:
        return pulumi.get(self, "href_result")

    @property
    @pulumi.getter
    def id(self) -> Optional[str]:
        """
        The unique ID of the task
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def progress(self) -> Optional[float]:
        """
        The progress of the task in percent
        """
        return pulumi.get(self, "progress")

    @property
    @pulumi.getter
    def started_at(self) -> Optional[str]:
        """
        The task start date (RFC 3339 format)
        """
        return pulumi.get(self, "started_at")

    @property
    @pulumi.getter
    def status(self) -> Optional['ScalewayInstanceV1TaskStatus']:
        """
        The task status
        """
        return pulumi.get(self, "status")

    @property
    @pulumi.getter
    def terminated_at(self) -> Optional[str]:
        """
        The task end date (RFC 3339 format)
        """
        return pulumi.get(self, "terminated_at")

    @property
    @pulumi.getter
    def zone(self) -> Optional[str]:
        """
        The zone in which is the task
        """
        return pulumi.get(self, "zone")


