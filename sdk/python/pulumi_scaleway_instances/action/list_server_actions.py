# coding=utf-8
# *** WARNING: this file was generated by pulumigen. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload, Awaitable
from .. import _utilities
from ._enums import *

__all__ = [
    'ScalewayInstanceV1ListServerActionsResponse',
    'AwaitableScalewayInstanceV1ListServerActionsResponse',
    'list_server_actions',
    'list_server_actions_output',
]

@pulumi.output_type
class ScalewayInstanceV1ListServerActionsResponse:
    def __init__(__self__, actions=None):
        if actions and not isinstance(actions, list):
            raise TypeError("Expected argument 'actions' to be a list")
        pulumi.set(__self__, "actions", actions)

    @property
    @pulumi.getter
    def actions(self) -> Optional[Sequence['ScalewayInstanceV1ListServerActionsResponseActionsItem']]:
        return pulumi.get(self, "actions")


class AwaitableScalewayInstanceV1ListServerActionsResponse(ScalewayInstanceV1ListServerActionsResponse):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return ScalewayInstanceV1ListServerActionsResponse(
            actions=self.actions)


def list_server_actions(server_id: Optional[str] = None,
                        zone: Optional[str] = None,
                        opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableScalewayInstanceV1ListServerActionsResponse:
    """
    Use this data source to access information about an existing resource.

    :param str zone: The zone you want to target
    """
    __args__ = dict()
    __args__['serverId'] = server_id
    __args__['zone'] = zone
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('scaleway-instances:action:listServerActions', __args__, opts=opts, typ=ScalewayInstanceV1ListServerActionsResponse).value

    return AwaitableScalewayInstanceV1ListServerActionsResponse(
        actions=pulumi.get(__ret__, 'actions'))


@_utilities.lift_output_func(list_server_actions)
def list_server_actions_output(server_id: Optional[pulumi.Input[str]] = None,
                               zone: Optional[pulumi.Input[str]] = None,
                               opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[ScalewayInstanceV1ListServerActionsResponse]:
    """
    Use this data source to access information about an existing resource.

    :param str zone: The zone you want to target
    """
    ...
