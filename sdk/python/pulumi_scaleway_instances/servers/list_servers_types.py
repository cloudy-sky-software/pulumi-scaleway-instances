# coding=utf-8
# *** WARNING: this file was generated by pulumigen. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload, Awaitable
from .. import _utilities
from . import outputs
from ._enums import *

__all__ = [
    'ScalewayInstanceV1ListServersTypesResponse',
    'AwaitableScalewayInstanceV1ListServersTypesResponse',
    'list_servers_types',
    'list_servers_types_output',
]

@pulumi.output_type
class ScalewayInstanceV1ListServersTypesResponse:
    def __init__(__self__, servers=None):
        if servers and not isinstance(servers, dict):
            raise TypeError("Expected argument 'servers' to be a dict")
        pulumi.set(__self__, "servers", servers)

    @property
    @pulumi.getter
    def servers(self) -> Optional[Mapping[str, 'outputs.ScalewayInstanceV1ServerType']]:
        """
        List of server types
        """
        return pulumi.get(self, "servers")


class AwaitableScalewayInstanceV1ListServersTypesResponse(ScalewayInstanceV1ListServersTypesResponse):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return ScalewayInstanceV1ListServersTypesResponse(
            servers=self.servers)


def list_servers_types(zone: Optional[str] = None,
                       opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableScalewayInstanceV1ListServersTypesResponse:
    """
    Use this data source to access information about an existing resource.

    :param str zone: The zone you want to target
    """
    __args__ = dict()
    __args__['zone'] = zone
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('scaleway-instances:servers:listServersTypes', __args__, opts=opts, typ=ScalewayInstanceV1ListServersTypesResponse).value

    return AwaitableScalewayInstanceV1ListServersTypesResponse(
        servers=pulumi.get(__ret__, 'servers'))


@_utilities.lift_output_func(list_servers_types)
def list_servers_types_output(zone: Optional[pulumi.Input[str]] = None,
                              opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[ScalewayInstanceV1ListServersTypesResponse]:
    """
    Use this data source to access information about an existing resource.

    :param str zone: The zone you want to target
    """
    ...
