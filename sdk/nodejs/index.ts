// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

// Export members:
export { ProviderArgs } from "./provider";
export type Provider = import("./provider").Provider;
export const Provider: typeof import("./provider").Provider = null as any;
utilities.lazyLoad(exports, ["Provider"], () => require("./provider"));


// Export sub-modules:
import * as action from "./action";
import * as availability from "./availability";
import * as bootscripts from "./bootscripts";
import * as config from "./config";
import * as dashboard from "./dashboard";
import * as images from "./images";
import * as ips from "./ips";
import * as placement_groups from "./placement_groups";
import * as private_nics from "./private_nics";
import * as rules from "./rules";
import * as security_groups from "./security_groups";
import * as servers from "./servers";
import * as snapshot_export from "./snapshot_export";
import * as snapshots from "./snapshots";
import * as types from "./types";
import * as user_data from "./user_data";
import * as volumes from "./volumes";

export {
    action,
    availability,
    bootscripts,
    config,
    dashboard,
    images,
    ips,
    placement_groups,
    private_nics,
    rules,
    security_groups,
    servers,
    snapshot_export,
    snapshots,
    types,
    user_data,
    volumes,
};
pulumi.runtime.registerResourcePackage("scaleway-instances", {
    version: utilities.getVersion(),
    constructProvider: (name: string, type: string, urn: string): pulumi.ProviderResource => {
        if (type !== "pulumi:providers:scaleway-instances") {
            throw new Error(`unknown provider type ${type}`);
        }
        return new Provider(name, <any>undefined, { urn });
    },
});
