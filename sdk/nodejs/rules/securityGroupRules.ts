// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export class SecurityGroupRules extends pulumi.CustomResource {
    /**
     * Get an existing SecurityGroupRules resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): SecurityGroupRules {
        return new SecurityGroupRules(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'scaleway-instances:rules:SecurityGroupRules';

    /**
     * Returns true if the given object is an instance of SecurityGroupRules.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SecurityGroupRules {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SecurityGroupRules.__pulumiType;
    }

    /**
     * List of rules to update in the security group
     */
    public readonly rules!: pulumi.Output<outputs.rules.ScalewayInstanceV1SetSecurityGroupRulesRequestRule[] | undefined>;

    /**
     * Create a SecurityGroupRules resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SecurityGroupRulesArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["rules"] = args ? args.rules : undefined;
            resourceInputs["security_group_id"] = args ? args.security_group_id : undefined;
            resourceInputs["zone"] = args ? args.zone : undefined;
        } else {
            resourceInputs["rules"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SecurityGroupRules.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a SecurityGroupRules resource.
 */
export interface SecurityGroupRulesArgs {
    /**
     * List of rules to update in the security group
     */
    rules?: pulumi.Input<pulumi.Input<inputs.rules.ScalewayInstanceV1SetSecurityGroupRulesRequestRuleArgs>[]>;
    /**
     * UUID of the security group to update the rules on
     */
    security_group_id?: pulumi.Input<string>;
    /**
     * The zone you want to target
     */
    zone?: pulumi.Input<string>;
}
