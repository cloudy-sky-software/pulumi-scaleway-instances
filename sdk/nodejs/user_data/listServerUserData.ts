// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export function listServerUserData(args: ListServerUserDataArgs, opts?: pulumi.InvokeOptions): Promise<ListServerUserDataResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("scaleway-instances:user_data:listServerUserData", {
        "server_id": args.server_id,
        "zone": args.zone,
    }, opts);
}

export interface ListServerUserDataArgs {
    /**
     * UUID of the server
     */
    server_id: string;
    /**
     * The zone you want to target
     */
    zone: string;
}

export interface ListServerUserDataResult {
    readonly items: outputs.user_data.ScalewayInstanceV1ListServerUserDataResponse;
}

export function listServerUserDataOutput(args: ListServerUserDataOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<ListServerUserDataResult> {
    return pulumi.output(args).apply(a => listServerUserData(a, opts))
}

export interface ListServerUserDataOutputArgs {
    /**
     * UUID of the server
     */
    server_id: pulumi.Input<string>;
    /**
     * The zone you want to target
     */
    zone: pulumi.Input<string>;
}
