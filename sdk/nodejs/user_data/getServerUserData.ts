// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export function getServerUserData(args: GetServerUserDataArgs, opts?: pulumi.InvokeOptions): Promise<GetServerUserDataResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("scaleway-instances:user_data:getServerUserData", {
        "id": args.id,
        "key": args.key,
        "zone": args.zone,
    }, opts);
}

export interface GetServerUserDataArgs {
    /**
     * UUID of the server
     */
    id: string;
    /**
     * Key of the user data to get
     */
    key: string;
    /**
     * The zone you want to target
     */
    zone: string;
}

export interface GetServerUserDataResult {
    readonly items: outputs.user_data.ScalewayStdFile;
}

export function getServerUserDataOutput(args: GetServerUserDataOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServerUserDataResult> {
    return pulumi.output(args).apply(a => getServerUserData(a, opts))
}

export interface GetServerUserDataOutputArgs {
    /**
     * UUID of the server
     */
    id: pulumi.Input<string>;
    /**
     * Key of the user data to get
     */
    key: pulumi.Input<string>;
    /**
     * The zone you want to target
     */
    zone: pulumi.Input<string>;
}
