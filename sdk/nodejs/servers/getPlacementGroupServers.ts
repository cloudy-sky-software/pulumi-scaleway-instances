// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export function getPlacementGroupServers(args: GetPlacementGroupServersArgs, opts?: pulumi.InvokeOptions): Promise<GetPlacementGroupServersResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("scaleway-instances:servers:getPlacementGroupServers", {
        "id": args.id,
        "zone": args.zone,
    }, opts);
}

export interface GetPlacementGroupServersArgs {
    /**
     * UUID of the placement group
     */
    id: string;
    /**
     * The zone you want to target
     */
    zone: string;
}

export interface GetPlacementGroupServersResult {
    readonly items: outputs.servers.ScalewayInstanceV1GetPlacementGroupServersResponse;
}

export function getPlacementGroupServersOutput(args: GetPlacementGroupServersOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPlacementGroupServersResult> {
    return pulumi.output(args).apply(a => getPlacementGroupServers(a, opts))
}

export interface GetPlacementGroupServersOutputArgs {
    /**
     * UUID of the placement group
     */
    id: pulumi.Input<string>;
    /**
     * The zone you want to target
     */
    zone: pulumi.Input<string>;
}
