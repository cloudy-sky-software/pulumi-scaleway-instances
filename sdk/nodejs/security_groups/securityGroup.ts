// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export class SecurityGroup extends pulumi.CustomResource {
    /**
     * Get an existing SecurityGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): SecurityGroup {
        return new SecurityGroup(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'scaleway-instances:security_groups:SecurityGroup';

    /**
     * Returns true if the given object is an instance of SecurityGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SecurityGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SecurityGroup.__pulumiType;
    }

    /**
     * The security group creation date (RFC 3339 format)
     */
    public /*out*/ readonly creationDate!: pulumi.Output<string | undefined>;
    /**
     * The security groups description
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * True if SMTP is blocked on IPv4 and IPv6. This feature is read only, please open a ticket if you need to make it configurable.
     */
    public readonly enableDefaultSecurity!: pulumi.Output<boolean | undefined>;
    /**
     * The default inbound policy
     */
    public readonly inboundDefaultPolicy!: pulumi.Output<enums.security_groups.InboundDefaultPolicy | undefined>;
    /**
     * The security group modification date (RFC 3339 format)
     */
    public /*out*/ readonly modificationDate!: pulumi.Output<string | undefined>;
    /**
     * The security groups name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The security groups organization ID
     */
    public readonly organization!: pulumi.Output<string | undefined>;
    /**
     * True if it is your default security group for this organization ID
     */
    public readonly organizationDefault!: pulumi.Output<boolean | undefined>;
    /**
     * The default outbound policy
     */
    public readonly outboundDefaultPolicy!: pulumi.Output<enums.security_groups.OutboundDefaultPolicy | undefined>;
    /**
     * The security group project ID
     */
    public readonly project!: pulumi.Output<string>;
    /**
     * True if it is your default security group for this project ID
     */
    public readonly projectDefault!: pulumi.Output<boolean | undefined>;
    public /*out*/ readonly securityGroup!: pulumi.Output<outputs.security_groups.ScalewayInstanceV1SecurityGroup | undefined>;
    /**
     * List of servers attached to this security group
     */
    public /*out*/ readonly servers!: pulumi.Output<outputs.security_groups.ScalewayInstanceV1ServerSummary[] | undefined>;
    /**
     * Security group state
     */
    public /*out*/ readonly state!: pulumi.Output<enums.security_groups.State | undefined>;
    /**
     * True if the security group is stateful
     */
    public readonly stateful!: pulumi.Output<boolean | undefined>;
    /**
     * The security group tags
     */
    public readonly tags!: pulumi.Output<string[] | undefined>;
    /**
     * The zone in which is the security group
     */
    public readonly zone!: pulumi.Output<string | undefined>;

    /**
     * Create a SecurityGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SecurityGroupArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.project === undefined) && !opts.urn) {
                throw new Error("Missing required property 'project'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["enableDefaultSecurity"] = args ? args.enableDefaultSecurity : undefined;
            resourceInputs["inboundDefaultPolicy"] = (args ? args.inboundDefaultPolicy : undefined) ?? "accept";
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["organization"] = args ? args.organization : undefined;
            resourceInputs["organizationDefault"] = args ? args.organizationDefault : undefined;
            resourceInputs["outboundDefaultPolicy"] = (args ? args.outboundDefaultPolicy : undefined) ?? "accept";
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["projectDefault"] = args ? args.projectDefault : undefined;
            resourceInputs["stateful"] = args ? args.stateful : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["zone"] = args ? args.zone : undefined;
            resourceInputs["creationDate"] = undefined /*out*/;
            resourceInputs["modificationDate"] = undefined /*out*/;
            resourceInputs["securityGroup"] = undefined /*out*/;
            resourceInputs["servers"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
        } else {
            resourceInputs["creationDate"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["enableDefaultSecurity"] = undefined /*out*/;
            resourceInputs["inboundDefaultPolicy"] = undefined /*out*/;
            resourceInputs["modificationDate"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["organization"] = undefined /*out*/;
            resourceInputs["organizationDefault"] = undefined /*out*/;
            resourceInputs["outboundDefaultPolicy"] = undefined /*out*/;
            resourceInputs["project"] = undefined /*out*/;
            resourceInputs["projectDefault"] = undefined /*out*/;
            resourceInputs["securityGroup"] = undefined /*out*/;
            resourceInputs["servers"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["stateful"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["zone"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SecurityGroup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a SecurityGroup resource.
 */
export interface SecurityGroupArgs {
    /**
     * The security groups description
     */
    description?: pulumi.Input<string>;
    /**
     * True if SMTP is blocked on IPv4 and IPv6. This feature is read only, please open a ticket if you need to make it configurable.
     */
    enableDefaultSecurity?: pulumi.Input<boolean>;
    /**
     * The default inbound policy
     */
    inboundDefaultPolicy?: pulumi.Input<enums.security_groups.InboundDefaultPolicy>;
    /**
     * The security groups name
     */
    name?: pulumi.Input<string>;
    /**
     * The security groups organization ID
     */
    organization?: pulumi.Input<string>;
    /**
     * True if it is your default security group for this organization ID
     */
    organizationDefault?: pulumi.Input<boolean>;
    /**
     * The default outbound policy
     */
    outboundDefaultPolicy?: pulumi.Input<enums.security_groups.OutboundDefaultPolicy>;
    /**
     * The security group project ID
     */
    project: pulumi.Input<string>;
    /**
     * True if it is your default security group for this project ID
     */
    projectDefault?: pulumi.Input<boolean>;
    /**
     * True if the security group is stateful
     */
    stateful?: pulumi.Input<boolean>;
    /**
     * The security group tags
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The zone you want to target
     */
    zone?: pulumi.Input<string>;
}
