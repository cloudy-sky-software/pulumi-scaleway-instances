// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { GetSecurityGroupArgs, GetSecurityGroupOutputArgs } from "./getSecurityGroup";
export const getSecurityGroup: typeof import("./getSecurityGroup").getSecurityGroup = null as any;
export const getSecurityGroupOutput: typeof import("./getSecurityGroup").getSecurityGroupOutput = null as any;
utilities.lazyLoad(exports, ["getSecurityGroup","getSecurityGroupOutput"], () => require("./getSecurityGroup"));

export { ListSecurityGroupsArgs, ListSecurityGroupsOutputArgs } from "./listSecurityGroups";
export const listSecurityGroups: typeof import("./listSecurityGroups").listSecurityGroups = null as any;
export const listSecurityGroupsOutput: typeof import("./listSecurityGroups").listSecurityGroupsOutput = null as any;
utilities.lazyLoad(exports, ["listSecurityGroups","listSecurityGroupsOutput"], () => require("./listSecurityGroups"));

export { SecurityGroupArgs } from "./securityGroup";
export type SecurityGroup = import("./securityGroup").SecurityGroup;
export const SecurityGroup: typeof import("./securityGroup").SecurityGroup = null as any;
utilities.lazyLoad(exports, ["SecurityGroup"], () => require("./securityGroup"));


// Export enums:
export * from "../types/enums/security_groups";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "scaleway-instances:security_groups:SecurityGroup":
                return new SecurityGroup(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("scaleway-instances", "security_groups", _module)
