// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export function getServerTypesAvailability(args: GetServerTypesAvailabilityArgs, opts?: pulumi.InvokeOptions): Promise<GetServerTypesAvailabilityResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("scaleway-instances:availability:getServerTypesAvailability", {
        "zone": args.zone,
    }, opts);
}

export interface GetServerTypesAvailabilityArgs {
    /**
     * The zone you want to target
     */
    zone: string;
}

export interface GetServerTypesAvailabilityResult {
    readonly items: outputs.availability.ScalewayInstanceV1GetServerTypesAvailabilityResponse;
}
export function getServerTypesAvailabilityOutput(args: GetServerTypesAvailabilityOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServerTypesAvailabilityResult> {
    return pulumi.output(args).apply((a: any) => getServerTypesAvailability(a, opts))
}

export interface GetServerTypesAvailabilityOutputArgs {
    /**
     * The zone you want to target
     */
    zone: pulumi.Input<string>;
}
