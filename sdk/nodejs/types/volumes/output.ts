// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

export interface ScalewayInstanceV1GetVolumeResponse {
    volume?: outputs.volumes.ScalewayInstanceV1Volume;
}
/**
 * scalewayInstanceV1GetVolumeResponseProvideDefaults sets the appropriate defaults for ScalewayInstanceV1GetVolumeResponse
 */
export function scalewayInstanceV1GetVolumeResponseProvideDefaults(val: ScalewayInstanceV1GetVolumeResponse): ScalewayInstanceV1GetVolumeResponse {
    return {
        ...val,
        volume: (val.volume ? outputs.volumes.scalewayInstanceV1VolumeProvideDefaults(val.volume) : undefined),
    };
}

export interface ScalewayInstanceV1ListVolumesResponse {
    /**
     * List of volumes
     */
    volumes?: outputs.volumes.ScalewayInstanceV1Volume[];
}

export interface ScalewayInstanceV1ListVolumesTypesResponse {
    /**
     * Map of volume types
     */
    volumes?: {[key: string]: outputs.volumes.ScalewayInstanceV1VolumeType};
}

export interface ScalewayInstanceV1Volume {
    /**
     * The volume creation date (RFC 3339 format)
     */
    creation_date?: string;
    /**
     * Show the volume NBD export URI
     */
    export_uri?: string;
    id?: string;
    /**
     * The volume modification date (RFC 3339 format)
     */
    modification_date?: string;
    /**
     * The volume name
     */
    name: string;
    /**
     * The volume organization ID
     */
    organization?: string;
    /**
     * The volume project ID
     */
    project: string;
    /**
     * The server attached to the volume
     */
    server?: outputs.volumes.ScalewayInstanceV1VolumeServerProperties;
    /**
     * The volume disk size (in bytes)
     */
    size?: number;
    state?: enums.volumes.ScalewayInstanceV1VolumeState;
    /**
     * The volume tags
     */
    tags?: string[];
    volume_type?: enums.volumes.ScalewayInstanceV1VolumeVolumeType;
    /**
     * The zone in which is the volume
     */
    zone?: string;
}
/**
 * scalewayInstanceV1VolumeProvideDefaults sets the appropriate defaults for ScalewayInstanceV1Volume
 */
export function scalewayInstanceV1VolumeProvideDefaults(val: ScalewayInstanceV1Volume): ScalewayInstanceV1Volume {
    return {
        ...val,
        state: (val.state) ?? "available",
        volume_type: (val.volume_type) ?? "l_ssd",
    };
}

/**
 * The server attached to the volume
 */
export interface ScalewayInstanceV1VolumeServerProperties {
    id?: string;
    name?: string;
}

export interface ScalewayInstanceV1VolumeType {
    capabilities?: outputs.volumes.ScalewayInstanceV1VolumeTypeCapabilities;
    constraints?: outputs.volumes.ScalewayInstanceV1VolumeTypeConstraints;
    display_name?: string;
}

export interface ScalewayInstanceV1VolumeTypeCapabilities {
    snapshot?: boolean;
}

export interface ScalewayInstanceV1VolumeTypeConstraints {
    /**
     * (in bytes)
     */
    max?: number;
    /**
     * (in bytes)
     */
    min?: number;
}

/**
 * The server attached to the volume
 */
export interface ServerProperties {
    id?: string;
    name?: string;
}

