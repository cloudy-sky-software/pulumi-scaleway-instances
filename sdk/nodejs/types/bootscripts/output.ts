// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

export interface ScalewayInstanceV1Bootscript {
    /**
     * The bootscript arch
     */
    arch?: enums.bootscripts.ScalewayInstanceV1BootscriptArch;
    /**
     * The bootscript arguments
     */
    bootcmdargs?: string;
    /**
     * Dispmay if the bootscript is the default bootscript if no other boot option is configured
     */
    default?: boolean;
    /**
     * Provide information regarding a Device Tree Binary (dtb) for use with C1 servers
     */
    dtb?: string;
    /**
     * The bootscript ID
     */
    id?: string;
    /**
     * The initrd (initial ramdisk) configuration
     */
    initrd?: string;
    /**
     * The server kernel version
     */
    kernel?: string;
    /**
     * The bootscript organization ID
     */
    organization?: string;
    /**
     * The bootscript project ID
     */
    project?: string;
    /**
     * Provide information if the bootscript is public
     */
    public?: boolean;
    /**
     * The bootscript title
     */
    title?: string;
    /**
     * The zone in which is the bootscript
     */
    zone?: string;
}
/**
 * scalewayInstanceV1BootscriptProvideDefaults sets the appropriate defaults for ScalewayInstanceV1Bootscript
 */
export function scalewayInstanceV1BootscriptProvideDefaults(val: ScalewayInstanceV1Bootscript): ScalewayInstanceV1Bootscript {
    return {
        ...val,
        arch: (val.arch) ?? "x86_64",
    };
}

export interface ScalewayInstanceV1GetBootscriptResponse {
    bootscript?: outputs.bootscripts.ScalewayInstanceV1Bootscript;
}
/**
 * scalewayInstanceV1GetBootscriptResponseProvideDefaults sets the appropriate defaults for ScalewayInstanceV1GetBootscriptResponse
 */
export function scalewayInstanceV1GetBootscriptResponseProvideDefaults(val: ScalewayInstanceV1GetBootscriptResponse): ScalewayInstanceV1GetBootscriptResponse {
    return {
        ...val,
        bootscript: (val.bootscript ? outputs.bootscripts.scalewayInstanceV1BootscriptProvideDefaults(val.bootscript) : undefined),
    };
}

export interface ScalewayInstanceV1ListBootscriptsResponse {
    /**
     * List of bootscripts
     */
    bootscripts?: outputs.bootscripts.ScalewayInstanceV1Bootscript[];
}

