// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export function getImage(args: GetImageArgs, opts?: pulumi.InvokeOptions): Promise<GetImageResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("scaleway-instances:images:getImage", {
        "id": args.id,
        "zone": args.zone,
    }, opts);
}

export interface GetImageArgs {
    /**
     * UUID of the image you want to get
     */
    id: string;
    /**
     * The zone you want to target
     */
    zone: string;
}

export interface GetImageResult {
    readonly items: outputs.images.ScalewayInstanceV1GetImageResponse;
}

export function getImageOutput(args: GetImageOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetImageResult> {
    return pulumi.output(args).apply(a => getImage(a, opts))
}

export interface GetImageOutputArgs {
    /**
     * UUID of the image you want to get
     */
    id: pulumi.Input<string>;
    /**
     * The zone you want to target
     */
    zone: pulumi.Input<string>;
}
