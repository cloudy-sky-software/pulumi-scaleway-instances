// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export function getSnapshot(args: GetSnapshotArgs, opts?: pulumi.InvokeOptions): Promise<outputs.snapshots.ScalewayInstanceV1GetSnapshotResponse> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("scaleway-instances:snapshots:getSnapshot", {
        "id": args.id,
        "zone": args.zone,
    }, opts);
}

export interface GetSnapshotArgs {
    /**
     * UUID of the snapshot you want to get
     */
    id: string;
    /**
     * The zone you want to target
     */
    zone: string;
}
export function getSnapshotOutput(args: GetSnapshotOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<outputs.snapshots.ScalewayInstanceV1GetSnapshotResponse> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("scaleway-instances:snapshots:getSnapshot", {
        "id": args.id,
        "zone": args.zone,
    }, opts);
}

export interface GetSnapshotOutputArgs {
    /**
     * UUID of the snapshot you want to get
     */
    id: pulumi.Input<string>;
    /**
     * The zone you want to target
     */
    zone: pulumi.Input<string>;
}
